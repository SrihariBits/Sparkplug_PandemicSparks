{"ast":null,"code":"import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as Geometry from '../../utils/geometry';\nvar STYLE = {\n  stroke: '#D32F2F',\n  strokeWidth: \"1px\"\n};\nexport default function ActiveDrawingHelper(_ref) {\n  var snap = _ref.snap,\n      width = _ref.width,\n      height = _ref.height;\n\n  switch (snap.type) {\n    case 'point':\n      return React.createElement('g', {\n        transform: 'translate(' + snap.x + ' ' + snap.y + ')'\n      }, React.createElement('line', {\n        x1: '0',\n        y1: '-70',\n        x2: '0',\n        y2: '70',\n        style: STYLE\n      }), React.createElement('line', {\n        x1: '-70',\n        y1: '0',\n        x2: '70',\n        y2: '0',\n        style: STYLE\n      }));\n\n    case 'line':\n      var h0 = Geometry.horizontalLine(0);\n      var h1 = Geometry.horizontalLine(height);\n      var pointH0 = Geometry.twoLinesIntersection(snap.a, snap.b, snap.c, h0.a, h0.b, h0.c);\n      var pointH1 = Geometry.twoLinesIntersection(snap.a, snap.b, snap.c, h1.a, h1.b, h1.c);\n      var v0 = Geometry.verticalLine(0);\n      var v1 = Geometry.verticalLine(width);\n      var pointV0 = Geometry.twoLinesIntersection(snap.a, snap.b, snap.c, v0.a, v0.b, v0.c);\n      var pointV1 = Geometry.twoLinesIntersection(snap.a, snap.b, snap.c, v1.a, v1.b, v1.c);\n      if (pointH0 && pointH1) return React.createElement('line', {\n        x1: pointH0.x,\n        y1: pointH0.y,\n        x2: pointH1.x,\n        y2: pointH1.y,\n        style: STYLE\n      });\n      if (pointV0 && pointV1) return React.createElement('line', {\n        x1: pointV0.x,\n        y1: pointV0.y,\n        x2: pointV1.x,\n        y2: pointV1.y,\n        style: STYLE\n      });\n      return null;\n\n    case 'line-segment':\n      return React.createElement('line', {\n        x1: snap.x1,\n        y1: snap.y1,\n        x2: snap.x2,\n        y2: snap.y2,\n        style: STYLE\n      });\n\n    default:\n      return null;\n  }\n}\nActiveDrawingHelper.propTypes = {\n  snap: PropTypes.object.isRequired,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired\n};","map":{"version":3,"sources":["/home/srihari/Desktop/Sparkplug_PandemicSparks/grid/node_modules/react-planner/es/components/viewer2d/snap.js"],"names":["React","PropTypes","Geometry","STYLE","stroke","strokeWidth","ActiveDrawingHelper","_ref","snap","width","height","type","createElement","transform","x","y","x1","y1","x2","y2","style","h0","horizontalLine","h1","pointH0","twoLinesIntersection","a","b","c","pointH1","v0","verticalLine","v1","pointV0","pointV1","propTypes","object","isRequired","number"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport * as Geometry from '../../utils/geometry';\n\nvar STYLE = {\n  stroke: '#D32F2F',\n  strokeWidth: \"1px\"\n};\n\nexport default function ActiveDrawingHelper(_ref) {\n  var snap = _ref.snap,\n      width = _ref.width,\n      height = _ref.height;\n\n  switch (snap.type) {\n    case 'point':\n      return React.createElement(\n        'g',\n        { transform: 'translate(' + snap.x + ' ' + snap.y + ')' },\n        React.createElement('line', { x1: '0', y1: '-70', x2: '0', y2: '70', style: STYLE }),\n        React.createElement('line', { x1: '-70', y1: '0', x2: '70', y2: '0', style: STYLE })\n      );\n\n    case 'line':\n      var h0 = Geometry.horizontalLine(0);\n      var h1 = Geometry.horizontalLine(height);\n      var pointH0 = Geometry.twoLinesIntersection(snap.a, snap.b, snap.c, h0.a, h0.b, h0.c);\n      var pointH1 = Geometry.twoLinesIntersection(snap.a, snap.b, snap.c, h1.a, h1.b, h1.c);\n\n      var v0 = Geometry.verticalLine(0);\n      var v1 = Geometry.verticalLine(width);\n      var pointV0 = Geometry.twoLinesIntersection(snap.a, snap.b, snap.c, v0.a, v0.b, v0.c);\n      var pointV1 = Geometry.twoLinesIntersection(snap.a, snap.b, snap.c, v1.a, v1.b, v1.c);\n\n      if (pointH0 && pointH1) return React.createElement('line', { x1: pointH0.x, y1: pointH0.y, x2: pointH1.x, y2: pointH1.y, style: STYLE });\n      if (pointV0 && pointV1) return React.createElement('line', { x1: pointV0.x, y1: pointV0.y, x2: pointV1.x, y2: pointV1.y, style: STYLE });\n      return null;\n\n    case 'line-segment':\n      return React.createElement('line', { x1: snap.x1, y1: snap.y1, x2: snap.x2, y2: snap.y2, style: STYLE });\n\n    default:\n      return null;\n  }\n}\n\nActiveDrawingHelper.propTypes = {\n  snap: PropTypes.object.isRequired,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired\n};"]},"metadata":{},"sourceType":"module"}