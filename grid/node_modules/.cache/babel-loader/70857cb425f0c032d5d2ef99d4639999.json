{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport PanelElementEditor from './panel-element-editor/panel-element-editor';\nimport PanelGroupEditor from './panel-group-editor';\nimport PanelMultiElementsEditor from './panel-element-editor/panel-multi-elements-editor';\nimport PanelLayers from './panel-layers';\nimport PanelGuides from './panel-guides';\nimport PanelGroups from './panel-groups';\nimport PanelLayerElements from './panel-layer-elements';\nimport * as SharedStyle from '../../shared-style';\nimport If from '../../utils/react-if';\nimport DisplayElement from './DisplayElement';\nvar STYLE = {\n  backgroundColor: SharedStyle.PRIMARY_COLOR.main,\n  display: 'block',\n  overflowY: 'auto',\n  overflowX: 'hidden',\n  paddingBottom: '20px'\n};\n\nvar sortButtonsCb = function sortButtonsCb(a, b) {\n  if (a.index === undefined || a.index === null) {\n    a.index = Number.MAX_SAFE_INTEGER;\n  }\n\n  if (b.index === undefined || b.index === null) {\n    b.index = Number.MAX_SAFE_INTEGER;\n  }\n\n  return a.index - b.index;\n};\n\nvar mapButtonsCb = function mapButtonsCb(el, ind) {\n  return React.createElement(If, {\n    key: ind,\n    condition: el.condition,\n    style: {\n      position: 'relative'\n    }\n  }, el.dom);\n};\n\nexport default function Sidebar(_ref) {\n  var state = _ref.state,\n      width = _ref.width,\n      height = _ref.height,\n      isAdmin = _ref.isAdmin,\n      sidebarComponents = _ref.sidebarComponents;\n  var selectedLayer = state.getIn(['scene', 'selectedLayer']); //TODO change in multi-layer check\n\n  var selected = state.getIn(['scene', 'layers', selectedLayer, 'selected']);\n  var multiselected = selected.lines.size > 1 || selected.items.size > 1 || selected.holes.size > 1 || selected.areas.size > 1 || selected.lines.size + selected.items.size + selected.holes.size + selected.areas.size > 1;\n  var selectedGroup = state.getIn(['scene', 'groups']).findEntry(function (g) {\n    return g.get('selected');\n  });\n  var sorter = [];\n\n  if (isAdmin) {\n    sorter = [\n    /*{ index: 0, condition: true, dom: React.createElement(PanelGuides, { state: state }) }, { index: 1, condition: true, dom: React.createElement(PanelLayers, { state: state }) }, { index: 2, condition: true, dom: React.createElement(PanelLayerElements, { mode: state.mode, layers: state.scene.layers, selectedLayer: state.scene.selectedLayer }) }, { index: 3, condition: true, dom: React.createElement(PanelGroups, { mode: state.mode, groups: state.scene.groups, layers: state.scene.layers }) },*/\n    {\n      index: 4,\n      condition: !multiselected,\n      dom: React.createElement(PanelElementEditor, {\n        state: state\n      })\n    }, {\n      index: 6,\n      condition: !!selectedGroup,\n      dom: React.createElement(PanelGroupEditor, {\n        state: state,\n        groupID: selectedGroup ? selectedGroup[0] : null\n      })\n    }\n    /*{ index: 7, condition: true, dom: React.createElement(DisplayElement, { something:false}) }*/\n    ];\n  }\n\n  sorter = sorter.concat(sidebarComponents.map(function (Component, key) {\n    return Component.prototype ? //if is a react component\n    {\n      condition: true,\n      dom: React.createElement(Component, {\n        state: state,\n        key: key\n      })\n    } : {\n      //else is a sortable toolbar button\n      index: Component.index,\n      condition: Component.condition,\n      dom: React.createElement(Component.dom, {\n        state: state,\n        key: key\n      })\n    };\n  }));\n  return React.createElement('aside', {\n    style: _extends({\n      width: width,\n      height: height\n    }, STYLE),\n    onKeyDown: function onKeyDown(event) {\n      return event.stopPropagation();\n    },\n    onKeyUp: function onKeyUp(event) {\n      return event.stopPropagation();\n    },\n    className: 'sidebar'\n  }, sorter.sort(sortButtonsCb).map(mapButtonsCb));\n}\nSidebar.propTypes = {\n  state: PropTypes.object.isRequired,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired\n};","map":{"version":3,"sources":["/home/srihari/Desktop/Sparkplug_PandemicSparks/grid/node_modules/react-planner/es/components/sidebar/sidebar.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","React","PropTypes","PanelElementEditor","PanelGroupEditor","PanelMultiElementsEditor","PanelLayers","PanelGuides","PanelGroups","PanelLayerElements","SharedStyle","If","DisplayElement","STYLE","backgroundColor","PRIMARY_COLOR","main","display","overflowY","overflowX","paddingBottom","sortButtonsCb","a","b","index","undefined","Number","MAX_SAFE_INTEGER","mapButtonsCb","el","ind","createElement","condition","style","position","dom","Sidebar","_ref","state","width","height","isAdmin","sidebarComponents","selectedLayer","getIn","selected","multiselected","lines","size","items","holes","areas","selectedGroup","findEntry","g","get","sorter","groupID","concat","map","Component","onKeyDown","event","stopPropagation","onKeyUp","className","sort","propTypes","object","isRequired","number"],"mappings":"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","sourcesContent":["var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport PanelElementEditor from './panel-element-editor/panel-element-editor';\nimport PanelGroupEditor from './panel-group-editor';\nimport PanelMultiElementsEditor from './panel-element-editor/panel-multi-elements-editor';\nimport PanelLayers from './panel-layers';\nimport PanelGuides from './panel-guides';\nimport PanelGroups from './panel-groups';\nimport PanelLayerElements from './panel-layer-elements';\nimport * as SharedStyle from '../../shared-style';\nimport If from '../../utils/react-if';\nimport DisplayElement from './DisplayElement';\n\nvar STYLE = {\n  backgroundColor: SharedStyle.PRIMARY_COLOR.main,\n  display: 'block',\n  overflowY: 'auto',\n  overflowX: 'hidden',\n  paddingBottom: '20px'\n};\n\nvar sortButtonsCb = function sortButtonsCb(a, b) {\n  if (a.index === undefined || a.index === null) {\n    a.index = Number.MAX_SAFE_INTEGER;\n  }\n\n  if (b.index === undefined || b.index === null) {\n    b.index = Number.MAX_SAFE_INTEGER;\n  }\n\n  return a.index - b.index;\n};\n\nvar mapButtonsCb = function mapButtonsCb(el, ind) {\n  return React.createElement(\n    If,\n    { key: ind, condition: el.condition, style: { position: 'relative' } },\n    el.dom\n  );\n};\n\nexport default function Sidebar(_ref) {\n  var state = _ref.state,\n      width = _ref.width,\n      height = _ref.height,\n      isAdmin = _ref.isAdmin,\n      sidebarComponents = _ref.sidebarComponents;\n\n\n  var selectedLayer = state.getIn(['scene', 'selectedLayer']);\n\n  //TODO change in multi-layer check\n  var selected = state.getIn(['scene', 'layers', selectedLayer, 'selected']);\n\n  var multiselected = selected.lines.size > 1 || selected.items.size > 1 || selected.holes.size > 1 || selected.areas.size > 1 || selected.lines.size + selected.items.size + selected.holes.size + selected.areas.size > 1;\n\n  var selectedGroup = state.getIn(['scene', 'groups']).findEntry(function (g) {\n    return g.get('selected');\n  });\n\n  var sorter = [];\n  if(isAdmin)\n  {\n    sorter = [/*{ index: 0, condition: true, dom: React.createElement(PanelGuides, { state: state }) }, { index: 1, condition: true, dom: React.createElement(PanelLayers, { state: state }) }, { index: 2, condition: true, dom: React.createElement(PanelLayerElements, { mode: state.mode, layers: state.scene.layers, selectedLayer: state.scene.selectedLayer }) }, { index: 3, condition: true, dom: React.createElement(PanelGroups, { mode: state.mode, groups: state.scene.groups, layers: state.scene.layers }) },*/ { index: 4, condition: !multiselected, dom: React.createElement(PanelElementEditor, { state: state }) },\n    { index: 6, condition: !!selectedGroup, dom: React.createElement(PanelGroupEditor, { state: state, groupID: selectedGroup ? selectedGroup[0] : null }) },/*{ index: 7, condition: true, dom: React.createElement(DisplayElement, { something:false}) }*/];\n  }\n  \n  sorter = sorter.concat(sidebarComponents.map(function (Component, key) {\n    return Component.prototype ? //if is a react component\n    {\n      condition: true,\n      dom: React.createElement(Component, { state: state, key: key })\n    } : { //else is a sortable toolbar button\n      index: Component.index,\n      condition: Component.condition,\n      dom: React.createElement(Component.dom, { state: state, key: key })\n    };\n  }));\n\n  return React.createElement(\n    'aside',\n    {\n      style: _extends({ width: width, height: height }, STYLE),\n      onKeyDown: function onKeyDown(event) {\n        return event.stopPropagation();\n      },\n      onKeyUp: function onKeyUp(event) {\n        return event.stopPropagation();\n      },\n      className: 'sidebar'\n    },\n    sorter.sort(sortButtonsCb).map(mapButtonsCb)\n  );\n}\n\nSidebar.propTypes = {\n  state: PropTypes.object.isRequired,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired\n};"]},"metadata":{},"sourceType":"module"}