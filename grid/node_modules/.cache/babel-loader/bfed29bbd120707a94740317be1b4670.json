{"ast":null,"code":"var _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n\n    return _arr;\n  }\n\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Map, fromJS } from 'immutable';\nimport AttributesEditor from './attributes-editor/attributes-editor';\nimport { GeometryUtils, MathUtils } from '../../../utils/export';\nimport * as SharedStyle from '../../../shared-style';\nimport convert from 'convert-units';\nimport { MdContentCopy, MdContentPaste } from 'react-icons/md';\nvar PRECISION = 2;\nvar attrPorpSeparatorStyle = {\n  margin: '0.5em 0.25em 0.5em 0',\n  border: '2px solid ' + SharedStyle.SECONDARY_COLOR.alt,\n  position: 'relative',\n  height: '2.5em',\n  borderRadius: '2px'\n};\nvar headActionStyle = {\n  position: 'absolute',\n  right: '0.5em',\n  top: '0.5em'\n};\nvar iconHeadStyle = {\n  float: 'right',\n  margin: '-3px 4px 0px 0px',\n  padding: 0,\n  cursor: 'pointer',\n  fontSize: '1.4em'\n};\n\nvar ElementEditor = function (_Component) {\n  _inherits(ElementEditor, _Component);\n\n  function ElementEditor(props, context) {\n    _classCallCheck(this, ElementEditor);\n\n    var _this = _possibleConstructorReturn(this, (ElementEditor.__proto__ || Object.getPrototypeOf(ElementEditor)).call(this, props, context));\n\n    _this.state = {\n      attributesFormData: _this.initAttrData(_this.props.element, _this.props.layer, _this.props.state),\n      propertiesFormData: _this.initPropData(_this.props.element, _this.props.layer, _this.props.state)\n    };\n    _this.updateAttribute = _this.updateAttribute.bind(_this);\n    return _this;\n  }\n\n  _createClass(ElementEditor, [{\n    key: 'shouldComponentUpdate',\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      if (this.state.attributesFormData.hashCode() !== nextState.attributesFormData.hashCode() || this.state.propertiesFormData.hashCode() !== nextState.propertiesFormData.hashCode() || this.props.state.clipboardProperties.hashCode() !== nextProps.state.clipboardProperties.hashCode()) return true;\n      return false;\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(_ref) {\n      var element = _ref.element,\n          layer = _ref.layer,\n          state = _ref.state;\n      var prototype = element.prototype,\n          id = element.id;\n      var scene = this.props.state.get('scene');\n      var selectedLayer = scene.getIn(['layers', scene.get('selectedLayer')]);\n      var selected = selectedLayer.getIn([prototype, id]);\n      if (selectedLayer.hashCode() !== layer.hashCode()) this.setState({\n        attributesFormData: this.initAttrData(element, layer, state),\n        propertiesFormData: this.initPropData(element, layer, state)\n      });\n    }\n  }, {\n    key: 'initAttrData',\n    value: function initAttrData(element, layer, state) {\n      element = _typeof(element.misc) === 'object' ? element.set('misc', new Map(element.misc)) : element;\n\n      switch (element.prototype) {\n        case 'items':\n          {\n            return new Map(element);\n          }\n\n        case 'lines':\n          {\n            var v_a = layer.vertices.get(element.vertices.get(0));\n            var v_b = layer.vertices.get(element.vertices.get(1));\n            var distance = GeometryUtils.pointsDistance(v_a.x, v_a.y, v_b.x, v_b.y);\n\n            var _unit = element.misc.get('_unitLength') || this.context.catalog.unit;\n\n            var _length = convert(distance).from(this.context.catalog.unit).to(_unit);\n\n            return new Map({\n              vertexOne: v_a,\n              vertexTwo: v_b,\n              lineLength: new Map({\n                length: distance,\n                _length: _length,\n                _unit: _unit\n              })\n            });\n          }\n\n        case 'holes':\n          {\n            var line = layer.lines.get(element.line);\n\n            var _layer$vertices$get = layer.vertices.get(line.vertices.get(0)),\n                x0 = _layer$vertices$get.x,\n                y0 = _layer$vertices$get.y;\n\n            var _layer$vertices$get2 = layer.vertices.get(line.vertices.get(1)),\n                x1 = _layer$vertices$get2.x,\n                y1 = _layer$vertices$get2.y;\n\n            var lineLength = GeometryUtils.pointsDistance(x0, y0, x1, y1);\n            var startAt = lineLength * element.offset - element.properties.get('width').get('length') / 2;\n\n            var _unitA = element.misc.get('_unitA') || this.context.catalog.unit;\n\n            var _lengthA = convert(startAt).from(this.context.catalog.unit).to(_unitA);\n\n            var endAt = lineLength - lineLength * element.offset - element.properties.get('width').get('length') / 2;\n\n            var _unitB = element.misc.get('_unitB') || this.context.catalog.unit;\n\n            var _lengthB = convert(endAt).from(this.context.catalog.unit).to(_unitB);\n\n            return new Map({\n              offset: element.offset,\n              offsetA: new Map({\n                length: MathUtils.toFixedFloat(startAt, PRECISION),\n                _length: MathUtils.toFixedFloat(_lengthA, PRECISION),\n                _unit: _unitA\n              }),\n              offsetB: new Map({\n                length: MathUtils.toFixedFloat(endAt, PRECISION),\n                _length: MathUtils.toFixedFloat(_lengthB, PRECISION),\n                _unit: _unitB\n              })\n            });\n          }\n\n        case 'areas':\n          {\n            return new Map({});\n          }\n\n        default:\n          return null;\n      }\n    }\n  }, {\n    key: 'initPropData',\n    value: function initPropData(element, layer, state) {\n      var catalog = this.context.catalog;\n      var catalogElement = catalog.getElement(element.type);\n      var mapped = {};\n\n      for (var name in catalogElement.properties) {\n        mapped[name] = new Map({\n          currentValue: element.properties.has(name) ? element.properties.get(name) : fromJS(catalogElement.properties[name].defaultValue),\n          configs: catalogElement.properties[name]\n        });\n      }\n\n      return new Map(mapped);\n    }\n  }, {\n    key: 'updateAttribute',\n    value: function updateAttribute(attributeName, value) {\n      var _this2 = this;\n\n      var attributesFormData = this.state.attributesFormData;\n\n      switch (this.props.element.prototype) {\n        case 'items':\n          {\n            attributesFormData = attributesFormData.set(attributeName, value);\n            break;\n          }\n\n        case 'lines':\n          {\n            switch (attributeName) {\n              case 'lineLength':\n                {\n                  var v_0 = attributesFormData.get('vertexOne');\n                  var v_1 = attributesFormData.get('vertexTwo');\n\n                  var _GeometryUtils$orderV = GeometryUtils.orderVertices([v_0, v_1]),\n                      _GeometryUtils$orderV2 = _slicedToArray(_GeometryUtils$orderV, 2),\n                      v_a = _GeometryUtils$orderV2[0],\n                      v_b = _GeometryUtils$orderV2[1];\n\n                  var v_b_new = GeometryUtils.extendLine(v_a.x, v_a.y, v_b.x, v_b.y, value.get('length'), PRECISION);\n                  attributesFormData = attributesFormData.withMutations(function (attr) {\n                    attr.set(v_0 === v_a ? 'vertexTwo' : 'vertexOne', v_b.merge(v_b_new));\n                    attr.set('lineLength', value);\n                  });\n                  break;\n                }\n\n              case 'vertexOne':\n              case 'vertexTwo':\n                {\n                  attributesFormData = attributesFormData.withMutations(function (attr) {\n                    attr.set(attributeName, attr.get(attributeName).merge(value));\n                    var newDistance = GeometryUtils.verticesDistance(attr.get('vertexOne'), attr.get('vertexTwo'));\n                    attr.mergeIn(['lineLength'], attr.get('lineLength').merge({\n                      'length': newDistance,\n                      '_length': convert(newDistance).from(_this2.context.catalog.unit).to(attr.get('lineLength').get('_unit'))\n                    }));\n                  });\n                  break;\n                }\n\n              default:\n                {\n                  attributesFormData = attributesFormData.set(attributeName, value);\n                  break;\n                }\n            }\n\n            break;\n          }\n\n        case 'holes':\n          {\n            switch (attributeName) {\n              case 'offsetA':\n                {\n                  var line = this.props.layer.lines.get(this.props.element.line);\n                  var orderedVertices = GeometryUtils.orderVertices([this.props.layer.vertices.get(line.vertices.get(0)), this.props.layer.vertices.get(line.vertices.get(1))]);\n\n                  var _orderedVertices = _slicedToArray(orderedVertices, 2),\n                      _orderedVertices$ = _orderedVertices[0],\n                      x0 = _orderedVertices$.x,\n                      y0 = _orderedVertices$.y,\n                      _orderedVertices$2 = _orderedVertices[1],\n                      x1 = _orderedVertices$2.x,\n                      y1 = _orderedVertices$2.y;\n\n                  var alpha = GeometryUtils.angleBetweenTwoPoints(x0, y0, x1, y1);\n                  var lineLength = GeometryUtils.pointsDistance(x0, y0, x1, y1);\n                  var widthLength = this.props.element.properties.get('width').get('length');\n                  var halfWidthLength = widthLength / 2;\n                  var lengthValue = value.get('length');\n                  lengthValue = Math.max(lengthValue, 0);\n                  lengthValue = Math.min(lengthValue, lineLength - widthLength);\n                  var xp = (lengthValue + halfWidthLength) * Math.cos(alpha) + x0;\n                  var yp = (lengthValue + halfWidthLength) * Math.sin(alpha) + y0;\n                  var offset = GeometryUtils.pointPositionOnLineSegment(x0, y0, x1, y1, xp, yp);\n                  var endAt = MathUtils.toFixedFloat(lineLength - lineLength * offset - halfWidthLength, PRECISION);\n                  var offsetUnit = attributesFormData.getIn(['offsetB', '_unit']);\n                  var offsetB = new Map({\n                    length: endAt,\n                    _length: convert(endAt).from(this.context.catalog.unit).to(offsetUnit),\n                    _unit: offsetUnit\n                  });\n                  attributesFormData = attributesFormData.set('offsetB', offsetB).set('offset', offset);\n                  var offsetAttribute = new Map({\n                    length: MathUtils.toFixedFloat(lengthValue, PRECISION),\n                    _unit: value.get('_unit'),\n                    _length: MathUtils.toFixedFloat(convert(lengthValue).from(this.context.catalog.unit).to(value.get('_unit')), PRECISION)\n                  });\n                  attributesFormData = attributesFormData.set(attributeName, offsetAttribute);\n                  break;\n                }\n\n              case 'offsetB':\n                {\n                  var _line = this.props.layer.lines.get(this.props.element.line);\n\n                  var _orderedVertices2 = GeometryUtils.orderVertices([this.props.layer.vertices.get(_line.vertices.get(0)), this.props.layer.vertices.get(_line.vertices.get(1))]);\n\n                  var _orderedVertices3 = _slicedToArray(_orderedVertices2, 2),\n                      _orderedVertices3$ = _orderedVertices3[0],\n                      _x = _orderedVertices3$.x,\n                      _y = _orderedVertices3$.y,\n                      _orderedVertices3$2 = _orderedVertices3[1],\n                      _x2 = _orderedVertices3$2.x,\n                      _y2 = _orderedVertices3$2.y;\n\n                  var _alpha = GeometryUtils.angleBetweenTwoPoints(_x, _y, _x2, _y2);\n\n                  var _lineLength = GeometryUtils.pointsDistance(_x, _y, _x2, _y2);\n\n                  var _widthLength = this.props.element.properties.get('width').get('length');\n\n                  var _halfWidthLength = _widthLength / 2;\n\n                  var _lengthValue = value.get('length');\n\n                  _lengthValue = Math.max(_lengthValue, 0);\n                  _lengthValue = Math.min(_lengthValue, _lineLength - _widthLength);\n\n                  var _xp = _x2 - (_lengthValue + _halfWidthLength) * Math.cos(_alpha);\n\n                  var _yp = _y2 - (_lengthValue + _halfWidthLength) * Math.sin(_alpha);\n\n                  var _offset = GeometryUtils.pointPositionOnLineSegment(_x, _y, _x2, _y2, _xp, _yp);\n\n                  var startAt = MathUtils.toFixedFloat(_lineLength * _offset - _halfWidthLength, PRECISION);\n\n                  var _offsetUnit = attributesFormData.getIn(['offsetA', '_unit']);\n\n                  var offsetA = new Map({\n                    length: startAt,\n                    _length: convert(startAt).from(this.context.catalog.unit).to(_offsetUnit),\n                    _unit: _offsetUnit\n                  });\n                  attributesFormData = attributesFormData.set('offsetA', offsetA).set('offset', _offset);\n\n                  var _offsetAttribute = new Map({\n                    length: MathUtils.toFixedFloat(_lengthValue, PRECISION),\n                    _unit: value.get('_unit'),\n                    _length: MathUtils.toFixedFloat(convert(_lengthValue).from(this.context.catalog.unit).to(value.get('_unit')), PRECISION)\n                  });\n\n                  attributesFormData = attributesFormData.set(attributeName, _offsetAttribute);\n                  break;\n                }\n\n              default:\n                {\n                  attributesFormData = attributesFormData.set(attributeName, value);\n                  break;\n                }\n            }\n\n            ;\n            break;\n          }\n\n        default:\n          break;\n      }\n\n      this.setState({\n        attributesFormData: attributesFormData\n      });\n      this.save({\n        attributesFormData: attributesFormData\n      });\n    }\n  }, {\n    key: 'updateProperty',\n    value: function updateProperty(propertyName, value) {\n      var propertiesFormData = this.state.propertiesFormData;\n      propertiesFormData = propertiesFormData.setIn([propertyName, 'currentValue'], value);\n      this.setState({\n        propertiesFormData: propertiesFormData\n      });\n      this.save({\n        propertiesFormData: propertiesFormData\n      });\n    }\n  }, {\n    key: 'reset',\n    value: function reset() {\n      this.setState({\n        propertiesFormData: this.initPropData(this.props.element, this.props.layer, this.props.state)\n      });\n    }\n  }, {\n    key: 'save',\n    value: function save(_ref2) {\n      var propertiesFormData = _ref2.propertiesFormData,\n          attributesFormData = _ref2.attributesFormData;\n\n      if (propertiesFormData) {\n        var properties = propertiesFormData.map(function (data) {\n          return data.get('currentValue');\n        });\n        this.context.projectActions.setProperties(properties);\n      }\n\n      if (attributesFormData) {\n        switch (this.props.element.prototype) {\n          case 'items':\n            {\n              this.context.projectActions.setItemsAttributes(attributesFormData);\n              break;\n            }\n\n          case 'lines':\n            {\n              this.context.projectActions.setLinesAttributes(attributesFormData);\n              break;\n            }\n\n          case 'holes':\n            {\n              this.context.projectActions.setHolesAttributes(attributesFormData);\n              break;\n            }\n        }\n      }\n    }\n  }, {\n    key: 'copyProperties',\n    value: function copyProperties(properties) {\n      this.context.projectActions.copyProperties(properties);\n    }\n  }, {\n    key: 'pasteProperties',\n    value: function pasteProperties() {\n      this.context.projectActions.pasteProperties();\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this3 = this;\n\n      var _state = this.state,\n          propertiesFormData = _state.propertiesFormData,\n          attributesFormData = _state.attributesFormData,\n          _context = this.context,\n          projectActions = _context.projectActions,\n          catalog = _context.catalog,\n          translator = _context.translator,\n          _props = this.props,\n          appState = _props.state,\n          element = _props.element;\n      return React.createElement('div', null, React.createElement(AttributesEditor, {\n        element: element,\n        onUpdate: this.updateAttribute,\n        attributeFormData: attributesFormData,\n        state: appState\n      }), React.createElement('div', {\n        style: attrPorpSeparatorStyle\n      }, React.createElement('div', {\n        style: headActionStyle\n      }, React.createElement('div', {\n        title: translator.t('Copy'),\n        style: iconHeadStyle,\n        onClick: function onClick(e) {\n          return _this3.copyProperties(element.properties);\n        }\n      }, React.createElement(MdContentCopy, null)), appState.get('clipboardProperties') && appState.get('clipboardProperties').size ? React.createElement('div', {\n        title: translator.t('Paste'),\n        style: iconHeadStyle,\n        onClick: function onClick(e) {\n          return _this3.pasteProperties();\n        }\n      }, React.createElement(MdContentPaste, null)) : null), React.createElement('div', {\n        style: {\n          position: 'relative'\n        }\n      }, \"oooh\")), propertiesFormData.entrySeq().map(function (_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 2),\n            propertyName = _ref4[0],\n            data = _ref4[1];\n\n        var currentValue = data.get('currentValue'),\n            configs = data.get('configs');\n\n        var _catalog$getPropertyT = catalog.getPropertyType(configs.type),\n            Editor = _catalog$getPropertyT.Editor;\n\n        return React.createElement(Editor, {\n          key: propertyName,\n          propertyName: propertyName,\n          value: currentValue,\n          configs: configs,\n          onUpdate: function onUpdate(value) {\n            return _this3.updateProperty(propertyName, value);\n          },\n          state: appState,\n          sourceElement: element,\n          internalState: _this3.state\n        });\n      }));\n    }\n  }]);\n\n  return ElementEditor;\n}(Component);\n\nexport default ElementEditor;\nElementEditor.propTypes = {\n  state: PropTypes.object.isRequired,\n  element: PropTypes.object.isRequired,\n  layer: PropTypes.object.isRequired\n};\nElementEditor.contextTypes = {\n  projectActions: PropTypes.object.isRequired,\n  catalog: PropTypes.object.isRequired,\n  translator: PropTypes.object.isRequired\n};","map":{"version":3,"sources":["/home/srihari/Desktop/Sparkplug_PandemicSparks/grid/node_modules/react-planner/es/components/sidebar/panel-element-editor/element-editor.js"],"names":["_slicedToArray","sliceIterator","arr","i","_arr","_n","_d","_e","undefined","_i","Symbol","iterator","_s","next","done","push","value","length","err","Array","isArray","Object","TypeError","_typeof","obj","constructor","prototype","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","defineProperty","key","Constructor","protoProps","staticProps","_classCallCheck","instance","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","create","setPrototypeOf","__proto__","React","Component","PropTypes","Map","fromJS","AttributesEditor","GeometryUtils","MathUtils","SharedStyle","convert","MdContentCopy","MdContentPaste","PRECISION","attrPorpSeparatorStyle","margin","border","SECONDARY_COLOR","alt","position","height","borderRadius","headActionStyle","right","top","iconHeadStyle","float","padding","cursor","fontSize","ElementEditor","_Component","context","_this","getPrototypeOf","state","attributesFormData","initAttrData","element","layer","propertiesFormData","initPropData","updateAttribute","bind","shouldComponentUpdate","nextProps","nextState","hashCode","clipboardProperties","componentWillReceiveProps","_ref","id","scene","get","selectedLayer","getIn","selected","setState","misc","set","v_a","vertices","v_b","distance","pointsDistance","x","y","_unit","catalog","unit","_length","from","to","vertexOne","vertexTwo","lineLength","line","lines","_layer$vertices$get","x0","y0","_layer$vertices$get2","x1","y1","startAt","offset","properties","_unitA","_lengthA","endAt","_unitB","_lengthB","offsetA","toFixedFloat","offsetB","catalogElement","getElement","type","mapped","name","currentValue","has","defaultValue","configs","attributeName","_this2","v_0","v_1","_GeometryUtils$orderV","orderVertices","_GeometryUtils$orderV2","v_b_new","extendLine","withMutations","attr","merge","newDistance","verticesDistance","mergeIn","orderedVertices","_orderedVertices","_orderedVertices$","_orderedVertices$2","alpha","angleBetweenTwoPoints","widthLength","halfWidthLength","lengthValue","Math","max","min","xp","cos","yp","sin","pointPositionOnLineSegment","offsetUnit","offsetAttribute","_line","_orderedVertices2","_orderedVertices3","_orderedVertices3$","_x","_y","_orderedVertices3$2","_x2","_y2","_alpha","_lineLength","_widthLength","_halfWidthLength","_lengthValue","_xp","_yp","_offset","_offsetUnit","_offsetAttribute","save","updateProperty","propertyName","setIn","reset","_ref2","map","data","projectActions","setProperties","setItemsAttributes","setLinesAttributes","setHolesAttributes","copyProperties","pasteProperties","render","_this3","_state","_context","translator","_props","appState","createElement","onUpdate","attributeFormData","style","title","t","onClick","e","size","entrySeq","_ref3","_ref4","_catalog$getPropertyT","getPropertyType","Editor","sourceElement","internalState","propTypes","object","isRequired","contextTypes"],"mappings":"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","sourcesContent":["var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { Map, fromJS } from 'immutable';\nimport AttributesEditor from './attributes-editor/attributes-editor';\nimport { GeometryUtils, MathUtils } from '../../../utils/export';\nimport * as SharedStyle from '../../../shared-style';\nimport convert from 'convert-units';\nimport { MdContentCopy, MdContentPaste } from 'react-icons/md';\n\nvar PRECISION = 2;\n\nvar attrPorpSeparatorStyle = {\n  margin: '0.5em 0.25em 0.5em 0',\n  border: '2px solid ' + SharedStyle.SECONDARY_COLOR.alt,\n  position: 'relative',\n  height: '2.5em',\n  borderRadius: '2px'\n};\n\nvar headActionStyle = {\n  position: 'absolute',\n  right: '0.5em',\n  top: '0.5em'\n};\n\nvar iconHeadStyle = {\n  float: 'right',\n  margin: '-3px 4px 0px 0px',\n  padding: 0,\n  cursor: 'pointer',\n  fontSize: '1.4em'\n};\n\nvar ElementEditor = function (_Component) {\n  _inherits(ElementEditor, _Component);\n\n  function ElementEditor(props, context) {\n    _classCallCheck(this, ElementEditor);\n\n    var _this = _possibleConstructorReturn(this, (ElementEditor.__proto__ || Object.getPrototypeOf(ElementEditor)).call(this, props, context));\n\n    _this.state = {\n      attributesFormData: _this.initAttrData(_this.props.element, _this.props.layer, _this.props.state),\n      propertiesFormData: _this.initPropData(_this.props.element, _this.props.layer, _this.props.state)\n    };\n\n    _this.updateAttribute = _this.updateAttribute.bind(_this);\n    return _this;\n  }\n\n  _createClass(ElementEditor, [{\n    key: 'shouldComponentUpdate',\n    value: function shouldComponentUpdate(nextProps, nextState) {\n      if (this.state.attributesFormData.hashCode() !== nextState.attributesFormData.hashCode() || this.state.propertiesFormData.hashCode() !== nextState.propertiesFormData.hashCode() || this.props.state.clipboardProperties.hashCode() !== nextProps.state.clipboardProperties.hashCode()) return true;\n\n      return false;\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(_ref) {\n      var element = _ref.element,\n          layer = _ref.layer,\n          state = _ref.state;\n      var prototype = element.prototype,\n          id = element.id;\n\n      var scene = this.props.state.get('scene');\n      var selectedLayer = scene.getIn(['layers', scene.get('selectedLayer')]);\n      var selected = selectedLayer.getIn([prototype, id]);\n\n      if (selectedLayer.hashCode() !== layer.hashCode()) this.setState({\n        attributesFormData: this.initAttrData(element, layer, state),\n        propertiesFormData: this.initPropData(element, layer, state)\n      });\n    }\n  }, {\n    key: 'initAttrData',\n    value: function initAttrData(element, layer, state) {\n\n      element = _typeof(element.misc) === 'object' ? element.set('misc', new Map(element.misc)) : element;\n\n      switch (element.prototype) {\n        case 'items':\n          {\n            return new Map(element);\n          }\n        case 'lines':\n          {\n            var v_a = layer.vertices.get(element.vertices.get(0));\n            var v_b = layer.vertices.get(element.vertices.get(1));\n\n            var distance = GeometryUtils.pointsDistance(v_a.x, v_a.y, v_b.x, v_b.y);\n            var _unit = element.misc.get('_unitLength') || this.context.catalog.unit;\n            var _length = convert(distance).from(this.context.catalog.unit).to(_unit);\n\n            return new Map({\n              vertexOne: v_a,\n              vertexTwo: v_b,\n              lineLength: new Map({ length: distance, _length: _length, _unit: _unit })\n            });\n          }\n        case 'holes':\n          {\n            var line = layer.lines.get(element.line);\n\n            var _layer$vertices$get = layer.vertices.get(line.vertices.get(0)),\n                x0 = _layer$vertices$get.x,\n                y0 = _layer$vertices$get.y;\n\n            var _layer$vertices$get2 = layer.vertices.get(line.vertices.get(1)),\n                x1 = _layer$vertices$get2.x,\n                y1 = _layer$vertices$get2.y;\n\n            var lineLength = GeometryUtils.pointsDistance(x0, y0, x1, y1);\n            var startAt = lineLength * element.offset - element.properties.get('width').get('length') / 2;\n\n            var _unitA = element.misc.get('_unitA') || this.context.catalog.unit;\n            var _lengthA = convert(startAt).from(this.context.catalog.unit).to(_unitA);\n\n            var endAt = lineLength - lineLength * element.offset - element.properties.get('width').get('length') / 2;\n            var _unitB = element.misc.get('_unitB') || this.context.catalog.unit;\n            var _lengthB = convert(endAt).from(this.context.catalog.unit).to(_unitB);\n\n            return new Map({\n              offset: element.offset,\n              offsetA: new Map({\n                length: MathUtils.toFixedFloat(startAt, PRECISION),\n                _length: MathUtils.toFixedFloat(_lengthA, PRECISION),\n                _unit: _unitA\n              }),\n              offsetB: new Map({\n                length: MathUtils.toFixedFloat(endAt, PRECISION),\n                _length: MathUtils.toFixedFloat(_lengthB, PRECISION),\n                _unit: _unitB\n              })\n            });\n          }\n        case 'areas':\n          {\n            return new Map({});\n          }\n        default:\n          return null;\n      }\n    }\n  }, {\n    key: 'initPropData',\n    value: function initPropData(element, layer, state) {\n      var catalog = this.context.catalog;\n\n      var catalogElement = catalog.getElement(element.type);\n\n      var mapped = {};\n      for (var name in catalogElement.properties) {\n        mapped[name] = new Map({\n          currentValue: element.properties.has(name) ? element.properties.get(name) : fromJS(catalogElement.properties[name].defaultValue),\n          configs: catalogElement.properties[name]\n        });\n      }\n\n      return new Map(mapped);\n    }\n  }, {\n    key: 'updateAttribute',\n    value: function updateAttribute(attributeName, value) {\n      var _this2 = this;\n\n      var attributesFormData = this.state.attributesFormData;\n\n\n      switch (this.props.element.prototype) {\n        case 'items':\n          {\n            attributesFormData = attributesFormData.set(attributeName, value);\n            break;\n          }\n        case 'lines':\n          {\n            switch (attributeName) {\n              case 'lineLength':\n                {\n                  var v_0 = attributesFormData.get('vertexOne');\n                  var v_1 = attributesFormData.get('vertexTwo');\n\n                  var _GeometryUtils$orderV = GeometryUtils.orderVertices([v_0, v_1]),\n                      _GeometryUtils$orderV2 = _slicedToArray(_GeometryUtils$orderV, 2),\n                      v_a = _GeometryUtils$orderV2[0],\n                      v_b = _GeometryUtils$orderV2[1];\n\n                  var v_b_new = GeometryUtils.extendLine(v_a.x, v_a.y, v_b.x, v_b.y, value.get('length'), PRECISION);\n\n                  attributesFormData = attributesFormData.withMutations(function (attr) {\n                    attr.set(v_0 === v_a ? 'vertexTwo' : 'vertexOne', v_b.merge(v_b_new));\n                    attr.set('lineLength', value);\n                  });\n                  break;\n                }\n              case 'vertexOne':\n              case 'vertexTwo':\n                {\n                  attributesFormData = attributesFormData.withMutations(function (attr) {\n                    attr.set(attributeName, attr.get(attributeName).merge(value));\n\n                    var newDistance = GeometryUtils.verticesDistance(attr.get('vertexOne'), attr.get('vertexTwo'));\n\n                    attr.mergeIn(['lineLength'], attr.get('lineLength').merge({\n                      'length': newDistance,\n                      '_length': convert(newDistance).from(_this2.context.catalog.unit).to(attr.get('lineLength').get('_unit'))\n                    }));\n                  });\n                  break;\n                }\n              default:\n                {\n                  attributesFormData = attributesFormData.set(attributeName, value);\n                  break;\n                }\n            }\n            break;\n          }\n        case 'holes':\n          {\n            switch (attributeName) {\n              case 'offsetA':\n                {\n                  var line = this.props.layer.lines.get(this.props.element.line);\n\n                  var orderedVertices = GeometryUtils.orderVertices([this.props.layer.vertices.get(line.vertices.get(0)), this.props.layer.vertices.get(line.vertices.get(1))]);\n\n                  var _orderedVertices = _slicedToArray(orderedVertices, 2),\n                      _orderedVertices$ = _orderedVertices[0],\n                      x0 = _orderedVertices$.x,\n                      y0 = _orderedVertices$.y,\n                      _orderedVertices$2 = _orderedVertices[1],\n                      x1 = _orderedVertices$2.x,\n                      y1 = _orderedVertices$2.y;\n\n                  var alpha = GeometryUtils.angleBetweenTwoPoints(x0, y0, x1, y1);\n                  var lineLength = GeometryUtils.pointsDistance(x0, y0, x1, y1);\n                  var widthLength = this.props.element.properties.get('width').get('length');\n                  var halfWidthLength = widthLength / 2;\n\n                  var lengthValue = value.get('length');\n                  lengthValue = Math.max(lengthValue, 0);\n                  lengthValue = Math.min(lengthValue, lineLength - widthLength);\n\n                  var xp = (lengthValue + halfWidthLength) * Math.cos(alpha) + x0;\n                  var yp = (lengthValue + halfWidthLength) * Math.sin(alpha) + y0;\n\n                  var offset = GeometryUtils.pointPositionOnLineSegment(x0, y0, x1, y1, xp, yp);\n\n                  var endAt = MathUtils.toFixedFloat(lineLength - lineLength * offset - halfWidthLength, PRECISION);\n                  var offsetUnit = attributesFormData.getIn(['offsetB', '_unit']);\n\n                  var offsetB = new Map({\n                    length: endAt,\n                    _length: convert(endAt).from(this.context.catalog.unit).to(offsetUnit),\n                    _unit: offsetUnit\n                  });\n\n                  attributesFormData = attributesFormData.set('offsetB', offsetB).set('offset', offset);\n\n                  var offsetAttribute = new Map({\n                    length: MathUtils.toFixedFloat(lengthValue, PRECISION),\n                    _unit: value.get('_unit'),\n                    _length: MathUtils.toFixedFloat(convert(lengthValue).from(this.context.catalog.unit).to(value.get('_unit')), PRECISION)\n                  });\n\n                  attributesFormData = attributesFormData.set(attributeName, offsetAttribute);\n\n                  break;\n                }\n              case 'offsetB':\n                {\n                  var _line = this.props.layer.lines.get(this.props.element.line);\n\n                  var _orderedVertices2 = GeometryUtils.orderVertices([this.props.layer.vertices.get(_line.vertices.get(0)), this.props.layer.vertices.get(_line.vertices.get(1))]);\n\n                  var _orderedVertices3 = _slicedToArray(_orderedVertices2, 2),\n                      _orderedVertices3$ = _orderedVertices3[0],\n                      _x = _orderedVertices3$.x,\n                      _y = _orderedVertices3$.y,\n                      _orderedVertices3$2 = _orderedVertices3[1],\n                      _x2 = _orderedVertices3$2.x,\n                      _y2 = _orderedVertices3$2.y;\n\n                  var _alpha = GeometryUtils.angleBetweenTwoPoints(_x, _y, _x2, _y2);\n                  var _lineLength = GeometryUtils.pointsDistance(_x, _y, _x2, _y2);\n                  var _widthLength = this.props.element.properties.get('width').get('length');\n                  var _halfWidthLength = _widthLength / 2;\n\n                  var _lengthValue = value.get('length');\n                  _lengthValue = Math.max(_lengthValue, 0);\n                  _lengthValue = Math.min(_lengthValue, _lineLength - _widthLength);\n\n                  var _xp = _x2 - (_lengthValue + _halfWidthLength) * Math.cos(_alpha);\n                  var _yp = _y2 - (_lengthValue + _halfWidthLength) * Math.sin(_alpha);\n\n                  var _offset = GeometryUtils.pointPositionOnLineSegment(_x, _y, _x2, _y2, _xp, _yp);\n\n                  var startAt = MathUtils.toFixedFloat(_lineLength * _offset - _halfWidthLength, PRECISION);\n                  var _offsetUnit = attributesFormData.getIn(['offsetA', '_unit']);\n\n                  var offsetA = new Map({\n                    length: startAt,\n                    _length: convert(startAt).from(this.context.catalog.unit).to(_offsetUnit),\n                    _unit: _offsetUnit\n                  });\n\n                  attributesFormData = attributesFormData.set('offsetA', offsetA).set('offset', _offset);\n\n                  var _offsetAttribute = new Map({\n                    length: MathUtils.toFixedFloat(_lengthValue, PRECISION),\n                    _unit: value.get('_unit'),\n                    _length: MathUtils.toFixedFloat(convert(_lengthValue).from(this.context.catalog.unit).to(value.get('_unit')), PRECISION)\n                  });\n\n                  attributesFormData = attributesFormData.set(attributeName, _offsetAttribute);\n\n                  break;\n                }\n              default:\n                {\n                  attributesFormData = attributesFormData.set(attributeName, value);\n                  break;\n                }\n            };\n            break;\n          }\n        default:\n          break;\n      }\n\n      this.setState({ attributesFormData: attributesFormData });\n      this.save({ attributesFormData: attributesFormData });\n    }\n  }, {\n    key: 'updateProperty',\n    value: function updateProperty(propertyName, value) {\n      var propertiesFormData = this.state.propertiesFormData;\n\n      propertiesFormData = propertiesFormData.setIn([propertyName, 'currentValue'], value);\n      this.setState({ propertiesFormData: propertiesFormData });\n      this.save({ propertiesFormData: propertiesFormData });\n    }\n  }, {\n    key: 'reset',\n    value: function reset() {\n      this.setState({ propertiesFormData: this.initPropData(this.props.element, this.props.layer, this.props.state) });\n    }\n  }, {\n    key: 'save',\n    value: function save(_ref2) {\n      var propertiesFormData = _ref2.propertiesFormData,\n          attributesFormData = _ref2.attributesFormData;\n\n\n      if (propertiesFormData) {\n        var properties = propertiesFormData.map(function (data) {\n          return data.get('currentValue');\n        });\n\n        this.context.projectActions.setProperties(properties);\n      }\n\n      if (attributesFormData) {\n        switch (this.props.element.prototype) {\n          case 'items':\n            {\n              this.context.projectActions.setItemsAttributes(attributesFormData);\n              break;\n            }\n          case 'lines':\n            {\n              this.context.projectActions.setLinesAttributes(attributesFormData);\n              break;\n            }\n          case 'holes':\n            {\n              this.context.projectActions.setHolesAttributes(attributesFormData);\n              break;\n            }\n        }\n      }\n    }\n  }, {\n    key: 'copyProperties',\n    value: function copyProperties(properties) {\n      this.context.projectActions.copyProperties(properties);\n    }\n  }, {\n    key: 'pasteProperties',\n    value: function pasteProperties() {\n      this.context.projectActions.pasteProperties();\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      var _this3 = this;\n\n      var _state = this.state,\n          propertiesFormData = _state.propertiesFormData,\n          attributesFormData = _state.attributesFormData,\n          _context = this.context,\n          projectActions = _context.projectActions,\n          catalog = _context.catalog,\n          translator = _context.translator,\n          _props = this.props,\n          appState = _props.state,\n          element = _props.element;\n\n\n      return React.createElement(\n        'div',\n        null,\n        React.createElement(AttributesEditor, {\n          element: element,\n          onUpdate: this.updateAttribute,\n          attributeFormData: attributesFormData,\n          state: appState,\n        }),\n        React.createElement(\n          'div',\n          { style: attrPorpSeparatorStyle },\n          React.createElement(\n            'div',\n            { style: headActionStyle },\n            React.createElement(\n              'div',\n              { title: translator.t('Copy'), style: iconHeadStyle, onClick: function onClick(e) {\n                  return _this3.copyProperties(element.properties);\n                } },\n              React.createElement(MdContentCopy, null)\n            ),\n            appState.get('clipboardProperties') && appState.get('clipboardProperties').size ? React.createElement(\n              'div',\n              { title: translator.t('Paste'), style: iconHeadStyle, onClick: function onClick(e) {\n                  return _this3.pasteProperties();\n                } },\n              React.createElement(MdContentPaste, null)\n            ) : null\n          ),\n        React.createElement(\n          'div',\n          { style:{position:'relative'}},\n          \"oooh\"\n        )\n        ),\n        propertiesFormData.entrySeq().map(function (_ref3) {\n          var _ref4 = _slicedToArray(_ref3, 2),\n              propertyName = _ref4[0],\n              data = _ref4[1];\n\n          var currentValue = data.get('currentValue'),\n              configs = data.get('configs');\n\n          var _catalog$getPropertyT = catalog.getPropertyType(configs.type),\n              Editor = _catalog$getPropertyT.Editor;\n\n          return React.createElement(Editor, {\n            key: propertyName,\n            propertyName: propertyName,\n            value: currentValue,\n            configs: configs,\n            onUpdate: function onUpdate(value) {\n              return _this3.updateProperty(propertyName, value);\n            },\n            state: appState,\n            sourceElement: element,\n            internalState: _this3.state\n          });\n        })\n      );\n    }\n  }]);\n\n  return ElementEditor;\n}(Component);\n\nexport default ElementEditor;\n\n\nElementEditor.propTypes = {\n  state: PropTypes.object.isRequired,\n  element: PropTypes.object.isRequired,\n  layer: PropTypes.object.isRequired\n};\n\nElementEditor.contextTypes = {\n  projectActions: PropTypes.object.isRequired,\n  catalog: PropTypes.object.isRequired,\n  translator: PropTypes.object.isRequired\n};"]},"metadata":{},"sourceType":"module"}