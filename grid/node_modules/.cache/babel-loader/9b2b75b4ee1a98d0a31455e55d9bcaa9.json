{"ast":null,"code":"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FaFolderOpen as IconLoad } from 'react-icons/fa';\nimport ToolbarButton from './toolbar-button';\nimport { warehouse } from './../../../../../src/warehouse.json'; //import { browserUpload } from '../../utils/browser';\n\nexport default function ToolbarLoadButton(_ref, _ref2) {\n  var state = _ref.state;\n  var translator = _ref2.translator,\n      projectActions = _ref2.projectActions;\n\n  var loadProjectFromFile = function loadProjectFromFile(event) {\n    event.preventDefault();\n    /*browserUpload().then(function (data) {\n      projectActions.loadProject(JSON.parse(data));\n    });*/\n\n    console.log(warehouse);\n    fetch(\"./../../../../../src/warehouse.json\").then(response => response.json()).then(json => console.log(json)); //projectActions.loadProject(JSON.parse(warehouse));\n  };\n\n  return React.createElement(ToolbarButton, {\n    active: false,\n    tooltip: translator.t(\"Load project\"),\n    onClick: loadProjectFromFile\n  }, React.createElement(IconLoad, null));\n}\nToolbarLoadButton.propTypes = {\n  state: PropTypes.object.isRequired\n};\nToolbarLoadButton.contextTypes = {\n  projectActions: PropTypes.object.isRequired,\n  translator: PropTypes.object.isRequired\n};","map":{"version":3,"sources":["/home/srihari/Desktop/Sparkplug_PandemicSparks/grid/node_modules/react-planner/es/components/toolbar/toolbar-load-button.js"],"names":["React","PropTypes","FaFolderOpen","IconLoad","ToolbarButton","warehouse","ToolbarLoadButton","_ref","_ref2","state","translator","projectActions","loadProjectFromFile","event","preventDefault","console","log","fetch","then","response","json","createElement","active","tooltip","t","onClick","propTypes","object","isRequired","contextTypes"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,YAAY,IAAIC,QAAzB,QAAyC,gBAAzC;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,SAAQC,SAAR,QAAwB,qCAAxB,C,CACA;;AAEA,eAAe,SAASC,iBAAT,CAA2BC,IAA3B,EAAiCC,KAAjC,EAAwC;AACrD,MAAIC,KAAK,GAAGF,IAAI,CAACE,KAAjB;AACA,MAAIC,UAAU,GAAGF,KAAK,CAACE,UAAvB;AAAA,MACIC,cAAc,GAAGH,KAAK,CAACG,cAD3B;;AAIA,MAAIC,mBAAmB,GAAG,SAASA,mBAAT,CAA6BC,KAA7B,EAAoC;AAC5DA,IAAAA,KAAK,CAACC,cAAN;AACA;;;;AAGAC,IAAAA,OAAO,CAACC,GAAR,CAAYX,SAAZ;AACAY,IAAAA,KAAK,CAAC,qCAAD,CAAL,CACDC,IADC,CACIC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EADhB,EAEDF,IAFC,CAEIE,IAAI,IAAIL,OAAO,CAACC,GAAR,CAAYI,IAAZ,CAFZ,EAN4D,CAS5D;AACD,GAVD;;AAYA,SAAOpB,KAAK,CAACqB,aAAN,CACLjB,aADK,EAEL;AAAEkB,IAAAA,MAAM,EAAE,KAAV;AAAiBC,IAAAA,OAAO,EAAEb,UAAU,CAACc,CAAX,CAAa,cAAb,CAA1B;AAAwDC,IAAAA,OAAO,EAAEb;AAAjE,GAFK,EAGLZ,KAAK,CAACqB,aAAN,CAAoBlB,QAApB,EAA8B,IAA9B,CAHK,CAAP;AAKD;AAEDG,iBAAiB,CAACoB,SAAlB,GAA8B;AAC5BjB,EAAAA,KAAK,EAAER,SAAS,CAAC0B,MAAV,CAAiBC;AADI,CAA9B;AAIAtB,iBAAiB,CAACuB,YAAlB,GAAiC;AAC/BlB,EAAAA,cAAc,EAAEV,SAAS,CAAC0B,MAAV,CAAiBC,UADF;AAE/BlB,EAAAA,UAAU,EAAET,SAAS,CAAC0B,MAAV,CAAiBC;AAFE,CAAjC","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FaFolderOpen as IconLoad } from 'react-icons/fa';\nimport ToolbarButton from './toolbar-button';\nimport {warehouse} from './../../../../../src/warehouse.json';\n//import { browserUpload } from '../../utils/browser';\n\nexport default function ToolbarLoadButton(_ref, _ref2) {\n  var state = _ref.state;\n  var translator = _ref2.translator,\n      projectActions = _ref2.projectActions;\n\n\n  var loadProjectFromFile = function loadProjectFromFile(event) {\n    event.preventDefault();\n    /*browserUpload().then(function (data) {\n      projectActions.loadProject(JSON.parse(data));\n    });*/\n    console.log(warehouse);\n    fetch(\"./../../../../../src/warehouse.json\")\n  .then(response => response.json())\n  .then(json => console.log(json));\n    //projectActions.loadProject(JSON.parse(warehouse));\n  };\n\n  return React.createElement(\n    ToolbarButton,\n    { active: false, tooltip: translator.t(\"Load project\"), onClick: loadProjectFromFile },\n    React.createElement(IconLoad, null)\n  );\n}\n\nToolbarLoadButton.propTypes = {\n  state: PropTypes.object.isRequired\n};\n\nToolbarLoadButton.contextTypes = {\n  projectActions: PropTypes.object.isRequired,\n  translator: PropTypes.object.isRequired\n};"]},"metadata":{},"sourceType":"module"}