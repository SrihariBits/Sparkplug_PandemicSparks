{"ast":null,"code":"var _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nimport { fromJS } from 'immutable';\nimport { Layer, Vertex, Group } from './export';\nimport { IDBroker, NameGenerator } from '../utils/export';\n\nvar Area = function () {\n  function Area() {\n    _classCallCheck(this, Area);\n  }\n\n  _createClass(Area, null, [{\n    key: 'add',\n    value: function add(state, layerID, type, verticesCoords, catalog) {\n      var area = void 0;\n      var layer = state.getIn(['scene', 'layers', layerID]);\n      layer = layer.withMutations(function (layer) {\n        var areaID = IDBroker.acquireID();\n        var vertices = verticesCoords.map(function (v) {\n          return Vertex.add(state, layerID, v.x, v.y, 'areas', areaID).vertex.id;\n        });\n        area = catalog.factoryElement(type, {\n          id: areaID,\n          name: NameGenerator.generateName('areas', catalog.getIn(['elements', type, 'info', 'title'])),\n          type: type,\n          prototype: 'areas',\n          vertices: vertices\n        });\n        layer.setIn(['areas', areaID], area);\n      });\n      state = state.setIn(['scene', 'layers', layerID], layer);\n      return {\n        updatedState: state,\n        area: area\n      };\n    }\n  }, {\n    key: 'select',\n    value: function select(state, layerID, areaID) {\n      state = Layer.select(state, layerID).updatedState;\n      state = Layer.selectElement(state, layerID, 'areas', areaID).updatedState;\n      return {\n        updatedState: state\n      };\n    }\n  }, {\n    key: 'remove',\n    value: function remove(state, layerID, areaID) {\n      var area = state.getIn(['scene', 'layers', layerID, 'areas', areaID]);\n      if (area.get('selected') === true) state = this.unselect(state, layerID, areaID).updatedState;\n      area.vertices.forEach(function (vertexID) {\n        state = Vertex.remove(state, layerID, vertexID, 'areas', areaID).updatedState;\n      });\n      state = state.deleteIn(['scene', 'layers', layerID, 'areas', areaID]);\n      state.getIn(['scene', 'groups']).forEach(function (group) {\n        return state = Group.removeElement(state, group.id, layerID, 'areas', areaID).updatedState;\n      });\n      return {\n        updatedState: state\n      };\n    }\n  }, {\n    key: 'unselect',\n    value: function unselect(state, layerID, areaID) {\n      state = Layer.unselect(state, layerID, 'areas', areaID).updatedState;\n      return {\n        updatedState: state\n      };\n    }\n  }, {\n    key: 'setProperties',\n    value: function setProperties(state, layerID, areaID, properties) {\n      state = state.mergeIn(['scene', 'layers', layerID, 'areas', areaID, 'properties'], properties);\n      return {\n        updatedState: state\n      };\n    }\n  }, {\n    key: 'setJsProperties',\n    value: function setJsProperties(state, layerID, areaID, properties) {\n      return this.setProperties(state, layerID, areaID, fromJS(properties));\n    }\n  }, {\n    key: 'updateProperties',\n    value: function updateProperties(state, layerID, areaID, properties) {\n      properties.forEach(function (v, k) {\n        if (state.hasIn(['scene', 'layers', layerID, 'areas', areaID, 'properties', k])) state = state.mergeIn(['scene', 'layers', layerID, 'areas', areaID, 'properties', k], v);\n      });\n      return {\n        updatedState: state\n      };\n    }\n  }, {\n    key: 'updateJsProperties',\n    value: function updateJsProperties(state, layerID, areaID, properties) {\n      return this.updateProperties(state, layerID, areaID, fromJS(properties));\n    }\n  }, {\n    key: 'setAttributes',\n    value: function setAttributes(state) {\n      return {\n        updatedState: state\n      };\n    }\n  }]);\n\n  return Area;\n}();\n\nexport { Area as default };","map":{"version":3,"sources":["/home/srihari/Desktop/Sparkplug_PandemicSparks/grid/node_modules/react-planner/es/class/area.js"],"names":["_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","prototype","_classCallCheck","instance","TypeError","fromJS","Layer","Vertex","Group","IDBroker","NameGenerator","Area","value","add","state","layerID","type","verticesCoords","catalog","area","layer","getIn","withMutations","areaID","acquireID","vertices","map","v","x","y","vertex","id","factoryElement","name","generateName","setIn","updatedState","select","selectElement","remove","get","unselect","forEach","vertexID","deleteIn","group","removeElement","setProperties","properties","mergeIn","setJsProperties","updateProperties","k","hasIn","updateJsProperties","setAttributes","default"],"mappings":"AAAA,IAAIA,YAAY,GAAG,YAAY;AAAE,WAASC,gBAAT,CAA0BC,MAA1B,EAAkCC,KAAlC,EAAyC;AAAE,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,KAAK,CAACE,MAA1B,EAAkCD,CAAC,EAAnC,EAAuC;AAAE,UAAIE,UAAU,GAAGH,KAAK,CAACC,CAAD,CAAtB;AAA2BE,MAAAA,UAAU,CAACC,UAAX,GAAwBD,UAAU,CAACC,UAAX,IAAyB,KAAjD;AAAwDD,MAAAA,UAAU,CAACE,YAAX,GAA0B,IAA1B;AAAgC,UAAI,WAAWF,UAAf,EAA2BA,UAAU,CAACG,QAAX,GAAsB,IAAtB;AAA4BC,MAAAA,MAAM,CAACC,cAAP,CAAsBT,MAAtB,EAA8BI,UAAU,CAACM,GAAzC,EAA8CN,UAA9C;AAA4D;AAAE;;AAAC,SAAO,UAAUO,WAAV,EAAuBC,UAAvB,EAAmCC,WAAnC,EAAgD;AAAE,QAAID,UAAJ,EAAgBb,gBAAgB,CAACY,WAAW,CAACG,SAAb,EAAwBF,UAAxB,CAAhB;AAAqD,QAAIC,WAAJ,EAAiBd,gBAAgB,CAACY,WAAD,EAAcE,WAAd,CAAhB;AAA4C,WAAOF,WAAP;AAAqB,GAAhN;AAAmN,CAA9hB,EAAnB;;AAEA,SAASI,eAAT,CAAyBC,QAAzB,EAAmCL,WAAnC,EAAgD;AAAE,MAAI,EAAEK,QAAQ,YAAYL,WAAtB,CAAJ,EAAwC;AAAE,UAAM,IAAIM,SAAJ,CAAc,mCAAd,CAAN;AAA2D;AAAE;;AAEzJ,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,KAAT,EAAgBC,MAAhB,EAAwBC,KAAxB,QAAqC,UAArC;AACA,SAASC,QAAT,EAAmBC,aAAnB,QAAwC,iBAAxC;;AAEA,IAAIC,IAAI,GAAG,YAAY;AACrB,WAASA,IAAT,GAAgB;AACdT,IAAAA,eAAe,CAAC,IAAD,EAAOS,IAAP,CAAf;AACD;;AAED1B,EAAAA,YAAY,CAAC0B,IAAD,EAAO,IAAP,EAAa,CAAC;AACxBd,IAAAA,GAAG,EAAE,KADmB;AAExBe,IAAAA,KAAK,EAAE,SAASC,GAAT,CAAaC,KAAb,EAAoBC,OAApB,EAA6BC,IAA7B,EAAmCC,cAAnC,EAAmDC,OAAnD,EAA4D;AAEjE,UAAIC,IAAI,GAAG,KAAK,CAAhB;AAEA,UAAIC,KAAK,GAAGN,KAAK,CAACO,KAAN,CAAY,CAAC,OAAD,EAAU,QAAV,EAAoBN,OAApB,CAAZ,CAAZ;AAEAK,MAAAA,KAAK,GAAGA,KAAK,CAACE,aAAN,CAAoB,UAAUF,KAAV,EAAiB;AAC3C,YAAIG,MAAM,GAAGd,QAAQ,CAACe,SAAT,EAAb;AAEA,YAAIC,QAAQ,GAAGR,cAAc,CAACS,GAAf,CAAmB,UAAUC,CAAV,EAAa;AAC7C,iBAAOpB,MAAM,CAACM,GAAP,CAAWC,KAAX,EAAkBC,OAAlB,EAA2BY,CAAC,CAACC,CAA7B,EAAgCD,CAAC,CAACE,CAAlC,EAAqC,OAArC,EAA8CN,MAA9C,EAAsDO,MAAtD,CAA6DC,EAApE;AACD,SAFc,CAAf;AAIAZ,QAAAA,IAAI,GAAGD,OAAO,CAACc,cAAR,CAAuBhB,IAAvB,EAA6B;AAClCe,UAAAA,EAAE,EAAER,MAD8B;AAElCU,UAAAA,IAAI,EAAEvB,aAAa,CAACwB,YAAd,CAA2B,OAA3B,EAAoChB,OAAO,CAACG,KAAR,CAAc,CAAC,UAAD,EAAaL,IAAb,EAAmB,MAAnB,EAA2B,OAA3B,CAAd,CAApC,CAF4B;AAGlCA,UAAAA,IAAI,EAAEA,IAH4B;AAIlCf,UAAAA,SAAS,EAAE,OAJuB;AAKlCwB,UAAAA,QAAQ,EAAEA;AALwB,SAA7B,CAAP;AAQAL,QAAAA,KAAK,CAACe,KAAN,CAAY,CAAC,OAAD,EAAUZ,MAAV,CAAZ,EAA+BJ,IAA/B;AACD,OAhBO,CAAR;AAkBAL,MAAAA,KAAK,GAAGA,KAAK,CAACqB,KAAN,CAAY,CAAC,OAAD,EAAU,QAAV,EAAoBpB,OAApB,CAAZ,EAA0CK,KAA1C,CAAR;AAEA,aAAO;AAAEgB,QAAAA,YAAY,EAAEtB,KAAhB;AAAuBK,QAAAA,IAAI,EAAEA;AAA7B,OAAP;AACD;AA7BuB,GAAD,EA8BtB;AACDtB,IAAAA,GAAG,EAAE,QADJ;AAEDe,IAAAA,KAAK,EAAE,SAASyB,MAAT,CAAgBvB,KAAhB,EAAuBC,OAAvB,EAAgCQ,MAAhC,EAAwC;AAC7CT,MAAAA,KAAK,GAAGR,KAAK,CAAC+B,MAAN,CAAavB,KAAb,EAAoBC,OAApB,EAA6BqB,YAArC;AACAtB,MAAAA,KAAK,GAAGR,KAAK,CAACgC,aAAN,CAAoBxB,KAApB,EAA2BC,OAA3B,EAAoC,OAApC,EAA6CQ,MAA7C,EAAqDa,YAA7D;AAEA,aAAO;AAAEA,QAAAA,YAAY,EAAEtB;AAAhB,OAAP;AACD;AAPA,GA9BsB,EAsCtB;AACDjB,IAAAA,GAAG,EAAE,QADJ;AAEDe,IAAAA,KAAK,EAAE,SAAS2B,MAAT,CAAgBzB,KAAhB,EAAuBC,OAAvB,EAAgCQ,MAAhC,EAAwC;AAE7C,UAAIJ,IAAI,GAAGL,KAAK,CAACO,KAAN,CAAY,CAAC,OAAD,EAAU,QAAV,EAAoBN,OAApB,EAA6B,OAA7B,EAAsCQ,MAAtC,CAAZ,CAAX;AAEA,UAAIJ,IAAI,CAACqB,GAAL,CAAS,UAAT,MAAyB,IAA7B,EAAmC1B,KAAK,GAAG,KAAK2B,QAAL,CAAc3B,KAAd,EAAqBC,OAArB,EAA8BQ,MAA9B,EAAsCa,YAA9C;AAEnCjB,MAAAA,IAAI,CAACM,QAAL,CAAciB,OAAd,CAAsB,UAAUC,QAAV,EAAoB;AACxC7B,QAAAA,KAAK,GAAGP,MAAM,CAACgC,MAAP,CAAczB,KAAd,EAAqBC,OAArB,EAA8B4B,QAA9B,EAAwC,OAAxC,EAAiDpB,MAAjD,EAAyDa,YAAjE;AACD,OAFD;AAIAtB,MAAAA,KAAK,GAAGA,KAAK,CAAC8B,QAAN,CAAe,CAAC,OAAD,EAAU,QAAV,EAAoB7B,OAApB,EAA6B,OAA7B,EAAsCQ,MAAtC,CAAf,CAAR;AAEAT,MAAAA,KAAK,CAACO,KAAN,CAAY,CAAC,OAAD,EAAU,QAAV,CAAZ,EAAiCqB,OAAjC,CAAyC,UAAUG,KAAV,EAAiB;AACxD,eAAO/B,KAAK,GAAGN,KAAK,CAACsC,aAAN,CAAoBhC,KAApB,EAA2B+B,KAAK,CAACd,EAAjC,EAAqChB,OAArC,EAA8C,OAA9C,EAAuDQ,MAAvD,EAA+Da,YAA9E;AACD,OAFD;AAIA,aAAO;AAAEA,QAAAA,YAAY,EAAEtB;AAAhB,OAAP;AACD;AAnBA,GAtCsB,EA0DtB;AACDjB,IAAAA,GAAG,EAAE,UADJ;AAEDe,IAAAA,KAAK,EAAE,SAAS6B,QAAT,CAAkB3B,KAAlB,EAAyBC,OAAzB,EAAkCQ,MAAlC,EAA0C;AAC/CT,MAAAA,KAAK,GAAGR,KAAK,CAACmC,QAAN,CAAe3B,KAAf,EAAsBC,OAAtB,EAA+B,OAA/B,EAAwCQ,MAAxC,EAAgDa,YAAxD;AAEA,aAAO;AAAEA,QAAAA,YAAY,EAAEtB;AAAhB,OAAP;AACD;AANA,GA1DsB,EAiEtB;AACDjB,IAAAA,GAAG,EAAE,eADJ;AAEDe,IAAAA,KAAK,EAAE,SAASmC,aAAT,CAAuBjC,KAAvB,EAA8BC,OAA9B,EAAuCQ,MAAvC,EAA+CyB,UAA/C,EAA2D;AAChElC,MAAAA,KAAK,GAAGA,KAAK,CAACmC,OAAN,CAAc,CAAC,OAAD,EAAU,QAAV,EAAoBlC,OAApB,EAA6B,OAA7B,EAAsCQ,MAAtC,EAA8C,YAA9C,CAAd,EAA2EyB,UAA3E,CAAR;AAEA,aAAO;AAAEZ,QAAAA,YAAY,EAAEtB;AAAhB,OAAP;AACD;AANA,GAjEsB,EAwEtB;AACDjB,IAAAA,GAAG,EAAE,iBADJ;AAEDe,IAAAA,KAAK,EAAE,SAASsC,eAAT,CAAyBpC,KAAzB,EAAgCC,OAAhC,EAAyCQ,MAAzC,EAAiDyB,UAAjD,EAA6D;AAClE,aAAO,KAAKD,aAAL,CAAmBjC,KAAnB,EAA0BC,OAA1B,EAAmCQ,MAAnC,EAA2ClB,MAAM,CAAC2C,UAAD,CAAjD,CAAP;AACD;AAJA,GAxEsB,EA6EtB;AACDnD,IAAAA,GAAG,EAAE,kBADJ;AAEDe,IAAAA,KAAK,EAAE,SAASuC,gBAAT,CAA0BrC,KAA1B,EAAiCC,OAAjC,EAA0CQ,MAA1C,EAAkDyB,UAAlD,EAA8D;AACnEA,MAAAA,UAAU,CAACN,OAAX,CAAmB,UAAUf,CAAV,EAAayB,CAAb,EAAgB;AACjC,YAAItC,KAAK,CAACuC,KAAN,CAAY,CAAC,OAAD,EAAU,QAAV,EAAoBtC,OAApB,EAA6B,OAA7B,EAAsCQ,MAAtC,EAA8C,YAA9C,EAA4D6B,CAA5D,CAAZ,CAAJ,EAAiFtC,KAAK,GAAGA,KAAK,CAACmC,OAAN,CAAc,CAAC,OAAD,EAAU,QAAV,EAAoBlC,OAApB,EAA6B,OAA7B,EAAsCQ,MAAtC,EAA8C,YAA9C,EAA4D6B,CAA5D,CAAd,EAA8EzB,CAA9E,CAAR;AAClF,OAFD;AAIA,aAAO;AAAES,QAAAA,YAAY,EAAEtB;AAAhB,OAAP;AACD;AARA,GA7EsB,EAsFtB;AACDjB,IAAAA,GAAG,EAAE,oBADJ;AAEDe,IAAAA,KAAK,EAAE,SAAS0C,kBAAT,CAA4BxC,KAA5B,EAAmCC,OAAnC,EAA4CQ,MAA5C,EAAoDyB,UAApD,EAAgE;AACrE,aAAO,KAAKG,gBAAL,CAAsBrC,KAAtB,EAA6BC,OAA7B,EAAsCQ,MAAtC,EAA8ClB,MAAM,CAAC2C,UAAD,CAApD,CAAP;AACD;AAJA,GAtFsB,EA2FtB;AACDnD,IAAAA,GAAG,EAAE,eADJ;AAEDe,IAAAA,KAAK,EAAE,SAAS2C,aAAT,CAAuBzC,KAAvB,EAA8B;AACnC,aAAO;AAAEsB,QAAAA,YAAY,EAAEtB;AAAhB,OAAP;AACD;AAJA,GA3FsB,CAAb,CAAZ;;AAkGA,SAAOH,IAAP;AACD,CAxGU,EAAX;;AA0GA,SAASA,IAAI,IAAI6C,OAAjB","sourcesContent":["var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport { fromJS } from 'immutable';\nimport { Layer, Vertex, Group } from './export';\nimport { IDBroker, NameGenerator } from '../utils/export';\n\nvar Area = function () {\n  function Area() {\n    _classCallCheck(this, Area);\n  }\n\n  _createClass(Area, null, [{\n    key: 'add',\n    value: function add(state, layerID, type, verticesCoords, catalog) {\n\n      var area = void 0;\n\n      var layer = state.getIn(['scene', 'layers', layerID]);\n\n      layer = layer.withMutations(function (layer) {\n        var areaID = IDBroker.acquireID();\n\n        var vertices = verticesCoords.map(function (v) {\n          return Vertex.add(state, layerID, v.x, v.y, 'areas', areaID).vertex.id;\n        });\n\n        area = catalog.factoryElement(type, {\n          id: areaID,\n          name: NameGenerator.generateName('areas', catalog.getIn(['elements', type, 'info', 'title'])),\n          type: type,\n          prototype: 'areas',\n          vertices: vertices\n        });\n\n        layer.setIn(['areas', areaID], area);\n      });\n\n      state = state.setIn(['scene', 'layers', layerID], layer);\n\n      return { updatedState: state, area: area };\n    }\n  }, {\n    key: 'select',\n    value: function select(state, layerID, areaID) {\n      state = Layer.select(state, layerID).updatedState;\n      state = Layer.selectElement(state, layerID, 'areas', areaID).updatedState;\n\n      return { updatedState: state };\n    }\n  }, {\n    key: 'remove',\n    value: function remove(state, layerID, areaID) {\n\n      var area = state.getIn(['scene', 'layers', layerID, 'areas', areaID]);\n\n      if (area.get('selected') === true) state = this.unselect(state, layerID, areaID).updatedState;\n\n      area.vertices.forEach(function (vertexID) {\n        state = Vertex.remove(state, layerID, vertexID, 'areas', areaID).updatedState;\n      });\n\n      state = state.deleteIn(['scene', 'layers', layerID, 'areas', areaID]);\n\n      state.getIn(['scene', 'groups']).forEach(function (group) {\n        return state = Group.removeElement(state, group.id, layerID, 'areas', areaID).updatedState;\n      });\n\n      return { updatedState: state };\n    }\n  }, {\n    key: 'unselect',\n    value: function unselect(state, layerID, areaID) {\n      state = Layer.unselect(state, layerID, 'areas', areaID).updatedState;\n\n      return { updatedState: state };\n    }\n  }, {\n    key: 'setProperties',\n    value: function setProperties(state, layerID, areaID, properties) {\n      state = state.mergeIn(['scene', 'layers', layerID, 'areas', areaID, 'properties'], properties);\n\n      return { updatedState: state };\n    }\n  }, {\n    key: 'setJsProperties',\n    value: function setJsProperties(state, layerID, areaID, properties) {\n      return this.setProperties(state, layerID, areaID, fromJS(properties));\n    }\n  }, {\n    key: 'updateProperties',\n    value: function updateProperties(state, layerID, areaID, properties) {\n      properties.forEach(function (v, k) {\n        if (state.hasIn(['scene', 'layers', layerID, 'areas', areaID, 'properties', k])) state = state.mergeIn(['scene', 'layers', layerID, 'areas', areaID, 'properties', k], v);\n      });\n\n      return { updatedState: state };\n    }\n  }, {\n    key: 'updateJsProperties',\n    value: function updateJsProperties(state, layerID, areaID, properties) {\n      return this.updateProperties(state, layerID, areaID, fromJS(properties));\n    }\n  }, {\n    key: 'setAttributes',\n    value: function setAttributes(state) {\n      return { updatedState: state };\n    }\n  }]);\n\n  return Area;\n}();\n\nexport { Area as default };"]},"metadata":{},"sourceType":"module"}