{"ast":null,"code":"import React from 'react';\nimport PropTypes from 'prop-types';\nimport polylabel from 'polylabel';\nimport areapolygon from 'area-polygon';\nvar STYLE_TEXT = {\n  textAnchor: 'middle',\n  fontSize: '12px',\n  fontFamily: '\"Courier New\", Courier, monospace',\n  pointerEvents: 'none',\n  fontWeight: 'bold',\n  //http://stackoverflow.com/questions/826782/how-to-disable-text-selection-highlighting-using-css\n  WebkitTouchCallout: 'none',\n\n  /* iOS Safari */\n  WebkitUserSelect: 'none',\n\n  /* Chrome/Safari/Opera */\n  MozUserSelect: 'none',\n\n  /* Firefox */\n  MsUserSelect: 'none',\n\n  /* Internet Explorer/Edge */\n  userSelect: 'none'\n};\nexport default function Area(_ref) {\n  var layer = _ref.layer,\n      area = _ref.area,\n      catalog = _ref.catalog;\n  var rendered = catalog.getElement(area.type).render2D(area, layer);\n  var renderedAreaSize = null;\n\n  if (area.selected) {\n    var polygon = area.vertices.toArray().map(function (vertexID) {\n      var _layer$vertices$get = layer.vertices.get(vertexID),\n          x = _layer$vertices$get.x,\n          y = _layer$vertices$get.y;\n\n      return [x, y];\n    });\n    var polygonWithHoles = polygon;\n    area.holes.forEach(function (holeID) {\n      var polygonHole = layer.areas.get(holeID).vertices.toArray().map(function (vertexID) {\n        var _layer$vertices$get2 = layer.vertices.get(vertexID),\n            x = _layer$vertices$get2.x,\n            y = _layer$vertices$get2.y;\n\n        return [x, y];\n      });\n      polygonWithHoles = polygonWithHoles.concat(polygonHole.reverse());\n    });\n    var center = polylabel([polygonWithHoles], 1.0);\n    var areaSize = areapolygon(polygon, false); //subtract holes area\n\n    area.holes.forEach(function (areaID) {\n      var hole = layer.areas.get(areaID);\n      var holePolygon = hole.vertices.toArray().map(function (vertexID) {\n        var _layer$vertices$get3 = layer.vertices.get(vertexID),\n            x = _layer$vertices$get3.x,\n            y = _layer$vertices$get3.y;\n\n        return [x, y];\n      });\n      areaSize -= areapolygon(holePolygon, false);\n    });\n    renderedAreaSize = React.createElement('text', {\n      x: '0',\n      y: '0',\n      transform: 'translate(' + center[0] + ' ' + center[1] + ') scale(1, -1)',\n      style: STYLE_TEXT\n    }, (areaSize / 10000).toFixed(2), ' m', String.fromCharCode(0xb2));\n  }\n\n  return React.createElement('g', {\n    'data-element-root': true,\n    'data-prototype': area.prototype,\n    'data-id': area.id,\n    'data-selected': area.selected,\n    'data-layer': layer.id\n  }, rendered, renderedAreaSize);\n}\nArea.propTypes = {\n  area: PropTypes.object.isRequired,\n  layer: PropTypes.object.isRequired,\n  catalog: PropTypes.object.isRequired\n};","map":{"version":3,"sources":["/home/srihari/Desktop/Sparkplug_PandemicSparks/grid/node_modules/react-planner/es/components/viewer2d/area.js"],"names":["React","PropTypes","polylabel","areapolygon","STYLE_TEXT","textAnchor","fontSize","fontFamily","pointerEvents","fontWeight","WebkitTouchCallout","WebkitUserSelect","MozUserSelect","MsUserSelect","userSelect","Area","_ref","layer","area","catalog","rendered","getElement","type","render2D","renderedAreaSize","selected","polygon","vertices","toArray","map","vertexID","_layer$vertices$get","get","x","y","polygonWithHoles","holes","forEach","holeID","polygonHole","areas","_layer$vertices$get2","concat","reverse","center","areaSize","areaID","hole","holePolygon","_layer$vertices$get3","createElement","transform","style","toFixed","String","fromCharCode","prototype","id","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport polylabel from 'polylabel';\nimport areapolygon from 'area-polygon';\n\nvar STYLE_TEXT = {\n  textAnchor: 'middle',\n  fontSize: '12px',\n  fontFamily: '\"Courier New\", Courier, monospace',\n  pointerEvents: 'none',\n  fontWeight: 'bold',\n\n  //http://stackoverflow.com/questions/826782/how-to-disable-text-selection-highlighting-using-css\n  WebkitTouchCallout: 'none', /* iOS Safari */\n  WebkitUserSelect: 'none', /* Chrome/Safari/Opera */\n  MozUserSelect: 'none', /* Firefox */\n  MsUserSelect: 'none', /* Internet Explorer/Edge */\n  userSelect: 'none'\n};\n\nexport default function Area(_ref) {\n  var layer = _ref.layer,\n      area = _ref.area,\n      catalog = _ref.catalog;\n\n\n  var rendered = catalog.getElement(area.type).render2D(area, layer);\n\n  var renderedAreaSize = null;\n\n  if (area.selected) {\n    var polygon = area.vertices.toArray().map(function (vertexID) {\n      var _layer$vertices$get = layer.vertices.get(vertexID),\n          x = _layer$vertices$get.x,\n          y = _layer$vertices$get.y;\n\n      return [x, y];\n    });\n\n    var polygonWithHoles = polygon;\n\n    area.holes.forEach(function (holeID) {\n\n      var polygonHole = layer.areas.get(holeID).vertices.toArray().map(function (vertexID) {\n        var _layer$vertices$get2 = layer.vertices.get(vertexID),\n            x = _layer$vertices$get2.x,\n            y = _layer$vertices$get2.y;\n\n        return [x, y];\n      });\n\n      polygonWithHoles = polygonWithHoles.concat(polygonHole.reverse());\n    });\n\n    var center = polylabel([polygonWithHoles], 1.0);\n    var areaSize = areapolygon(polygon, false);\n\n    //subtract holes area\n    area.holes.forEach(function (areaID) {\n      var hole = layer.areas.get(areaID);\n      var holePolygon = hole.vertices.toArray().map(function (vertexID) {\n        var _layer$vertices$get3 = layer.vertices.get(vertexID),\n            x = _layer$vertices$get3.x,\n            y = _layer$vertices$get3.y;\n\n        return [x, y];\n      });\n      areaSize -= areapolygon(holePolygon, false);\n    });\n\n    renderedAreaSize = React.createElement(\n      'text',\n      { x: '0', y: '0', transform: 'translate(' + center[0] + ' ' + center[1] + ') scale(1, -1)', style: STYLE_TEXT },\n      (areaSize / 10000).toFixed(2),\n      ' m',\n      String.fromCharCode(0xb2)\n    );\n  }\n\n  return React.createElement(\n    'g',\n    {\n      'data-element-root': true,\n      'data-prototype': area.prototype,\n      'data-id': area.id,\n      'data-selected': area.selected,\n      'data-layer': layer.id\n    },\n    rendered,\n    renderedAreaSize\n  );\n}\n\nArea.propTypes = {\n  area: PropTypes.object.isRequired,\n  layer: PropTypes.object.isRequired,\n  catalog: PropTypes.object.isRequired\n};"]},"metadata":{},"sourceType":"module"}