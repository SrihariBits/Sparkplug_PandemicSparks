{"ast":null,"code":"/**\n * @author qiao / https://github.com/qiao\n * @author mrdoob / http://mrdoob.com\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author erich666 / http://erichaines.com\n */\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one finger move\n//    Zoom - middle mouse, or mousewheel / touch: two finger spread or squish\n//    Pan - right mouse, or arrow keys / touch: three finter swipe\nvar THREE = window.THREE || require('three');\n\nvar OrbitControls = void 0;\n\nmodule.exports = OrbitControls = function OrbitControls(object, domElement) {\n  this.object = object;\n  this.domElement = domElement !== undefined ? domElement : document; // Set to false to disable this control\n\n  this.enabled = true; // \"target\" sets the location of focus, where the object orbits around\n\n  this.target = new THREE.Vector3(); // How far you can dolly in and out ( PerspectiveCamera only )\n\n  this.minDistance = 0;\n  this.maxDistance = Infinity; // How far you can zoom in and out ( OrthographicCamera only )\n\n  this.minZoom = 0;\n  this.maxZoom = Infinity; // How far you can orbit vertically, upper and lower limits.\n  // Range is 0 to Math.PI radians.\n\n  this.minPolarAngle = 0; // radians\n\n  this.maxPolarAngle = Math.PI; // radians\n  // How far you can orbit horizontally, upper and lower limits.\n  // If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n\n  this.minAzimuthAngle = -Infinity; // radians\n\n  this.maxAzimuthAngle = Infinity; // radians\n  // Set to true to enable damping (inertia)\n  // If damping is enabled, you must call controls.update() in your animation loop\n\n  this.enableDamping = false;\n  this.dampingFactor = 0.25; // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n  // Set to false to disable zooming\n\n  this.enableZoom = true;\n  this.zoomSpeed = 1.0; // Set to false to disable rotating\n\n  this.enableRotate = true;\n  this.rotateSpeed = 1.0; // Set to false to disable panning\n\n  this.enablePan = true;\n  this.keyPanSpeed = 7.0; // pixels moved per arrow key push\n  // Set to true to automatically rotate around the target\n  // If auto-rotate is enabled, you must call controls.update() in your animation loop\n\n  this.autoRotate = false;\n  this.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n  // Set to false to disable use of the keys\n\n  this.enableKeys = true; // The four arrow keys\n\n  this.keys = {\n    LEFT: 37,\n    UP: 38,\n    RIGHT: 39,\n    BOTTOM: 40\n  }; // Mouse buttons\n\n  this.mouseButtons = {\n    ORBIT: THREE.MOUSE.LEFT,\n    ZOOM: THREE.MOUSE.MIDDLE,\n    PAN: THREE.MOUSE.RIGHT\n  }; // for reset\n\n  this.target0 = this.target.clone();\n  this.position0 = this.object.position.clone();\n  this.zoom0 = this.object.zoom; //\n  // public methods\n  //\n\n  this.getPolarAngle = function () {\n    return spherical.phi;\n  };\n\n  this.getAzimuthalAngle = function () {\n    return spherical.theta;\n  };\n\n  this.reset = function () {\n    scope.target.copy(scope.target0);\n    scope.object.position.copy(scope.position0);\n    scope.object.zoom = scope.zoom0;\n    scope.object.updateProjectionMatrix();\n    scope.dispatchEvent(changeEvent);\n    scope.update();\n    state = STATE.NONE;\n  }; // this method is exposed, but perhaps it would be better if we can make it private...\n\n\n  this.update = function () {\n    var offset = new THREE.Vector3(); // so camera.up is the orbit axis\n\n    var quat = new THREE.Quaternion().setFromUnitVectors(object.up, new THREE.Vector3(0, 1, 0));\n    var quatInverse = quat.clone().inverse();\n    var lastPosition = new THREE.Vector3();\n    var lastQuaternion = new THREE.Quaternion();\n    return function update() {\n      var position = scope.object.position;\n      offset.copy(position).sub(scope.target); // rotate offset to \"y-axis-is-up\" space\n\n      offset.applyQuaternion(quat); // angle from z-axis around y-axis\n\n      spherical.setFromVector3(offset);\n\n      if (scope.autoRotate && state === STATE.NONE) {\n        rotateLeft(getAutoRotationAngle());\n      }\n\n      spherical.theta += sphericalDelta.theta;\n      spherical.phi += sphericalDelta.phi; // restrict theta to be between desired limits\n\n      spherical.theta = Math.max(scope.minAzimuthAngle, Math.min(scope.maxAzimuthAngle, spherical.theta)); // restrict phi to be between desired limits\n\n      spherical.phi = Math.max(scope.minPolarAngle, Math.min(scope.maxPolarAngle, spherical.phi));\n      spherical.makeSafe();\n      spherical.radius *= scale; // restrict radius to be between desired limits\n\n      spherical.radius = Math.max(scope.minDistance, Math.min(scope.maxDistance, spherical.radius)); // move target to panned location\n\n      scope.target.add(panOffset);\n      offset.setFromSpherical(spherical); // rotate offset back to \"camera-up-vector-is-up\" space\n\n      offset.applyQuaternion(quatInverse);\n      position.copy(scope.target).add(offset);\n      scope.object.lookAt(scope.target);\n\n      if (scope.enableDamping === true) {\n        sphericalDelta.theta *= 1 - scope.dampingFactor;\n        sphericalDelta.phi *= 1 - scope.dampingFactor;\n      } else {\n        sphericalDelta.set(0, 0, 0);\n      }\n\n      scale = 1;\n      panOffset.set(0, 0, 0); // update condition is:\n      // min(camera displacement, camera rotation in radians)^2 > EPS\n      // using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n      if (zoomChanged || lastPosition.distanceToSquared(scope.object.position) > EPS || 8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS) {\n        scope.dispatchEvent(changeEvent);\n        lastPosition.copy(scope.object.position);\n        lastQuaternion.copy(scope.object.quaternion);\n        zoomChanged = false;\n        return true;\n      }\n\n      return false;\n    };\n  }();\n\n  this.dispose = function () {\n    scope.domElement.removeEventListener('contextmenu', onContextMenu, false);\n    scope.domElement.removeEventListener('mousedown', onMouseDown, false);\n    scope.domElement.removeEventListener('wheel', onMouseWheel, false);\n    scope.domElement.removeEventListener('touchstart', onTouchStart, false);\n    scope.domElement.removeEventListener('touchend', onTouchEnd, false);\n    scope.domElement.removeEventListener('touchmove', onTouchMove, false);\n    document.removeEventListener('mousemove', onMouseMove, false);\n    document.removeEventListener('mouseup', onMouseUp, false);\n    window.removeEventListener('keydown', onKeyDown, false); //scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n  }; //\n  // internals\n  //\n\n\n  var scope = this;\n  var changeEvent = {\n    type: 'change'\n  };\n  var startEvent = {\n    type: 'start'\n  };\n  var endEvent = {\n    type: 'end'\n  };\n  var STATE = {\n    NONE: -1,\n    ROTATE: 0,\n    DOLLY: 1,\n    PAN: 2,\n    TOUCH_ROTATE: 3,\n    TOUCH_DOLLY: 4,\n    TOUCH_PAN: 5\n  };\n  var state = STATE.NONE;\n  var EPS = 0.000001; // current position in spherical coordinates\n\n  var spherical = new THREE.Spherical();\n  var sphericalDelta = new THREE.Spherical();\n  var scale = 1;\n  var panOffset = new THREE.Vector3();\n  var zoomChanged = false;\n  var rotateStart = new THREE.Vector2();\n  var rotateEnd = new THREE.Vector2();\n  var rotateDelta = new THREE.Vector2();\n  var panStart = new THREE.Vector2();\n  var panEnd = new THREE.Vector2();\n  var panDelta = new THREE.Vector2();\n  var dollyStart = new THREE.Vector2();\n  var dollyEnd = new THREE.Vector2();\n  var dollyDelta = new THREE.Vector2();\n\n  function getAutoRotationAngle() {\n    return 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n  }\n\n  function getZoomScale() {\n    return Math.pow(0.95, scope.zoomSpeed);\n  }\n\n  function rotateLeft(angle) {\n    sphericalDelta.theta -= angle;\n  }\n\n  function rotateUp(angle) {\n    sphericalDelta.phi -= angle;\n  }\n\n  var panLeft = function () {\n    var v = new THREE.Vector3();\n    return function panLeft(distance, objectMatrix) {\n      v.setFromMatrixColumn(objectMatrix, 0); // get X column of objectMatrix\n\n      v.multiplyScalar(-distance);\n      panOffset.add(v);\n    };\n  }();\n\n  var panUp = function () {\n    var v = new THREE.Vector3();\n    return function panUp(distance, objectMatrix) {\n      v.setFromMatrixColumn(objectMatrix, 1); // get Y column of objectMatrix\n\n      v.multiplyScalar(distance);\n      panOffset.add(v);\n    };\n  }(); // deltaX and deltaY are in pixels; right and down are positive\n\n\n  var pan = function () {\n    var offset = new THREE.Vector3();\n    return function pan(deltaX, deltaY) {\n      var element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n      if (scope.object instanceof THREE.PerspectiveCamera) {\n        // perspective\n        var position = scope.object.position;\n        offset.copy(position).sub(scope.target);\n        var targetDistance = offset.length(); // half of the fov is center to top of screen\n\n        targetDistance *= Math.tan(scope.object.fov / 2 * Math.PI / 180.0); // we actually don't use screenWidth, since perspective camera is fixed to screen height\n\n        panLeft(2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix);\n        panUp(2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix);\n      } else if (scope.object instanceof THREE.OrthographicCamera) {\n        // orthographic\n        panLeft(deltaX * (scope.object.right - scope.object.left) / scope.object.zoom / element.clientWidth, scope.object.matrix);\n        panUp(deltaY * (scope.object.top - scope.object.bottom) / scope.object.zoom / element.clientHeight, scope.object.matrix);\n      } else {\n        // camera neither orthographic nor perspective\n        console.warn('WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.');\n        scope.enablePan = false;\n      }\n    };\n  }();\n\n  function dollyIn(dollyScale) {\n    if (scope.object instanceof THREE.PerspectiveCamera) {\n      scale /= dollyScale;\n    } else if (scope.object instanceof THREE.OrthographicCamera) {\n      scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom * dollyScale));\n      scope.object.updateProjectionMatrix();\n      zoomChanged = true;\n    } else {\n      console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n      scope.enableZoom = false;\n    }\n  }\n\n  function dollyOut(dollyScale) {\n    if (scope.object instanceof THREE.PerspectiveCamera) {\n      scale *= dollyScale;\n    } else if (scope.object instanceof THREE.OrthographicCamera) {\n      scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom / dollyScale));\n      scope.object.updateProjectionMatrix();\n      zoomChanged = true;\n    } else {\n      console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n      scope.enableZoom = false;\n    }\n  } //\n  // event callbacks - update the object state\n  //\n\n\n  function handleMouseDownRotate(event) {\n    rotateStart.set(event.clientX, event.clientY);\n  }\n\n  function handleMouseDownDolly(event) {\n    dollyStart.set(event.clientX, event.clientY);\n  }\n\n  function handleMouseDownPan(event) {\n    panStart.set(event.clientX, event.clientY);\n  }\n\n  function handleMouseMoveRotate(event) {\n    rotateEnd.set(event.clientX, event.clientY);\n    rotateDelta.subVectors(rotateEnd, rotateStart);\n    var element = scope.domElement === document ? scope.domElement.body : scope.domElement; // rotating across whole screen goes 360 degrees around\n\n    rotateLeft(2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed); // rotating up and down along whole screen attempts to go 360, but limited to 180\n\n    rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed);\n    rotateStart.copy(rotateEnd);\n    scope.update();\n  }\n\n  function handleMouseMoveDolly(event) {\n    dollyEnd.set(event.clientX, event.clientY);\n    dollyDelta.subVectors(dollyEnd, dollyStart);\n\n    if (dollyDelta.y > 0) {\n      dollyIn(getZoomScale());\n    } else if (dollyDelta.y < 0) {\n      dollyOut(getZoomScale());\n    }\n\n    dollyStart.copy(dollyEnd);\n    scope.update();\n  }\n\n  function handleMouseMovePan(event) {\n    panEnd.set(event.clientX, event.clientY);\n    panDelta.subVectors(panEnd, panStart);\n    pan(panDelta.x, panDelta.y);\n    panStart.copy(panEnd);\n    scope.update();\n  }\n\n  function handleMouseUp(event) {}\n\n  function handleMouseWheel(event) {\n    if (event.deltaY < 0) {\n      dollyOut(getZoomScale());\n    } else if (event.deltaY > 0) {\n      dollyIn(getZoomScale());\n    }\n\n    scope.update();\n  }\n\n  function handleKeyDown(event) {\n    switch (event.keyCode) {\n      case scope.keys.UP:\n        pan(0, scope.keyPanSpeed);\n        scope.update();\n        break;\n\n      case scope.keys.BOTTOM:\n        pan(0, -scope.keyPanSpeed);\n        scope.update();\n        break;\n\n      case scope.keys.LEFT:\n        pan(scope.keyPanSpeed, 0);\n        scope.update();\n        break;\n\n      case scope.keys.RIGHT:\n        pan(-scope.keyPanSpeed, 0);\n        scope.update();\n        break;\n    }\n  }\n\n  function handleTouchStartRotate(event) {\n    rotateStart.set(event.touches[0].pageX, event.touches[0].pageY);\n  }\n\n  function handleTouchStartDolly(event) {\n    var dx = event.touches[0].pageX - event.touches[1].pageX;\n    var dy = event.touches[0].pageY - event.touches[1].pageY;\n    var distance = Math.sqrt(dx * dx + dy * dy);\n    dollyStart.set(0, distance);\n  }\n\n  function handleTouchStartPan(event) {\n    panStart.set(event.touches[0].pageX, event.touches[0].pageY);\n  }\n\n  function handleTouchMoveRotate(event) {\n    rotateEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n    rotateDelta.subVectors(rotateEnd, rotateStart);\n    var element = scope.domElement === document ? scope.domElement.body : scope.domElement; // rotating across whole screen goes 360 degrees around\n\n    rotateLeft(2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed); // rotating up and down along whole screen attempts to go 360, but limited to 180\n\n    rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed);\n    rotateStart.copy(rotateEnd);\n    scope.update();\n  }\n\n  function handleTouchMoveDolly(event) {\n    var dx = event.touches[0].pageX - event.touches[1].pageX;\n    var dy = event.touches[0].pageY - event.touches[1].pageY;\n    var distance = Math.sqrt(dx * dx + dy * dy);\n    dollyEnd.set(0, distance);\n    dollyDelta.subVectors(dollyEnd, dollyStart);\n\n    if (dollyDelta.y > 0) {\n      dollyOut(getZoomScale());\n    } else if (dollyDelta.y < 0) {\n      dollyIn(getZoomScale());\n    }\n\n    dollyStart.copy(dollyEnd);\n    scope.update();\n  }\n\n  function handleTouchMovePan(event) {\n    panEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n    panDelta.subVectors(panEnd, panStart);\n    pan(panDelta.x, panDelta.y);\n    panStart.copy(panEnd);\n    scope.update();\n  }\n\n  function handleTouchEnd(event) {} //\n  // event handlers - FSM: listen for events and reset state\n  //\n\n\n  function onMouseDown(event) {\n    if (scope.enabled === false) return;\n    event.preventDefault();\n\n    if (event.button === scope.mouseButtons.ORBIT) {\n      if (scope.enableRotate === false) return;\n      handleMouseDownRotate(event);\n      state = STATE.ROTATE;\n    } else if (event.button === scope.mouseButtons.ZOOM) {\n      if (scope.enableZoom === false) return;\n      handleMouseDownDolly(event);\n      state = STATE.DOLLY;\n    } else if (event.button === scope.mouseButtons.PAN) {\n      if (scope.enablePan === false) return;\n      handleMouseDownPan(event);\n      state = STATE.PAN;\n    }\n\n    if (state !== STATE.NONE) {\n      document.addEventListener('mousemove', onMouseMove, false);\n      document.addEventListener('mouseup', onMouseUp, false);\n      scope.dispatchEvent(startEvent);\n    }\n  }\n\n  function onMouseMove(event) {\n    if (scope.enabled === false) return;\n\n    if (state === STATE.ROTATE) {\n      if (scope.enableRotate === false) return;\n      handleMouseMoveRotate(event);\n    } else if (state === STATE.DOLLY) {\n      if (scope.enableZoom === false) return;\n      handleMouseMoveDolly(event);\n    } else if (state === STATE.PAN) {\n      if (scope.enablePan === false) return;\n      handleMouseMovePan(event);\n    }\n  }\n\n  function onMouseUp(event) {\n    if (scope.enabled === false) return;\n    handleMouseUp(event);\n    document.removeEventListener('mousemove', onMouseMove, false);\n    document.removeEventListener('mouseup', onMouseUp, false);\n    scope.dispatchEvent(endEvent);\n    state = STATE.NONE;\n  }\n\n  function onMouseWheel(event) {\n    if (scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE && state !== STATE.ROTATE) return;\n    event.stopPropagation();\n    handleMouseWheel(event);\n    scope.dispatchEvent(startEvent); // not sure why these are here...\n\n    scope.dispatchEvent(endEvent);\n  }\n\n  function onKeyDown(event) {\n    if (scope.enabled === false || scope.enableKeys === false || scope.enablePan === false) return;\n    handleKeyDown(event);\n  }\n\n  function onTouchStart(event) {\n    if (scope.enabled === false) return;\n\n    switch (event.touches.length) {\n      case 1:\n        // one-fingered touch: rotate\n        if (scope.enableRotate === false) return;\n        handleTouchStartRotate(event);\n        state = STATE.TOUCH_ROTATE;\n        break;\n\n      case 2:\n        // two-fingered touch: dolly\n        if (scope.enableZoom === false) return;\n        handleTouchStartDolly(event);\n        state = STATE.TOUCH_DOLLY;\n        break;\n\n      case 3:\n        // three-fingered touch: pan\n        if (scope.enablePan === false) return;\n        handleTouchStartPan(event);\n        state = STATE.TOUCH_PAN;\n        break;\n\n      default:\n        state = STATE.NONE;\n    }\n\n    if (state !== STATE.NONE) {\n      scope.dispatchEvent(startEvent);\n    }\n  }\n\n  function onTouchMove(event) {\n    if (scope.enabled === false) return;\n    event.stopPropagation();\n\n    switch (event.touches.length) {\n      case 1:\n        // one-fingered touch: rotate\n        if (scope.enableRotate === false) return;\n        if (state !== STATE.TOUCH_ROTATE) return; // is this needed?...\n\n        handleTouchMoveRotate(event);\n        break;\n\n      case 2:\n        // two-fingered touch: dolly\n        if (scope.enableZoom === false) return;\n        if (state !== STATE.TOUCH_DOLLY) return; // is this needed?...\n\n        handleTouchMoveDolly(event);\n        break;\n\n      case 3:\n        // three-fingered touch: pan\n        if (scope.enablePan === false) return;\n        if (state !== STATE.TOUCH_PAN) return; // is this needed?...\n\n        handleTouchMovePan(event);\n        break;\n\n      default:\n        state = STATE.NONE;\n    }\n  }\n\n  function onTouchEnd(event) {\n    if (scope.enabled === false) return;\n    handleTouchEnd(event);\n    scope.dispatchEvent(endEvent);\n    state = STATE.NONE;\n  }\n\n  function onContextMenu(event) {\n    event.preventDefault();\n  }\n\n  scope.domElement.addEventListener('contextmenu', onContextMenu, false);\n  scope.domElement.addEventListener('mousedown', onMouseDown, false);\n  scope.domElement.addEventListener('wheel', onMouseWheel, {\n    passive: true\n  });\n  scope.domElement.addEventListener('touchstart', onTouchStart, {\n    passive: true\n  });\n  scope.domElement.addEventListener('touchend', onTouchEnd, {\n    passive: true\n  });\n  scope.domElement.addEventListener('touchmove', onTouchMove, {\n    passive: true\n  });\n  window.addEventListener('keydown', onKeyDown, {\n    passive: true\n  }); // force an update at start\n\n  this.update();\n};\n\nOrbitControls.prototype = Object.create(THREE.EventDispatcher.prototype);\nOrbitControls.prototype.constructor = OrbitControls;\nObject.defineProperties(OrbitControls.prototype, {\n  center: {\n    get: function get() {\n      console.warn('THREE.OrbitControls: .center has been renamed to .target');\n      return this.target;\n    }\n  },\n  // backward compatibility\n  noZoom: {\n    get: function get() {\n      console.warn('THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.');\n      return !this.enableZoom;\n    },\n    set: function set(value) {\n      console.warn('THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.');\n      this.enableZoom = !value;\n    }\n  },\n  noRotate: {\n    get: function get() {\n      console.warn('THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.');\n      return !this.enableRotate;\n    },\n    set: function set(value) {\n      console.warn('THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.');\n      this.enableRotate = !value;\n    }\n  },\n  noPan: {\n    get: function get() {\n      console.warn('THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.');\n      return !this.enablePan;\n    },\n    set: function set(value) {\n      console.warn('THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.');\n      this.enablePan = !value;\n    }\n  },\n  noKeys: {\n    get: function get() {\n      console.warn('THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.');\n      return !this.enableKeys;\n    },\n    set: function set(value) {\n      console.warn('THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.');\n      this.enableKeys = !value;\n    }\n  },\n  staticMoving: {\n    get: function get() {\n      console.warn('THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.');\n      return !this.enableDamping;\n    },\n    set: function set(value) {\n      console.warn('THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.');\n      this.enableDamping = !value;\n    }\n  },\n  dynamicDampingFactor: {\n    get: function get() {\n      console.warn('THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.');\n      return this.dampingFactor;\n    },\n    set: function set(value) {\n      console.warn('THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.');\n      this.dampingFactor = value;\n    }\n  }\n});","map":{"version":3,"sources":["/home/srihari/Desktop/Sparkplug_PandemicSparks/grid/node_modules/react-planner/es/components/viewer3d/libs/orbit-controls.js"],"names":["THREE","window","require","OrbitControls","module","exports","object","domElement","undefined","document","enabled","target","Vector3","minDistance","maxDistance","Infinity","minZoom","maxZoom","minPolarAngle","maxPolarAngle","Math","PI","minAzimuthAngle","maxAzimuthAngle","enableDamping","dampingFactor","enableZoom","zoomSpeed","enableRotate","rotateSpeed","enablePan","keyPanSpeed","autoRotate","autoRotateSpeed","enableKeys","keys","LEFT","UP","RIGHT","BOTTOM","mouseButtons","ORBIT","MOUSE","ZOOM","MIDDLE","PAN","target0","clone","position0","position","zoom0","zoom","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","reset","scope","copy","updateProjectionMatrix","dispatchEvent","changeEvent","update","state","STATE","NONE","offset","quat","Quaternion","setFromUnitVectors","up","quatInverse","inverse","lastPosition","lastQuaternion","sub","applyQuaternion","setFromVector3","rotateLeft","getAutoRotationAngle","sphericalDelta","max","min","makeSafe","radius","scale","add","panOffset","setFromSpherical","lookAt","set","zoomChanged","distanceToSquared","EPS","dot","quaternion","dispose","removeEventListener","onContextMenu","onMouseDown","onMouseWheel","onTouchStart","onTouchEnd","onTouchMove","onMouseMove","onMouseUp","onKeyDown","type","startEvent","endEvent","ROTATE","DOLLY","TOUCH_ROTATE","TOUCH_DOLLY","TOUCH_PAN","Spherical","rotateStart","Vector2","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","getZoomScale","pow","angle","rotateUp","panLeft","v","distance","objectMatrix","setFromMatrixColumn","multiplyScalar","panUp","pan","deltaX","deltaY","element","body","PerspectiveCamera","targetDistance","length","tan","fov","clientHeight","matrix","OrthographicCamera","right","left","clientWidth","top","bottom","console","warn","dollyIn","dollyScale","dollyOut","handleMouseDownRotate","event","clientX","clientY","handleMouseDownDolly","handleMouseDownPan","handleMouseMoveRotate","subVectors","x","y","handleMouseMoveDolly","handleMouseMovePan","handleMouseUp","handleMouseWheel","handleKeyDown","keyCode","handleTouchStartRotate","touches","pageX","pageY","handleTouchStartDolly","dx","dy","sqrt","handleTouchStartPan","handleTouchMoveRotate","handleTouchMoveDolly","handleTouchMovePan","handleTouchEnd","preventDefault","button","addEventListener","stopPropagation","passive","prototype","Object","create","EventDispatcher","constructor","defineProperties","center","get","noZoom","value","noRotate","noPan","noKeys","staticMoving","dynamicDampingFactor"],"mappings":"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","sourcesContent":["/**\n * @author qiao / https://github.com/qiao\n * @author mrdoob / http://mrdoob.com\n * @author alteredq / http://alteredqualia.com/\n * @author WestLangley / http://github.com/WestLangley\n * @author erich666 / http://erichaines.com\n */\n\n// This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one finger move\n//    Zoom - middle mouse, or mousewheel / touch: two finger spread or squish\n//    Pan - right mouse, or arrow keys / touch: three finter swipe\n\nvar THREE = window.THREE || require('three');\nvar OrbitControls = void 0;\n\nmodule.exports = OrbitControls = function OrbitControls(object, domElement) {\n\n  this.object = object;\n\n  this.domElement = domElement !== undefined ? domElement : document;\n\n  // Set to false to disable this control\n  this.enabled = true;\n\n  // \"target\" sets the location of focus, where the object orbits around\n  this.target = new THREE.Vector3();\n\n  // How far you can dolly in and out ( PerspectiveCamera only )\n  this.minDistance = 0;\n  this.maxDistance = Infinity;\n\n  // How far you can zoom in and out ( OrthographicCamera only )\n  this.minZoom = 0;\n  this.maxZoom = Infinity;\n\n  // How far you can orbit vertically, upper and lower limits.\n  // Range is 0 to Math.PI radians.\n  this.minPolarAngle = 0; // radians\n  this.maxPolarAngle = Math.PI; // radians\n\n  // How far you can orbit horizontally, upper and lower limits.\n  // If set, must be a sub-interval of the interval [ - Math.PI, Math.PI ].\n  this.minAzimuthAngle = -Infinity; // radians\n  this.maxAzimuthAngle = Infinity; // radians\n\n  // Set to true to enable damping (inertia)\n  // If damping is enabled, you must call controls.update() in your animation loop\n  this.enableDamping = false;\n  this.dampingFactor = 0.25;\n\n  // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n  // Set to false to disable zooming\n  this.enableZoom = true;\n  this.zoomSpeed = 1.0;\n\n  // Set to false to disable rotating\n  this.enableRotate = true;\n  this.rotateSpeed = 1.0;\n\n  // Set to false to disable panning\n  this.enablePan = true;\n  this.keyPanSpeed = 7.0; // pixels moved per arrow key push\n\n  // Set to true to automatically rotate around the target\n  // If auto-rotate is enabled, you must call controls.update() in your animation loop\n  this.autoRotate = false;\n  this.autoRotateSpeed = 2.0; // 30 seconds per round when fps is 60\n\n  // Set to false to disable use of the keys\n  this.enableKeys = true;\n\n  // The four arrow keys\n  this.keys = { LEFT: 37, UP: 38, RIGHT: 39, BOTTOM: 40 };\n\n  // Mouse buttons\n  this.mouseButtons = { ORBIT: THREE.MOUSE.LEFT, ZOOM: THREE.MOUSE.MIDDLE, PAN: THREE.MOUSE.RIGHT };\n\n  // for reset\n  this.target0 = this.target.clone();\n  this.position0 = this.object.position.clone();\n  this.zoom0 = this.object.zoom;\n\n  //\n  // public methods\n  //\n\n  this.getPolarAngle = function () {\n\n    return spherical.phi;\n  };\n\n  this.getAzimuthalAngle = function () {\n\n    return spherical.theta;\n  };\n\n  this.reset = function () {\n\n    scope.target.copy(scope.target0);\n    scope.object.position.copy(scope.position0);\n    scope.object.zoom = scope.zoom0;\n\n    scope.object.updateProjectionMatrix();\n    scope.dispatchEvent(changeEvent);\n\n    scope.update();\n\n    state = STATE.NONE;\n  };\n\n  // this method is exposed, but perhaps it would be better if we can make it private...\n  this.update = function () {\n\n    var offset = new THREE.Vector3();\n\n    // so camera.up is the orbit axis\n    var quat = new THREE.Quaternion().setFromUnitVectors(object.up, new THREE.Vector3(0, 1, 0));\n    var quatInverse = quat.clone().inverse();\n\n    var lastPosition = new THREE.Vector3();\n    var lastQuaternion = new THREE.Quaternion();\n\n    return function update() {\n\n      var position = scope.object.position;\n\n      offset.copy(position).sub(scope.target);\n\n      // rotate offset to \"y-axis-is-up\" space\n      offset.applyQuaternion(quat);\n\n      // angle from z-axis around y-axis\n      spherical.setFromVector3(offset);\n\n      if (scope.autoRotate && state === STATE.NONE) {\n\n        rotateLeft(getAutoRotationAngle());\n      }\n\n      spherical.theta += sphericalDelta.theta;\n      spherical.phi += sphericalDelta.phi;\n\n      // restrict theta to be between desired limits\n      spherical.theta = Math.max(scope.minAzimuthAngle, Math.min(scope.maxAzimuthAngle, spherical.theta));\n\n      // restrict phi to be between desired limits\n      spherical.phi = Math.max(scope.minPolarAngle, Math.min(scope.maxPolarAngle, spherical.phi));\n\n      spherical.makeSafe();\n\n      spherical.radius *= scale;\n\n      // restrict radius to be between desired limits\n      spherical.radius = Math.max(scope.minDistance, Math.min(scope.maxDistance, spherical.radius));\n\n      // move target to panned location\n      scope.target.add(panOffset);\n\n      offset.setFromSpherical(spherical);\n\n      // rotate offset back to \"camera-up-vector-is-up\" space\n      offset.applyQuaternion(quatInverse);\n\n      position.copy(scope.target).add(offset);\n\n      scope.object.lookAt(scope.target);\n\n      if (scope.enableDamping === true) {\n\n        sphericalDelta.theta *= 1 - scope.dampingFactor;\n        sphericalDelta.phi *= 1 - scope.dampingFactor;\n      } else {\n\n        sphericalDelta.set(0, 0, 0);\n      }\n\n      scale = 1;\n      panOffset.set(0, 0, 0);\n\n      // update condition is:\n      // min(camera displacement, camera rotation in radians)^2 > EPS\n      // using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n      if (zoomChanged || lastPosition.distanceToSquared(scope.object.position) > EPS || 8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS) {\n\n        scope.dispatchEvent(changeEvent);\n\n        lastPosition.copy(scope.object.position);\n        lastQuaternion.copy(scope.object.quaternion);\n        zoomChanged = false;\n\n        return true;\n      }\n\n      return false;\n    };\n  }();\n\n  this.dispose = function () {\n\n    scope.domElement.removeEventListener('contextmenu', onContextMenu, false);\n    scope.domElement.removeEventListener('mousedown', onMouseDown, false);\n    scope.domElement.removeEventListener('wheel', onMouseWheel, false);\n\n    scope.domElement.removeEventListener('touchstart', onTouchStart, false);\n    scope.domElement.removeEventListener('touchend', onTouchEnd, false);\n    scope.domElement.removeEventListener('touchmove', onTouchMove, false);\n\n    document.removeEventListener('mousemove', onMouseMove, false);\n    document.removeEventListener('mouseup', onMouseUp, false);\n\n    window.removeEventListener('keydown', onKeyDown, false);\n\n    //scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n  };\n\n  //\n  // internals\n  //\n\n  var scope = this;\n\n  var changeEvent = { type: 'change' };\n  var startEvent = { type: 'start' };\n  var endEvent = { type: 'end' };\n\n  var STATE = { NONE: -1, ROTATE: 0, DOLLY: 1, PAN: 2, TOUCH_ROTATE: 3, TOUCH_DOLLY: 4, TOUCH_PAN: 5 };\n\n  var state = STATE.NONE;\n\n  var EPS = 0.000001;\n\n  // current position in spherical coordinates\n  var spherical = new THREE.Spherical();\n  var sphericalDelta = new THREE.Spherical();\n\n  var scale = 1;\n  var panOffset = new THREE.Vector3();\n  var zoomChanged = false;\n\n  var rotateStart = new THREE.Vector2();\n  var rotateEnd = new THREE.Vector2();\n  var rotateDelta = new THREE.Vector2();\n\n  var panStart = new THREE.Vector2();\n  var panEnd = new THREE.Vector2();\n  var panDelta = new THREE.Vector2();\n\n  var dollyStart = new THREE.Vector2();\n  var dollyEnd = new THREE.Vector2();\n  var dollyDelta = new THREE.Vector2();\n\n  function getAutoRotationAngle() {\n\n    return 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n  }\n\n  function getZoomScale() {\n\n    return Math.pow(0.95, scope.zoomSpeed);\n  }\n\n  function rotateLeft(angle) {\n\n    sphericalDelta.theta -= angle;\n  }\n\n  function rotateUp(angle) {\n\n    sphericalDelta.phi -= angle;\n  }\n\n  var panLeft = function () {\n\n    var v = new THREE.Vector3();\n\n    return function panLeft(distance, objectMatrix) {\n\n      v.setFromMatrixColumn(objectMatrix, 0); // get X column of objectMatrix\n      v.multiplyScalar(-distance);\n\n      panOffset.add(v);\n    };\n  }();\n\n  var panUp = function () {\n\n    var v = new THREE.Vector3();\n\n    return function panUp(distance, objectMatrix) {\n\n      v.setFromMatrixColumn(objectMatrix, 1); // get Y column of objectMatrix\n      v.multiplyScalar(distance);\n\n      panOffset.add(v);\n    };\n  }();\n\n  // deltaX and deltaY are in pixels; right and down are positive\n  var pan = function () {\n\n    var offset = new THREE.Vector3();\n\n    return function pan(deltaX, deltaY) {\n\n      var element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n      if (scope.object instanceof THREE.PerspectiveCamera) {\n\n        // perspective\n        var position = scope.object.position;\n        offset.copy(position).sub(scope.target);\n        var targetDistance = offset.length();\n\n        // half of the fov is center to top of screen\n        targetDistance *= Math.tan(scope.object.fov / 2 * Math.PI / 180.0);\n\n        // we actually don't use screenWidth, since perspective camera is fixed to screen height\n        panLeft(2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix);\n        panUp(2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix);\n      } else if (scope.object instanceof THREE.OrthographicCamera) {\n\n        // orthographic\n        panLeft(deltaX * (scope.object.right - scope.object.left) / scope.object.zoom / element.clientWidth, scope.object.matrix);\n        panUp(deltaY * (scope.object.top - scope.object.bottom) / scope.object.zoom / element.clientHeight, scope.object.matrix);\n      } else {\n\n        // camera neither orthographic nor perspective\n        console.warn('WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.');\n        scope.enablePan = false;\n      }\n    };\n  }();\n\n  function dollyIn(dollyScale) {\n\n    if (scope.object instanceof THREE.PerspectiveCamera) {\n\n      scale /= dollyScale;\n    } else if (scope.object instanceof THREE.OrthographicCamera) {\n\n      scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom * dollyScale));\n      scope.object.updateProjectionMatrix();\n      zoomChanged = true;\n    } else {\n\n      console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n      scope.enableZoom = false;\n    }\n  }\n\n  function dollyOut(dollyScale) {\n\n    if (scope.object instanceof THREE.PerspectiveCamera) {\n\n      scale *= dollyScale;\n    } else if (scope.object instanceof THREE.OrthographicCamera) {\n\n      scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom / dollyScale));\n      scope.object.updateProjectionMatrix();\n      zoomChanged = true;\n    } else {\n\n      console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n      scope.enableZoom = false;\n    }\n  }\n\n  //\n  // event callbacks - update the object state\n  //\n\n  function handleMouseDownRotate(event) {\n\n    rotateStart.set(event.clientX, event.clientY);\n  }\n\n  function handleMouseDownDolly(event) {\n\n    dollyStart.set(event.clientX, event.clientY);\n  }\n\n  function handleMouseDownPan(event) {\n\n    panStart.set(event.clientX, event.clientY);\n  }\n\n  function handleMouseMoveRotate(event) {\n\n    rotateEnd.set(event.clientX, event.clientY);\n    rotateDelta.subVectors(rotateEnd, rotateStart);\n\n    var element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n    // rotating across whole screen goes 360 degrees around\n    rotateLeft(2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed);\n\n    // rotating up and down along whole screen attempts to go 360, but limited to 180\n    rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed);\n\n    rotateStart.copy(rotateEnd);\n\n    scope.update();\n  }\n\n  function handleMouseMoveDolly(event) {\n\n    dollyEnd.set(event.clientX, event.clientY);\n\n    dollyDelta.subVectors(dollyEnd, dollyStart);\n\n    if (dollyDelta.y > 0) {\n\n      dollyIn(getZoomScale());\n    } else if (dollyDelta.y < 0) {\n\n      dollyOut(getZoomScale());\n    }\n\n    dollyStart.copy(dollyEnd);\n\n    scope.update();\n  }\n\n  function handleMouseMovePan(event) {\n\n    panEnd.set(event.clientX, event.clientY);\n\n    panDelta.subVectors(panEnd, panStart);\n\n    pan(panDelta.x, panDelta.y);\n\n    panStart.copy(panEnd);\n\n    scope.update();\n  }\n\n  function handleMouseUp(event) {}\n\n  function handleMouseWheel(event) {\n\n    if (event.deltaY < 0) {\n\n      dollyOut(getZoomScale());\n    } else if (event.deltaY > 0) {\n\n      dollyIn(getZoomScale());\n    }\n\n    scope.update();\n  }\n\n  function handleKeyDown(event) {\n\n    switch (event.keyCode) {\n\n      case scope.keys.UP:\n        pan(0, scope.keyPanSpeed);\n        scope.update();\n        break;\n\n      case scope.keys.BOTTOM:\n        pan(0, -scope.keyPanSpeed);\n        scope.update();\n        break;\n\n      case scope.keys.LEFT:\n        pan(scope.keyPanSpeed, 0);\n        scope.update();\n        break;\n\n      case scope.keys.RIGHT:\n        pan(-scope.keyPanSpeed, 0);\n        scope.update();\n        break;\n\n    }\n  }\n\n  function handleTouchStartRotate(event) {\n    rotateStart.set(event.touches[0].pageX, event.touches[0].pageY);\n  }\n\n  function handleTouchStartDolly(event) {\n    var dx = event.touches[0].pageX - event.touches[1].pageX;\n    var dy = event.touches[0].pageY - event.touches[1].pageY;\n\n    var distance = Math.sqrt(dx * dx + dy * dy);\n\n    dollyStart.set(0, distance);\n  }\n\n  function handleTouchStartPan(event) {\n    panStart.set(event.touches[0].pageX, event.touches[0].pageY);\n  }\n\n  function handleTouchMoveRotate(event) {\n    rotateEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n    rotateDelta.subVectors(rotateEnd, rotateStart);\n\n    var element = scope.domElement === document ? scope.domElement.body : scope.domElement;\n\n    // rotating across whole screen goes 360 degrees around\n    rotateLeft(2 * Math.PI * rotateDelta.x / element.clientWidth * scope.rotateSpeed);\n\n    // rotating up and down along whole screen attempts to go 360, but limited to 180\n    rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight * scope.rotateSpeed);\n\n    rotateStart.copy(rotateEnd);\n\n    scope.update();\n  }\n\n  function handleTouchMoveDolly(event) {\n    var dx = event.touches[0].pageX - event.touches[1].pageX;\n    var dy = event.touches[0].pageY - event.touches[1].pageY;\n\n    var distance = Math.sqrt(dx * dx + dy * dy);\n\n    dollyEnd.set(0, distance);\n\n    dollyDelta.subVectors(dollyEnd, dollyStart);\n\n    if (dollyDelta.y > 0) {\n\n      dollyOut(getZoomScale());\n    } else if (dollyDelta.y < 0) {\n\n      dollyIn(getZoomScale());\n    }\n\n    dollyStart.copy(dollyEnd);\n\n    scope.update();\n  }\n\n  function handleTouchMovePan(event) {\n    panEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n\n    panDelta.subVectors(panEnd, panStart);\n\n    pan(panDelta.x, panDelta.y);\n\n    panStart.copy(panEnd);\n\n    scope.update();\n  }\n\n  function handleTouchEnd(event) {}\n\n  //\n  // event handlers - FSM: listen for events and reset state\n  //\n\n  function onMouseDown(event) {\n    if (scope.enabled === false) return;\n\n    event.preventDefault();\n\n    if (event.button === scope.mouseButtons.ORBIT) {\n\n      if (scope.enableRotate === false) return;\n\n      handleMouseDownRotate(event);\n\n      state = STATE.ROTATE;\n    } else if (event.button === scope.mouseButtons.ZOOM) {\n\n      if (scope.enableZoom === false) return;\n\n      handleMouseDownDolly(event);\n\n      state = STATE.DOLLY;\n    } else if (event.button === scope.mouseButtons.PAN) {\n\n      if (scope.enablePan === false) return;\n\n      handleMouseDownPan(event);\n\n      state = STATE.PAN;\n    }\n\n    if (state !== STATE.NONE) {\n\n      document.addEventListener('mousemove', onMouseMove, false);\n      document.addEventListener('mouseup', onMouseUp, false);\n\n      scope.dispatchEvent(startEvent);\n    }\n  }\n\n  function onMouseMove(event) {\n\n    if (scope.enabled === false) return;\n\n    if (state === STATE.ROTATE) {\n\n      if (scope.enableRotate === false) return;\n\n      handleMouseMoveRotate(event);\n    } else if (state === STATE.DOLLY) {\n\n      if (scope.enableZoom === false) return;\n\n      handleMouseMoveDolly(event);\n    } else if (state === STATE.PAN) {\n\n      if (scope.enablePan === false) return;\n\n      handleMouseMovePan(event);\n    }\n  }\n\n  function onMouseUp(event) {\n\n    if (scope.enabled === false) return;\n\n    handleMouseUp(event);\n\n    document.removeEventListener('mousemove', onMouseMove, false);\n    document.removeEventListener('mouseup', onMouseUp, false);\n\n    scope.dispatchEvent(endEvent);\n\n    state = STATE.NONE;\n  }\n\n  function onMouseWheel(event) {\n\n    if (scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE && state !== STATE.ROTATE) return;\n\n    event.stopPropagation();\n\n    handleMouseWheel(event);\n\n    scope.dispatchEvent(startEvent); // not sure why these are here...\n    scope.dispatchEvent(endEvent);\n  }\n\n  function onKeyDown(event) {\n\n    if (scope.enabled === false || scope.enableKeys === false || scope.enablePan === false) return;\n\n    handleKeyDown(event);\n  }\n\n  function onTouchStart(event) {\n\n    if (scope.enabled === false) return;\n\n    switch (event.touches.length) {\n\n      case 1:\n        // one-fingered touch: rotate\n\n        if (scope.enableRotate === false) return;\n\n        handleTouchStartRotate(event);\n\n        state = STATE.TOUCH_ROTATE;\n\n        break;\n\n      case 2:\n        // two-fingered touch: dolly\n\n        if (scope.enableZoom === false) return;\n\n        handleTouchStartDolly(event);\n\n        state = STATE.TOUCH_DOLLY;\n\n        break;\n\n      case 3:\n        // three-fingered touch: pan\n\n        if (scope.enablePan === false) return;\n\n        handleTouchStartPan(event);\n\n        state = STATE.TOUCH_PAN;\n\n        break;\n\n      default:\n\n        state = STATE.NONE;\n\n    }\n\n    if (state !== STATE.NONE) {\n\n      scope.dispatchEvent(startEvent);\n    }\n  }\n\n  function onTouchMove(event) {\n\n    if (scope.enabled === false) return;\n\n    event.stopPropagation();\n\n    switch (event.touches.length) {\n\n      case 1:\n        // one-fingered touch: rotate\n\n        if (scope.enableRotate === false) return;\n        if (state !== STATE.TOUCH_ROTATE) return; // is this needed?...\n\n        handleTouchMoveRotate(event);\n\n        break;\n\n      case 2:\n        // two-fingered touch: dolly\n\n        if (scope.enableZoom === false) return;\n        if (state !== STATE.TOUCH_DOLLY) return; // is this needed?...\n\n        handleTouchMoveDolly(event);\n\n        break;\n\n      case 3:\n        // three-fingered touch: pan\n\n        if (scope.enablePan === false) return;\n        if (state !== STATE.TOUCH_PAN) return; // is this needed?...\n\n        handleTouchMovePan(event);\n\n        break;\n\n      default:\n\n        state = STATE.NONE;\n\n    }\n  }\n\n  function onTouchEnd(event) {\n\n    if (scope.enabled === false) return;\n\n    handleTouchEnd(event);\n\n    scope.dispatchEvent(endEvent);\n\n    state = STATE.NONE;\n  }\n\n  function onContextMenu(event) {\n    event.preventDefault();\n  }\n\n  scope.domElement.addEventListener('contextmenu', onContextMenu, false);\n\n  scope.domElement.addEventListener('mousedown', onMouseDown, false);\n  scope.domElement.addEventListener('wheel', onMouseWheel, { passive: true });\n\n  scope.domElement.addEventListener('touchstart', onTouchStart, { passive: true });\n  scope.domElement.addEventListener('touchend', onTouchEnd, { passive: true });\n  scope.domElement.addEventListener('touchmove', onTouchMove, { passive: true });\n\n  window.addEventListener('keydown', onKeyDown, { passive: true });\n\n  // force an update at start\n\n  this.update();\n};\n\nOrbitControls.prototype = Object.create(THREE.EventDispatcher.prototype);\nOrbitControls.prototype.constructor = OrbitControls;\n\nObject.defineProperties(OrbitControls.prototype, {\n\n  center: {\n\n    get: function get() {\n\n      console.warn('THREE.OrbitControls: .center has been renamed to .target');\n      return this.target;\n    }\n\n  },\n\n  // backward compatibility\n\n  noZoom: {\n\n    get: function get() {\n\n      console.warn('THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.');\n      return !this.enableZoom;\n    },\n\n    set: function set(value) {\n\n      console.warn('THREE.OrbitControls: .noZoom has been deprecated. Use .enableZoom instead.');\n      this.enableZoom = !value;\n    }\n\n  },\n\n  noRotate: {\n\n    get: function get() {\n\n      console.warn('THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.');\n      return !this.enableRotate;\n    },\n\n    set: function set(value) {\n\n      console.warn('THREE.OrbitControls: .noRotate has been deprecated. Use .enableRotate instead.');\n      this.enableRotate = !value;\n    }\n\n  },\n\n  noPan: {\n\n    get: function get() {\n\n      console.warn('THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.');\n      return !this.enablePan;\n    },\n\n    set: function set(value) {\n\n      console.warn('THREE.OrbitControls: .noPan has been deprecated. Use .enablePan instead.');\n      this.enablePan = !value;\n    }\n\n  },\n\n  noKeys: {\n\n    get: function get() {\n\n      console.warn('THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.');\n      return !this.enableKeys;\n    },\n\n    set: function set(value) {\n\n      console.warn('THREE.OrbitControls: .noKeys has been deprecated. Use .enableKeys instead.');\n      this.enableKeys = !value;\n    }\n\n  },\n\n  staticMoving: {\n\n    get: function get() {\n\n      console.warn('THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.');\n      return !this.enableDamping;\n    },\n\n    set: function set(value) {\n\n      console.warn('THREE.OrbitControls: .staticMoving has been deprecated. Use .enableDamping instead.');\n      this.enableDamping = !value;\n    }\n\n  },\n\n  dynamicDampingFactor: {\n\n    get: function get() {\n\n      console.warn('THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.');\n      return this.dampingFactor;\n    },\n\n    set: function set(value) {\n\n      console.warn('THREE.OrbitControls: .dynamicDampingFactor has been renamed. Use .dampingFactor instead.');\n      this.dampingFactor = value;\n    }\n\n  }\n\n});"]},"metadata":{},"sourceType":"script"}