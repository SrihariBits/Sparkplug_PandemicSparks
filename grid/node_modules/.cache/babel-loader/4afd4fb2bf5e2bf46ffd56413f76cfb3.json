{"ast":null,"code":"/**\n * @author mrdoob / http://mrdoob.com/\n */\nvar THREE = window.THREE || require('three');\n\nlet OBJLoader;\n\nOBJLoader = function () {\n  // o object_name | g group_name\n  var object_pattern = /^[og]\\s*(.+)?/; // mtllib file_reference\n\n  var material_library_pattern = /^mtllib /; // usemtl material_name\n\n  var material_use_pattern = /^usemtl /;\n\n  function ParserState() {\n    var state = {\n      objects: [],\n      object: {},\n      vertices: [],\n      normals: [],\n      colors: [],\n      uvs: [],\n      materialLibraries: [],\n      startObject: function (name, fromDeclaration) {\n        // If the current object (initial from reset) is not from a g/o declaration in the parsed\n        // file. We need to use it for the first parsed g/o to keep things in sync.\n        if (this.object && this.object.fromDeclaration === false) {\n          this.object.name = name;\n          this.object.fromDeclaration = fromDeclaration !== false;\n          return;\n        }\n\n        var previousMaterial = this.object && typeof this.object.currentMaterial === 'function' ? this.object.currentMaterial() : undefined;\n\n        if (this.object && typeof this.object._finalize === 'function') {\n          this.object._finalize(true);\n        }\n\n        this.object = {\n          name: name || '',\n          fromDeclaration: fromDeclaration !== false,\n          geometry: {\n            vertices: [],\n            normals: [],\n            colors: [],\n            uvs: []\n          },\n          materials: [],\n          smooth: true,\n          startMaterial: function (name, libraries) {\n            var previous = this._finalize(false); // New usemtl declaration overwrites an inherited material, except if faces were declared\n            // after the material, then it must be preserved for proper MultiMaterial continuation.\n\n\n            if (previous && (previous.inherited || previous.groupCount <= 0)) {\n              this.materials.splice(previous.index, 1);\n            }\n\n            var material = {\n              index: this.materials.length,\n              name: name || '',\n              mtllib: Array.isArray(libraries) && libraries.length > 0 ? libraries[libraries.length - 1] : '',\n              smooth: previous !== undefined ? previous.smooth : this.smooth,\n              groupStart: previous !== undefined ? previous.groupEnd : 0,\n              groupEnd: -1,\n              groupCount: -1,\n              inherited: false,\n              clone: function (index) {\n                var cloned = {\n                  index: typeof index === 'number' ? index : this.index,\n                  name: this.name,\n                  mtllib: this.mtllib,\n                  smooth: this.smooth,\n                  groupStart: 0,\n                  groupEnd: -1,\n                  groupCount: -1,\n                  inherited: false\n                };\n                cloned.clone = this.clone.bind(cloned);\n                return cloned;\n              }\n            };\n            this.materials.push(material);\n            return material;\n          },\n          currentMaterial: function () {\n            if (this.materials.length > 0) {\n              return this.materials[this.materials.length - 1];\n            }\n\n            return undefined;\n          },\n          _finalize: function (end) {\n            var lastMultiMaterial = this.currentMaterial();\n\n            if (lastMultiMaterial && lastMultiMaterial.groupEnd === -1) {\n              lastMultiMaterial.groupEnd = this.geometry.vertices.length / 3;\n              lastMultiMaterial.groupCount = lastMultiMaterial.groupEnd - lastMultiMaterial.groupStart;\n              lastMultiMaterial.inherited = false;\n            } // Ignore objects tail materials if no face declarations followed them before a new o/g started.\n\n\n            if (end && this.materials.length > 1) {\n              for (var mi = this.materials.length - 1; mi >= 0; mi--) {\n                if (this.materials[mi].groupCount <= 0) {\n                  this.materials.splice(mi, 1);\n                }\n              }\n            } // Guarantee at least one empty material, this makes the creation later more straight forward.\n\n\n            if (end && this.materials.length === 0) {\n              this.materials.push({\n                name: '',\n                smooth: this.smooth\n              });\n            }\n\n            return lastMultiMaterial;\n          }\n        }; // Inherit previous objects material.\n        // Spec tells us that a declared material must be set to all objects until a new material is declared.\n        // If a usemtl declaration is encountered while this new object is being parsed, it will\n        // overwrite the inherited material. Exception being that there was already face declarations\n        // to the inherited material, then it will be preserved for proper MultiMaterial continuation.\n\n        if (previousMaterial && previousMaterial.name && typeof previousMaterial.clone === 'function') {\n          var declared = previousMaterial.clone(0);\n          declared.inherited = true;\n          this.object.materials.push(declared);\n        }\n\n        this.objects.push(this.object);\n      },\n      finalize: function () {\n        if (this.object && typeof this.object._finalize === 'function') {\n          this.object._finalize(true);\n        }\n      },\n      parseVertexIndex: function (value, len) {\n        var index = parseInt(value, 10);\n        return (index >= 0 ? index - 1 : index + len / 3) * 3;\n      },\n      parseNormalIndex: function (value, len) {\n        var index = parseInt(value, 10);\n        return (index >= 0 ? index - 1 : index + len / 3) * 3;\n      },\n      parseUVIndex: function (value, len) {\n        var index = parseInt(value, 10);\n        return (index >= 0 ? index - 1 : index + len / 2) * 2;\n      },\n      addVertex: function (a, b, c) {\n        var src = this.vertices;\n        var dst = this.object.geometry.vertices;\n        dst.push(src[a + 0], src[a + 1], src[a + 2]);\n        dst.push(src[b + 0], src[b + 1], src[b + 2]);\n        dst.push(src[c + 0], src[c + 1], src[c + 2]);\n      },\n      addVertexPoint: function (a) {\n        var src = this.vertices;\n        var dst = this.object.geometry.vertices;\n        dst.push(src[a + 0], src[a + 1], src[a + 2]);\n      },\n      addVertexLine: function (a) {\n        var src = this.vertices;\n        var dst = this.object.geometry.vertices;\n        dst.push(src[a + 0], src[a + 1], src[a + 2]);\n      },\n      addNormal: function (a, b, c) {\n        var src = this.normals;\n        var dst = this.object.geometry.normals;\n        dst.push(src[a + 0], src[a + 1], src[a + 2]);\n        dst.push(src[b + 0], src[b + 1], src[b + 2]);\n        dst.push(src[c + 0], src[c + 1], src[c + 2]);\n      },\n      addColor: function (a, b, c) {\n        var src = this.colors;\n        var dst = this.object.geometry.colors;\n        dst.push(src[a + 0], src[a + 1], src[a + 2]);\n        dst.push(src[b + 0], src[b + 1], src[b + 2]);\n        dst.push(src[c + 0], src[c + 1], src[c + 2]);\n      },\n      addUV: function (a, b, c) {\n        var src = this.uvs;\n        var dst = this.object.geometry.uvs;\n        dst.push(src[a + 0], src[a + 1]);\n        dst.push(src[b + 0], src[b + 1]);\n        dst.push(src[c + 0], src[c + 1]);\n      },\n      addUVLine: function (a) {\n        var src = this.uvs;\n        var dst = this.object.geometry.uvs;\n        dst.push(src[a + 0], src[a + 1]);\n      },\n      addFace: function (a, b, c, ua, ub, uc, na, nb, nc) {\n        var vLen = this.vertices.length;\n        var ia = this.parseVertexIndex(a, vLen);\n        var ib = this.parseVertexIndex(b, vLen);\n        var ic = this.parseVertexIndex(c, vLen);\n        this.addVertex(ia, ib, ic);\n\n        if (ua !== undefined && ua !== '') {\n          var uvLen = this.uvs.length;\n          ia = this.parseUVIndex(ua, uvLen);\n          ib = this.parseUVIndex(ub, uvLen);\n          ic = this.parseUVIndex(uc, uvLen);\n          this.addUV(ia, ib, ic);\n        }\n\n        if (na !== undefined && na !== '') {\n          // Normals are many times the same. If so, skip function call and parseInt.\n          var nLen = this.normals.length;\n          ia = this.parseNormalIndex(na, nLen);\n          ib = na === nb ? ia : this.parseNormalIndex(nb, nLen);\n          ic = na === nc ? ia : this.parseNormalIndex(nc, nLen);\n          this.addNormal(ia, ib, ic);\n        }\n\n        if (this.colors.length > 0) {\n          this.addColor(ia, ib, ic);\n        }\n      },\n      addPointGeometry: function (vertices) {\n        this.object.geometry.type = 'Points';\n        var vLen = this.vertices.length;\n\n        for (var vi = 0, l = vertices.length; vi < l; vi++) {\n          this.addVertexPoint(this.parseVertexIndex(vertices[vi], vLen));\n        }\n      },\n      addLineGeometry: function (vertices, uvs) {\n        this.object.geometry.type = 'Line';\n        var vLen = this.vertices.length;\n        var uvLen = this.uvs.length;\n\n        for (var vi = 0, l = vertices.length; vi < l; vi++) {\n          this.addVertexLine(this.parseVertexIndex(vertices[vi], vLen));\n        }\n\n        for (var uvi = 0, l = uvs.length; uvi < l; uvi++) {\n          this.addUVLine(this.parseUVIndex(uvs[uvi], uvLen));\n        }\n      }\n    };\n    state.startObject('', false);\n    return state;\n  } //\n\n\n  function OBJLoader(manager) {\n    this.manager = manager !== undefined ? manager : THREE.DefaultLoadingManager;\n    this.materials = null;\n  }\n\n  OBJLoader.prototype = {\n    constructor: OBJLoader,\n    load: function (url, onLoad, onProgress, onError) {\n      var scope = this;\n      var loader = new THREE.FileLoader(scope.manager);\n      loader.setPath(this.path);\n      loader.load(url, function (text) {\n        onLoad(scope.parse(text));\n      }, onProgress, onError);\n    },\n    setPath: function (value) {\n      this.path = value;\n    },\n    setMaterials: function (materials) {\n      this.materials = materials;\n      return this;\n    },\n    parse: function (text) {\n      console.time('OBJLoader');\n      var state = new ParserState();\n\n      if (text.indexOf('\\r\\n') !== -1) {\n        // This is faster than String.split with regex that splits on both\n        text = text.replace(/\\r\\n/g, '\\n');\n      }\n\n      if (text.indexOf('\\\\\\n') !== -1) {\n        // join lines separated by a line continuation character (\\)\n        text = text.replace(/\\\\\\n/g, '');\n      }\n\n      var lines = text.split('\\n');\n      var line = '',\n          lineFirstChar = '';\n      var lineLength = 0;\n      var result = []; // Faster to just trim left side of the line. Use if available.\n\n      var trimLeft = typeof ''.trimLeft === 'function';\n\n      for (var i = 0, l = lines.length; i < l; i++) {\n        line = lines[i];\n        line = trimLeft ? line.trimLeft() : line.trim();\n        lineLength = line.length;\n        if (lineLength === 0) continue;\n        lineFirstChar = line.charAt(0); // @todo invoke passed in handler if any\n\n        if (lineFirstChar === '#') continue;\n\n        if (lineFirstChar === 'v') {\n          var data = line.split(/\\s+/);\n\n          switch (data[0]) {\n            case 'v':\n              state.vertices.push(parseFloat(data[1]), parseFloat(data[2]), parseFloat(data[3]));\n\n              if (data.length === 8) {\n                state.colors.push(parseFloat(data[4]), parseFloat(data[5]), parseFloat(data[6]));\n              }\n\n              break;\n\n            case 'vn':\n              state.normals.push(parseFloat(data[1]), parseFloat(data[2]), parseFloat(data[3]));\n              break;\n\n            case 'vt':\n              state.uvs.push(parseFloat(data[1]), parseFloat(data[2]));\n              break;\n          }\n        } else if (lineFirstChar === 'f') {\n          var lineData = line.substr(1).trim();\n          var vertexData = lineData.split(/\\s+/);\n          var faceVertices = []; // Parse the face vertex data into an easy to work with format\n\n          for (var j = 0, jl = vertexData.length; j < jl; j++) {\n            var vertex = vertexData[j];\n\n            if (vertex.length > 0) {\n              var vertexParts = vertex.split('/');\n              faceVertices.push(vertexParts);\n            }\n          } // Draw an edge between the first vertex and all subsequent vertices to form an n-gon\n\n\n          var v1 = faceVertices[0];\n\n          for (var j = 1, jl = faceVertices.length - 1; j < jl; j++) {\n            var v2 = faceVertices[j];\n            var v3 = faceVertices[j + 1];\n            state.addFace(v1[0], v2[0], v3[0], v1[1], v2[1], v3[1], v1[2], v2[2], v3[2]);\n          }\n        } else if (lineFirstChar === 'l') {\n          var lineParts = line.substring(1).trim().split(\" \");\n          var lineVertices = [],\n              lineUVs = [];\n\n          if (line.indexOf(\"/\") === -1) {\n            lineVertices = lineParts;\n          } else {\n            for (var li = 0, llen = lineParts.length; li < llen; li++) {\n              var parts = lineParts[li].split(\"/\");\n              if (parts[0] !== \"\") lineVertices.push(parts[0]);\n              if (parts[1] !== \"\") lineUVs.push(parts[1]);\n            }\n          }\n\n          state.addLineGeometry(lineVertices, lineUVs);\n        } else if (lineFirstChar === 'p') {\n          var lineData = line.substr(1).trim();\n          var pointData = lineData.split(\" \");\n          state.addPointGeometry(pointData);\n        } else if ((result = object_pattern.exec(line)) !== null) {\n          // o object_name\n          // or\n          // g group_name\n          // WORKAROUND: https://bugs.chromium.org/p/v8/issues/detail?id=2869\n          // var name = result[ 0 ].substr( 1 ).trim();\n          var name = (\" \" + result[0].substr(1).trim()).substr(1);\n          state.startObject(name);\n        } else if (material_use_pattern.test(line)) {\n          // material\n          state.object.startMaterial(line.substring(7).trim(), state.materialLibraries);\n        } else if (material_library_pattern.test(line)) {\n          // mtl file\n          state.materialLibraries.push(line.substring(7).trim());\n        } else if (lineFirstChar === 's') {\n          result = line.split(' '); // smooth shading\n          // @todo Handle files that have varying smooth values for a set of faces inside one geometry,\n          // but does not define a usemtl for each face set.\n          // This should be detected and a dummy material created (later MultiMaterial and geometry groups).\n          // This requires some care to not create extra material on each smooth value for \"normal\" obj files.\n          // where explicit usemtl defines geometry groups.\n          // Example asset: examples/models/obj/cerberus/Cerberus.obj\n\n          /*\n           * http://paulbourke.net/dataformats/obj/\n           * or\n           * http://www.cs.utah.edu/~boulos/cs3505/obj_spec.pdf\n           *\n           * From chapter \"Grouping\" Syntax explanation \"s group_number\":\n           * \"group_number is the smoothing group number. To turn off smoothing groups, use a value of 0 or off.\n           * Polygonal elements use group numbers to put elements in different smoothing groups. For free-form\n           * surfaces, smoothing groups are either turned on or off; there is no difference between values greater\n           * than 0.\"\n           */\n\n          if (result.length > 1) {\n            var value = result[1].trim().toLowerCase();\n            state.object.smooth = value !== '0' && value !== 'off';\n          } else {\n            // ZBrush can produce \"s\" lines #11707\n            state.object.smooth = true;\n          }\n\n          var material = state.object.currentMaterial();\n          if (material) material.smooth = state.object.smooth;\n        } else {\n          // Handle null terminated files without exception\n          if (line === '\\0') continue;\n          throw new Error('THREE.OBJLoader: Unexpected line: \"' + line + '\"');\n        }\n      }\n\n      state.finalize();\n      var container = new THREE.Group();\n      container.materialLibraries = [].concat(state.materialLibraries);\n\n      for (var i = 0, l = state.objects.length; i < l; i++) {\n        var object = state.objects[i];\n        var geometry = object.geometry;\n        var materials = object.materials;\n        var isLine = geometry.type === 'Line';\n        var isPoints = geometry.type === 'Points';\n        var hasVertexColors = false; // Skip o/g line declarations that did not follow with any faces\n\n        if (geometry.vertices.length === 0) continue;\n        var buffergeometry = new THREE.BufferGeometry();\n        buffergeometry.addAttribute('position', new THREE.Float32BufferAttribute(geometry.vertices, 3));\n\n        if (geometry.normals.length > 0) {\n          buffergeometry.addAttribute('normal', new THREE.Float32BufferAttribute(geometry.normals, 3));\n        } else {\n          buffergeometry.computeVertexNormals();\n        }\n\n        if (geometry.colors.length > 0) {\n          hasVertexColors = true;\n          buffergeometry.addAttribute('color', new THREE.Float32BufferAttribute(geometry.colors, 3));\n        }\n\n        if (geometry.uvs.length > 0) {\n          buffergeometry.addAttribute('uv', new THREE.Float32BufferAttribute(geometry.uvs, 2));\n        } // Create materials\n\n\n        var createdMaterials = [];\n\n        for (var mi = 0, miLen = materials.length; mi < miLen; mi++) {\n          var sourceMaterial = materials[mi];\n          var material = undefined;\n\n          if (this.materials !== null) {\n            material = this.materials.create(sourceMaterial.name); // mtl etc. loaders probably can't create line materials correctly, copy properties to a line material.\n\n            if (isLine && material && !(material instanceof THREE.LineBasicMaterial)) {\n              var materialLine = new THREE.LineBasicMaterial();\n              materialLine.copy(material);\n              materialLine.lights = false; // TOFIX\n\n              material = materialLine;\n            } else if (isPoints && material && !(material instanceof THREE.PointsMaterial)) {\n              var materialPoints = new THREE.PointsMaterial({\n                size: 10,\n                sizeAttenuation: false\n              });\n              materialLine.copy(material);\n              material = materialPoints;\n            }\n          }\n\n          if (!material) {\n            if (isLine) {\n              material = new THREE.LineBasicMaterial();\n            } else if (isPoints) {\n              material = new THREE.PointsMaterial({\n                size: 1,\n                sizeAttenuation: false\n              });\n            } else {\n              material = new THREE.MeshPhongMaterial();\n            }\n\n            material.name = sourceMaterial.name;\n          }\n\n          material.flatShading = sourceMaterial.smooth ? false : true;\n          material.vertexColors = hasVertexColors ? THREE.VertexColors : THREE.NoColors;\n          createdMaterials.push(material);\n        } // Create mesh\n\n\n        var mesh;\n\n        if (createdMaterials.length > 1) {\n          for (var mi = 0, miLen = materials.length; mi < miLen; mi++) {\n            var sourceMaterial = materials[mi];\n            buffergeometry.addGroup(sourceMaterial.groupStart, sourceMaterial.groupCount, mi);\n          }\n\n          if (isLine) {\n            mesh = new THREE.LineSegments(buffergeometry, createdMaterials);\n          } else if (isPoints) {\n            mesh = new THREE.Points(buffergeometry, createdMaterials);\n          } else {\n            mesh = new THREE.Mesh(buffergeometry, createdMaterials);\n          }\n        } else {\n          if (isLine) {\n            mesh = new THREE.LineSegments(buffergeometry, createdMaterials[0]);\n          } else if (isPoints) {\n            mesh = new THREE.Points(buffergeometry, createdMaterials[0]);\n          } else {\n            mesh = new THREE.Mesh(buffergeometry, createdMaterials[0]);\n          }\n        }\n\n        mesh.name = object.name;\n        container.add(mesh);\n      }\n\n      console.timeEnd('OBJLoader');\n      return container;\n    }\n  };\n  return OBJLoader;\n}();\n\nmodule.exports = OBJLoader;","map":{"version":3,"sources":["/home/srihari/Desktop/Sparkplug_PandemicSparks/grid/src/components/catalog/utils/obj-loader.js"],"names":["THREE","window","require","OBJLoader","object_pattern","material_library_pattern","material_use_pattern","ParserState","state","objects","object","vertices","normals","colors","uvs","materialLibraries","startObject","name","fromDeclaration","previousMaterial","currentMaterial","undefined","_finalize","geometry","materials","smooth","startMaterial","libraries","previous","inherited","groupCount","splice","index","material","length","mtllib","Array","isArray","groupStart","groupEnd","clone","cloned","bind","push","end","lastMultiMaterial","mi","declared","finalize","parseVertexIndex","value","len","parseInt","parseNormalIndex","parseUVIndex","addVertex","a","b","c","src","dst","addVertexPoint","addVertexLine","addNormal","addColor","addUV","addUVLine","addFace","ua","ub","uc","na","nb","nc","vLen","ia","ib","ic","uvLen","nLen","addPointGeometry","type","vi","l","addLineGeometry","uvi","manager","DefaultLoadingManager","prototype","constructor","load","url","onLoad","onProgress","onError","scope","loader","FileLoader","setPath","path","text","parse","setMaterials","console","time","indexOf","replace","lines","split","line","lineFirstChar","lineLength","result","trimLeft","i","trim","charAt","data","parseFloat","lineData","substr","vertexData","faceVertices","j","jl","vertex","vertexParts","v1","v2","v3","lineParts","substring","lineVertices","lineUVs","li","llen","parts","pointData","exec","test","toLowerCase","Error","container","Group","concat","isLine","isPoints","hasVertexColors","buffergeometry","BufferGeometry","addAttribute","Float32BufferAttribute","computeVertexNormals","createdMaterials","miLen","sourceMaterial","create","LineBasicMaterial","materialLine","copy","lights","PointsMaterial","materialPoints","size","sizeAttenuation","MeshPhongMaterial","flatShading","vertexColors","VertexColors","NoColors","mesh","addGroup","LineSegments","Points","Mesh","add","timeEnd","module","exports"],"mappings":"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","sourcesContent":["/**\n * @author mrdoob / http://mrdoob.com/\n */\nvar THREE = window.THREE || require('three');\nlet OBJLoader;\nOBJLoader = (function () {\n  // o object_name | g group_name\n  var object_pattern = /^[og]\\s*(.+)?/;\n  // mtllib file_reference\n  var material_library_pattern = /^mtllib /;\n  // usemtl material_name\n  var material_use_pattern = /^usemtl /;\n  function ParserState() {\n    var state = {\n      objects: [],\n      object: {},\n      vertices: [],\n      normals: [],\n      colors: [],\n      uvs: [],\n      materialLibraries: [],\n      startObject: function (name, fromDeclaration) {\n        // If the current object (initial from reset) is not from a g/o declaration in the parsed\n        // file. We need to use it for the first parsed g/o to keep things in sync.\n        if (this.object && this.object.fromDeclaration === false) {\n          this.object.name = name;\n          this.object.fromDeclaration = (fromDeclaration !== false);\n          return;\n        }\n        var previousMaterial = (this.object && typeof this.object.currentMaterial === 'function' ? this.object.currentMaterial() : undefined);\n        if (this.object && typeof this.object._finalize === 'function') {\n          this.object._finalize(true);\n        }\n        this.object = {\n          name: name || '',\n          fromDeclaration: (fromDeclaration !== false),\n          geometry: {\n            vertices: [],\n            normals: [],\n            colors: [],\n            uvs: []\n          },\n          materials: [],\n          smooth: true,\n          startMaterial: function (name, libraries) {\n            var previous = this._finalize(false);\n            // New usemtl declaration overwrites an inherited material, except if faces were declared\n            // after the material, then it must be preserved for proper MultiMaterial continuation.\n            if (previous && (previous.inherited || previous.groupCount <= 0)) {\n              this.materials.splice(previous.index, 1);\n            }\n            var material = {\n              index: this.materials.length,\n              name: name || '',\n              mtllib: (Array.isArray(libraries) && libraries.length > 0 ? libraries[libraries.length - 1] : ''),\n              smooth: (previous !== undefined ? previous.smooth : this.smooth),\n              groupStart: (previous !== undefined ? previous.groupEnd : 0),\n              groupEnd: - 1,\n              groupCount: - 1,\n              inherited: false,\n              clone: function (index) {\n                var cloned = {\n                  index: (typeof index === 'number' ? index : this.index),\n                  name: this.name,\n                  mtllib: this.mtllib,\n                  smooth: this.smooth,\n                  groupStart: 0,\n                  groupEnd: - 1,\n                  groupCount: - 1,\n                  inherited: false\n                };\n                cloned.clone = this.clone.bind(cloned);\n                return cloned;\n              }\n            };\n            this.materials.push(material);\n            return material;\n          },\n          currentMaterial: function () {\n            if (this.materials.length > 0) {\n              return this.materials[this.materials.length - 1];\n            }\n            return undefined;\n          },\n          _finalize: function (end) {\n            var lastMultiMaterial = this.currentMaterial();\n            if (lastMultiMaterial && lastMultiMaterial.groupEnd === - 1) {\n              lastMultiMaterial.groupEnd = this.geometry.vertices.length / 3;\n              lastMultiMaterial.groupCount = lastMultiMaterial.groupEnd - lastMultiMaterial.groupStart;\n              lastMultiMaterial.inherited = false;\n            }\n            // Ignore objects tail materials if no face declarations followed them before a new o/g started.\n            if (end && this.materials.length > 1) {\n              for (var mi = this.materials.length - 1; mi >= 0; mi--) {\n                if (this.materials[mi].groupCount <= 0) {\n                  this.materials.splice(mi, 1);\n                }\n              }\n            }\n            // Guarantee at least one empty material, this makes the creation later more straight forward.\n            if (end && this.materials.length === 0) {\n              this.materials.push({\n                name: '',\n                smooth: this.smooth\n              });\n            }\n            return lastMultiMaterial;\n          }\n        };\n        // Inherit previous objects material.\n        // Spec tells us that a declared material must be set to all objects until a new material is declared.\n        // If a usemtl declaration is encountered while this new object is being parsed, it will\n        // overwrite the inherited material. Exception being that there was already face declarations\n        // to the inherited material, then it will be preserved for proper MultiMaterial continuation.\n        if (previousMaterial && previousMaterial.name && typeof previousMaterial.clone === 'function') {\n          var declared = previousMaterial.clone(0);\n          declared.inherited = true;\n          this.object.materials.push(declared);\n        }\n        this.objects.push(this.object);\n      },\n      finalize: function () {\n        if (this.object && typeof this.object._finalize === 'function') {\n          this.object._finalize(true);\n        }\n      },\n      parseVertexIndex: function (value, len) {\n        var index = parseInt(value, 10);\n        return (index >= 0 ? index - 1 : index + len / 3) * 3;\n      },\n      parseNormalIndex: function (value, len) {\n        var index = parseInt(value, 10);\n        return (index >= 0 ? index - 1 : index + len / 3) * 3;\n      },\n      parseUVIndex: function (value, len) {\n        var index = parseInt(value, 10);\n        return (index >= 0 ? index - 1 : index + len / 2) * 2;\n      },\n      addVertex: function (a, b, c) {\n        var src = this.vertices;\n        var dst = this.object.geometry.vertices;\n        dst.push(src[a + 0], src[a + 1], src[a + 2]);\n        dst.push(src[b + 0], src[b + 1], src[b + 2]);\n        dst.push(src[c + 0], src[c + 1], src[c + 2]);\n      },\n      addVertexPoint: function (a) {\n        var src = this.vertices;\n        var dst = this.object.geometry.vertices;\n        dst.push(src[a + 0], src[a + 1], src[a + 2]);\n      },\n      addVertexLine: function (a) {\n        var src = this.vertices;\n        var dst = this.object.geometry.vertices;\n        dst.push(src[a + 0], src[a + 1], src[a + 2]);\n      },\n      addNormal: function (a, b, c) {\n        var src = this.normals;\n        var dst = this.object.geometry.normals;\n        dst.push(src[a + 0], src[a + 1], src[a + 2]);\n        dst.push(src[b + 0], src[b + 1], src[b + 2]);\n        dst.push(src[c + 0], src[c + 1], src[c + 2]);\n      },\n      addColor: function (a, b, c) {\n        var src = this.colors;\n        var dst = this.object.geometry.colors;\n        dst.push(src[a + 0], src[a + 1], src[a + 2]);\n        dst.push(src[b + 0], src[b + 1], src[b + 2]);\n        dst.push(src[c + 0], src[c + 1], src[c + 2]);\n      },\n      addUV: function (a, b, c) {\n        var src = this.uvs;\n        var dst = this.object.geometry.uvs;\n        dst.push(src[a + 0], src[a + 1]);\n        dst.push(src[b + 0], src[b + 1]);\n        dst.push(src[c + 0], src[c + 1]);\n      },\n      addUVLine: function (a) {\n        var src = this.uvs;\n        var dst = this.object.geometry.uvs;\n        dst.push(src[a + 0], src[a + 1]);\n      },\n      addFace: function (a, b, c, ua, ub, uc, na, nb, nc) {\n        var vLen = this.vertices.length;\n        var ia = this.parseVertexIndex(a, vLen);\n        var ib = this.parseVertexIndex(b, vLen);\n        var ic = this.parseVertexIndex(c, vLen);\n        this.addVertex(ia, ib, ic);\n        if (ua !== undefined && ua !== '') {\n          var uvLen = this.uvs.length;\n          ia = this.parseUVIndex(ua, uvLen);\n          ib = this.parseUVIndex(ub, uvLen);\n          ic = this.parseUVIndex(uc, uvLen);\n          this.addUV(ia, ib, ic);\n        }\n        if (na !== undefined && na !== '') {\n          // Normals are many times the same. If so, skip function call and parseInt.\n          var nLen = this.normals.length;\n          ia = this.parseNormalIndex(na, nLen);\n          ib = na === nb ? ia : this.parseNormalIndex(nb, nLen);\n          ic = na === nc ? ia : this.parseNormalIndex(nc, nLen);\n          this.addNormal(ia, ib, ic);\n        }\n        if (this.colors.length > 0) {\n          this.addColor(ia, ib, ic);\n        }\n      },\n      addPointGeometry: function (vertices) {\n        this.object.geometry.type = 'Points';\n        var vLen = this.vertices.length;\n        for (var vi = 0, l = vertices.length; vi < l; vi++) {\n          this.addVertexPoint(this.parseVertexIndex(vertices[vi], vLen));\n        }\n      },\n      addLineGeometry: function (vertices, uvs) {\n        this.object.geometry.type = 'Line';\n        var vLen = this.vertices.length;\n        var uvLen = this.uvs.length;\n        for (var vi = 0, l = vertices.length; vi < l; vi++) {\n          this.addVertexLine(this.parseVertexIndex(vertices[vi], vLen));\n        }\n        for (var uvi = 0, l = uvs.length; uvi < l; uvi++) {\n          this.addUVLine(this.parseUVIndex(uvs[uvi], uvLen));\n        }\n      }\n    };\n    state.startObject('', false);\n    return state;\n  }\n  //\n  function OBJLoader(manager) {\n    this.manager = (manager !== undefined) ? manager : THREE.DefaultLoadingManager;\n    this.materials = null;\n  }\n  OBJLoader.prototype = {\n    constructor: OBJLoader,\n    load: function (url, onLoad, onProgress, onError) {\n      var scope = this;\n      var loader = new THREE.FileLoader(scope.manager);\n      loader.setPath(this.path);\n      loader.load(url, function (text) {\n        onLoad(scope.parse(text));\n      }, onProgress, onError);\n    },\n    setPath: function (value) {\n      this.path = value;\n    },\n    setMaterials: function (materials) {\n      this.materials = materials;\n      return this;\n    },\n    parse: function (text) {\n      console.time('OBJLoader');\n      var state = new ParserState();\n      if (text.indexOf('\\r\\n') !== - 1) {\n        // This is faster than String.split with regex that splits on both\n        text = text.replace(/\\r\\n/g, '\\n');\n      }\n      if (text.indexOf('\\\\\\n') !== - 1) {\n        // join lines separated by a line continuation character (\\)\n        text = text.replace(/\\\\\\n/g, '');\n      }\n      var lines = text.split('\\n');\n      var line = '', lineFirstChar = '';\n      var lineLength = 0;\n      var result = [];\n      // Faster to just trim left side of the line. Use if available.\n      var trimLeft = (typeof ''.trimLeft === 'function');\n      for (var i = 0, l = lines.length; i < l; i++) {\n        line = lines[i];\n        line = trimLeft ? line.trimLeft() : line.trim();\n        lineLength = line.length;\n        if (lineLength === 0) continue;\n        lineFirstChar = line.charAt(0);\n        // @todo invoke passed in handler if any\n        if (lineFirstChar === '#') continue;\n        if (lineFirstChar === 'v') {\n          var data = line.split(/\\s+/);\n          switch (data[0]) {\n            case 'v':\n              state.vertices.push(\n                parseFloat(data[1]),\n                parseFloat(data[2]),\n                parseFloat(data[3])\n              );\n              if (data.length === 8) {\n                state.colors.push(\n                  parseFloat(data[4]),\n                  parseFloat(data[5]),\n                  parseFloat(data[6])\n                );\n              }\n              break;\n            case 'vn':\n              state.normals.push(\n                parseFloat(data[1]),\n                parseFloat(data[2]),\n                parseFloat(data[3])\n              );\n              break;\n            case 'vt':\n              state.uvs.push(\n                parseFloat(data[1]),\n                parseFloat(data[2])\n              );\n              break;\n          }\n        } else if (lineFirstChar === 'f') {\n          var lineData = line.substr(1).trim();\n          var vertexData = lineData.split(/\\s+/);\n          var faceVertices = [];\n          // Parse the face vertex data into an easy to work with format\n          for (var j = 0, jl = vertexData.length; j < jl; j++) {\n            var vertex = vertexData[j];\n            if (vertex.length > 0) {\n              var vertexParts = vertex.split('/');\n              faceVertices.push(vertexParts);\n            }\n          }\n          // Draw an edge between the first vertex and all subsequent vertices to form an n-gon\n          var v1 = faceVertices[0];\n          for (var j = 1, jl = faceVertices.length - 1; j < jl; j++) {\n            var v2 = faceVertices[j];\n            var v3 = faceVertices[j + 1];\n            state.addFace(\n              v1[0], v2[0], v3[0],\n              v1[1], v2[1], v3[1],\n              v1[2], v2[2], v3[2]\n            );\n          }\n        } else if (lineFirstChar === 'l') {\n          var lineParts = line.substring(1).trim().split(\" \");\n          var lineVertices = [], lineUVs = [];\n          if (line.indexOf(\"/\") === - 1) {\n            lineVertices = lineParts;\n          } else {\n            for (var li = 0, llen = lineParts.length; li < llen; li++) {\n              var parts = lineParts[li].split(\"/\");\n              if (parts[0] !== \"\") lineVertices.push(parts[0]);\n              if (parts[1] !== \"\") lineUVs.push(parts[1]);\n            }\n          }\n          state.addLineGeometry(lineVertices, lineUVs);\n        } else if (lineFirstChar === 'p') {\n          var lineData = line.substr(1).trim();\n          var pointData = lineData.split(\" \");\n          state.addPointGeometry(pointData);\n        } else if ((result = object_pattern.exec(line)) !== null) {\n          // o object_name\n          // or\n          // g group_name\n          // WORKAROUND: https://bugs.chromium.org/p/v8/issues/detail?id=2869\n          // var name = result[ 0 ].substr( 1 ).trim();\n          var name = (\" \" + result[0].substr(1).trim()).substr(1);\n          state.startObject(name);\n        } else if (material_use_pattern.test(line)) {\n          // material\n          state.object.startMaterial(line.substring(7).trim(), state.materialLibraries);\n        } else if (material_library_pattern.test(line)) {\n          // mtl file\n          state.materialLibraries.push(line.substring(7).trim());\n        } else if (lineFirstChar === 's') {\n          result = line.split(' ');\n          // smooth shading\n          // @todo Handle files that have varying smooth values for a set of faces inside one geometry,\n          // but does not define a usemtl for each face set.\n          // This should be detected and a dummy material created (later MultiMaterial and geometry groups).\n          // This requires some care to not create extra material on each smooth value for \"normal\" obj files.\n          // where explicit usemtl defines geometry groups.\n          // Example asset: examples/models/obj/cerberus/Cerberus.obj\n\t\t\t\t\t/*\n\t\t\t\t\t * http://paulbourke.net/dataformats/obj/\n\t\t\t\t\t * or\n\t\t\t\t\t * http://www.cs.utah.edu/~boulos/cs3505/obj_spec.pdf\n\t\t\t\t\t *\n\t\t\t\t\t * From chapter \"Grouping\" Syntax explanation \"s group_number\":\n\t\t\t\t\t * \"group_number is the smoothing group number. To turn off smoothing groups, use a value of 0 or off.\n\t\t\t\t\t * Polygonal elements use group numbers to put elements in different smoothing groups. For free-form\n\t\t\t\t\t * surfaces, smoothing groups are either turned on or off; there is no difference between values greater\n\t\t\t\t\t * than 0.\"\n\t\t\t\t\t */\n          if (result.length > 1) {\n            var value = result[1].trim().toLowerCase();\n            state.object.smooth = (value !== '0' && value !== 'off');\n          } else {\n            // ZBrush can produce \"s\" lines #11707\n            state.object.smooth = true;\n          }\n          var material = state.object.currentMaterial();\n          if (material) material.smooth = state.object.smooth;\n        } else {\n          // Handle null terminated files without exception\n          if (line === '\\0') continue;\n          throw new Error('THREE.OBJLoader: Unexpected line: \"' + line + '\"');\n        }\n      }\n      state.finalize();\n      var container = new THREE.Group();\n      container.materialLibraries = [].concat(state.materialLibraries);\n      for (var i = 0, l = state.objects.length; i < l; i++) {\n        var object = state.objects[i];\n        var geometry = object.geometry;\n        var materials = object.materials;\n        var isLine = (geometry.type === 'Line');\n        var isPoints = (geometry.type === 'Points');\n        var hasVertexColors = false;\n        // Skip o/g line declarations that did not follow with any faces\n        if (geometry.vertices.length === 0) continue;\n        var buffergeometry = new THREE.BufferGeometry();\n        buffergeometry.addAttribute('position', new THREE.Float32BufferAttribute(geometry.vertices, 3));\n        if (geometry.normals.length > 0) {\n          buffergeometry.addAttribute('normal', new THREE.Float32BufferAttribute(geometry.normals, 3));\n        } else {\n          buffergeometry.computeVertexNormals();\n        }\n        if (geometry.colors.length > 0) {\n          hasVertexColors = true;\n          buffergeometry.addAttribute('color', new THREE.Float32BufferAttribute(geometry.colors, 3));\n        }\n        if (geometry.uvs.length > 0) {\n          buffergeometry.addAttribute('uv', new THREE.Float32BufferAttribute(geometry.uvs, 2));\n        }\n        // Create materials\n        var createdMaterials = [];\n        for (var mi = 0, miLen = materials.length; mi < miLen; mi++) {\n          var sourceMaterial = materials[mi];\n          var material = undefined;\n          if (this.materials !== null) {\n            material = this.materials.create(sourceMaterial.name);\n            // mtl etc. loaders probably can't create line materials correctly, copy properties to a line material.\n            if (isLine && material && !(material instanceof THREE.LineBasicMaterial)) {\n              var materialLine = new THREE.LineBasicMaterial();\n              materialLine.copy(material);\n              materialLine.lights = false; // TOFIX\n              material = materialLine;\n            } else if (isPoints && material && !(material instanceof THREE.PointsMaterial)) {\n              var materialPoints = new THREE.PointsMaterial({ size: 10, sizeAttenuation: false });\n              materialLine.copy(material);\n              material = materialPoints;\n            }\n          }\n          if (!material) {\n            if (isLine) {\n              material = new THREE.LineBasicMaterial();\n            } else if (isPoints) {\n              material = new THREE.PointsMaterial({ size: 1, sizeAttenuation: false });\n            } else {\n              material = new THREE.MeshPhongMaterial();\n            }\n            material.name = sourceMaterial.name;\n          }\n          material.flatShading = sourceMaterial.smooth ? false : true;\n          material.vertexColors = hasVertexColors ? THREE.VertexColors : THREE.NoColors;\n          createdMaterials.push(material);\n        }\n        // Create mesh\n        var mesh;\n        if (createdMaterials.length > 1) {\n          for (var mi = 0, miLen = materials.length; mi < miLen; mi++) {\n            var sourceMaterial = materials[mi];\n            buffergeometry.addGroup(sourceMaterial.groupStart, sourceMaterial.groupCount, mi);\n          }\n          if (isLine) {\n            mesh = new THREE.LineSegments(buffergeometry, createdMaterials);\n          } else if (isPoints) {\n            mesh = new THREE.Points(buffergeometry, createdMaterials);\n          } else {\n            mesh = new THREE.Mesh(buffergeometry, createdMaterials);\n          }\n        } else {\n          if (isLine) {\n            mesh = new THREE.LineSegments(buffergeometry, createdMaterials[0]);\n          } else if (isPoints) {\n            mesh = new THREE.Points(buffergeometry, createdMaterials[0]);\n          } else {\n            mesh = new THREE.Mesh(buffergeometry, createdMaterials[0]);\n          }\n        }\n        mesh.name = object.name;\n        container.add(mesh);\n      }\n      console.timeEnd('OBJLoader');\n      return container;\n    }\n  };\n  return OBJLoader;\n})();\nmodule.exports = OBJLoader;\n"]},"metadata":{},"sourceType":"module"}