{"ast":null,"code":"var _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nimport { Layer, Group } from './export';\nimport { IDBroker, NameGenerator } from '../utils/export';\nimport { Map, fromJS } from 'immutable';\nimport { MODE_IDLE, MODE_DRAWING_ITEM, MODE_DRAGGING_ITEM, MODE_ROTATING_ITEM } from '../constants';\n\nvar Item = function () {\n  function Item() {\n    _classCallCheck(this, Item);\n  }\n\n  _createClass(Item, null, [{\n    key: 'create',\n    value: function create(state, layerID, type, x, y, width, height, rotation) {\n      var itemID = IDBroker.acquireID();\n      var item = state.catalog.factoryElement(type, {\n        id: itemID,\n        name: NameGenerator.generateName('items', state.catalog.getIn(['elements', type, 'info', 'title'])),\n        type: type,\n        height: height,\n        width: width,\n        x: x,\n        y: y,\n        rotation: rotation\n      });\n      state = state.setIn(['scene', 'layers', layerID, 'items', itemID], item);\n      return {\n        updatedState: state,\n        item: item\n      };\n    }\n  }, {\n    key: 'select',\n    value: function select(state, layerID, itemID) {\n      state = Layer.select(state, layerID).updatedState;\n      state = Layer.selectElement(state, layerID, 'items', itemID).updatedState;\n      return {\n        updatedState: state\n      };\n    }\n  }, {\n    key: 'remove',\n    value: function remove(state, layerID, itemID) {\n      state = this.unselect(state, layerID, itemID).updatedState;\n      state = Layer.removeElement(state, layerID, 'items', itemID).updatedState;\n      state.getIn(['scene', 'groups']).forEach(function (group) {\n        return state = Group.removeElement(state, group.id, layerID, 'items', itemID).updatedState;\n      });\n      return {\n        updatedState: state\n      };\n    }\n  }, {\n    key: 'unselect',\n    value: function unselect(state, layerID, itemID) {\n      state = Layer.unselect(state, layerID, 'items', itemID).updatedState;\n      return {\n        updatedState: state\n      };\n    }\n  }, {\n    key: 'selectToolDrawingItem',\n    value: function selectToolDrawingItem(state, sceneComponentType) {\n      state = state.merge({\n        mode: MODE_DRAWING_ITEM,\n        drawingSupport: new Map({\n          type: sceneComponentType\n        })\n      });\n      return {\n        updatedState: state\n      };\n    }\n  }, {\n    key: 'updateDrawingItem',\n    value: function updateDrawingItem(state, layerID, x, y) {\n      if (state.hasIn(['drawingSupport', 'currentID'])) {\n        state = state.updateIn(['scene', 'layers', layerID, 'items', state.getIn(['drawingSupport', 'currentID'])], function (item) {\n          return item.merge({\n            x: x,\n            y: y\n          });\n        });\n      } else {\n        var _create = this.create(state, layerID, state.getIn(['drawingSupport', 'type']), x, y, 200, 100, 0),\n            stateI = _create.updatedState,\n            item = _create.item;\n\n        state = Item.select(stateI, layerID, item.id).updatedState;\n        state = state.setIn(['drawingSupport', 'currentID'], item.id);\n      }\n\n      return {\n        updatedState: state\n      };\n    }\n  }, {\n    key: 'endDrawingItem',\n    value: function endDrawingItem(state, layerID, x, y) {\n      var catalog = state.catalog;\n      state = this.updateDrawingItem(state, layerID, x, y, catalog).updatedState;\n      state = Layer.unselectAll(state, layerID).updatedState;\n      state = state.merge({\n        drawingSupport: Map({\n          type: state.drawingSupport.get('type')\n        })\n      });\n      return {\n        updatedState: state\n      };\n    }\n  }, {\n    key: 'beginDraggingItem',\n    value: function beginDraggingItem(state, layerID, itemID, x, y) {\n      var item = state.getIn(['scene', 'layers', layerID, 'items', itemID]);\n      state = state.merge({\n        mode: MODE_DRAGGING_ITEM,\n        draggingSupport: Map({\n          layerID: layerID,\n          itemID: itemID,\n          startPointX: x,\n          startPointY: y,\n          originalX: item.x,\n          originalY: item.y\n        })\n      });\n      return {\n        updatedState: state\n      };\n    }\n  }, {\n    key: 'updateDraggingItem',\n    value: function updateDraggingItem(state, x, y) {\n      var _state = state,\n          draggingSupport = _state.draggingSupport,\n          scene = _state.scene;\n      var layerID = draggingSupport.get('layerID');\n      var itemID = draggingSupport.get('itemID');\n      var startPointX = draggingSupport.get('startPointX');\n      var startPointY = draggingSupport.get('startPointY');\n      var originalX = draggingSupport.get('originalX');\n      var originalY = draggingSupport.get('originalY');\n      var diffX = startPointX - x;\n      var diffY = startPointY - y;\n      var item = scene.getIn(['layers', layerID, 'items', itemID]);\n      item = item.merge({\n        x: originalX - diffX,\n        y: originalY - diffY\n      });\n      state = state.merge({\n        scene: scene.mergeIn(['layers', layerID, 'items', itemID], item)\n      });\n      return {\n        updatedState: state\n      };\n    }\n  }, {\n    key: 'endDraggingItem',\n    value: function endDraggingItem(state, x, y) {\n      state = this.updateDraggingItem(state, x, y).updatedState;\n      state = state.merge({\n        mode: MODE_IDLE\n      });\n      return {\n        updatedState: state\n      };\n    }\n  }, {\n    key: 'beginRotatingItem',\n    value: function beginRotatingItem(state, layerID, itemID, x, y) {\n      state = state.merge({\n        mode: MODE_ROTATING_ITEM,\n        rotatingSupport: Map({\n          layerID: layerID,\n          itemID: itemID\n        })\n      });\n      return {\n        updatedState: state\n      };\n    }\n  }, {\n    key: 'updateRotatingItem',\n    value: function updateRotatingItem(state, x, y) {\n      var _state2 = state,\n          rotatingSupport = _state2.rotatingSupport,\n          scene = _state2.scene;\n      var layerID = rotatingSupport.get('layerID');\n      var itemID = rotatingSupport.get('itemID');\n      var item = state.getIn(['scene', 'layers', layerID, 'items', itemID]);\n      var deltaX = x - item.x;\n      var deltaY = y - item.y;\n      var rotation = Math.atan2(deltaY, deltaX) * 180 / Math.PI - 90;\n      if (-5 < rotation && rotation < 5) rotation = 0;\n      if (-95 < rotation && rotation < -85) rotation = -90;\n      if (-185 < rotation && rotation < -175) rotation = -180;\n      if (85 < rotation && rotation < 90) rotation = 90;\n      if (-270 < rotation && rotation < -265) rotation = 90;\n      item = item.merge({\n        rotation: rotation\n      });\n      state = state.merge({\n        scene: scene.mergeIn(['layers', layerID, 'items', itemID], item)\n      });\n      return {\n        updatedState: state\n      };\n    }\n  }, {\n    key: 'endRotatingItem',\n    value: function endRotatingItem(state, x, y) {\n      state = this.updateRotatingItem(state, x, y).updatedState;\n      state = state.merge({\n        mode: MODE_IDLE\n      });\n      return {\n        updatedState: state\n      };\n    }\n  }, {\n    key: 'setProperties',\n    value: function setProperties(state, layerID, itemID, properties) {\n      state = state.mergeIn(['scene', 'layers', layerID, 'items', itemID, 'properties'], properties);\n      return {\n        updatedState: state\n      };\n    }\n  }, {\n    key: 'setJsProperties',\n    value: function setJsProperties(state, layerID, itemID, properties) {\n      return this.setProperties(state, layerID, itemID, fromJS(properties));\n    }\n  }, {\n    key: 'updateProperties',\n    value: function updateProperties(state, layerID, itemID, properties) {\n      properties.forEach(function (v, k) {\n        if (state.hasIn(['scene', 'layers', layerID, 'items', itemID, 'properties', k])) state = state.mergeIn(['scene', 'layers', layerID, 'items', itemID, 'properties', k], v);\n      });\n      return {\n        updatedState: state\n      };\n    }\n  }, {\n    key: 'updateJsProperties',\n    value: function updateJsProperties(state, layerID, itemID, properties) {\n      return this.updateProperties(state, layerID, itemID, fromJS(properties));\n    }\n  }, {\n    key: 'setAttributes',\n    value: function setAttributes(state, layerID, itemID, itemAttributes) {\n      state = state.mergeIn(['scene', 'layers', layerID, 'items', itemID], itemAttributes);\n      return {\n        updatedState: state\n      };\n    }\n  }, {\n    key: 'setJsAttributes',\n    value: function setJsAttributes(state, layerID, itemID, itemAttributes) {\n      itemAttributes = fromJS(itemAttributes);\n      return this.setAttributes(state, layerID, itemID, itemAttributes);\n    }\n  }]);\n\n  return Item;\n}();\n\nexport { Item as default };","map":{"version":3,"sources":["/home/srihari/Desktop/Sparkplug_PandemicSparks/grid/node_modules/react-planner/es/class/item.js"],"names":["_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","prototype","_classCallCheck","instance","TypeError","Layer","Group","IDBroker","NameGenerator","Map","fromJS","MODE_IDLE","MODE_DRAWING_ITEM","MODE_DRAGGING_ITEM","MODE_ROTATING_ITEM","Item","value","create","state","layerID","type","x","y","width","height","rotation","itemID","acquireID","item","catalog","factoryElement","id","name","generateName","getIn","setIn","updatedState","select","selectElement","remove","unselect","removeElement","forEach","group","selectToolDrawingItem","sceneComponentType","merge","mode","drawingSupport","updateDrawingItem","hasIn","updateIn","_create","stateI","endDrawingItem","unselectAll","get","beginDraggingItem","draggingSupport","startPointX","startPointY","originalX","originalY","updateDraggingItem","_state","scene","diffX","diffY","mergeIn","endDraggingItem","beginRotatingItem","rotatingSupport","updateRotatingItem","_state2","deltaX","deltaY","Math","atan2","PI","endRotatingItem","setProperties","properties","setJsProperties","updateProperties","v","k","updateJsProperties","setAttributes","itemAttributes","setJsAttributes","default"],"mappings":"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","sourcesContent":["var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport { Layer, Group } from './export';\nimport { IDBroker, NameGenerator } from '../utils/export';\nimport { Map, fromJS } from 'immutable';\n\nimport { MODE_IDLE, MODE_DRAWING_ITEM, MODE_DRAGGING_ITEM, MODE_ROTATING_ITEM } from '../constants';\n\nvar Item = function () {\n  function Item() {\n    _classCallCheck(this, Item);\n  }\n\n  _createClass(Item, null, [{\n    key: 'create',\n    value: function create(state, layerID, type, x, y, width, height, rotation) {\n      var itemID = IDBroker.acquireID();\n\n      var item = state.catalog.factoryElement(type, {\n        id: itemID,\n        name: NameGenerator.generateName('items', state.catalog.getIn(['elements', type, 'info', 'title'])),\n        type: type,\n        height: height,\n        width: width,\n        x: x,\n        y: y,\n        rotation: rotation\n      });\n\n      state = state.setIn(['scene', 'layers', layerID, 'items', itemID], item);\n\n      return { updatedState: state, item: item };\n    }\n  }, {\n    key: 'select',\n    value: function select(state, layerID, itemID) {\n      state = Layer.select(state, layerID).updatedState;\n      state = Layer.selectElement(state, layerID, 'items', itemID).updatedState;\n\n      return { updatedState: state };\n    }\n  }, {\n    key: 'remove',\n    value: function remove(state, layerID, itemID) {\n      state = this.unselect(state, layerID, itemID).updatedState;\n      state = Layer.removeElement(state, layerID, 'items', itemID).updatedState;\n\n      state.getIn(['scene', 'groups']).forEach(function (group) {\n        return state = Group.removeElement(state, group.id, layerID, 'items', itemID).updatedState;\n      });\n\n      return { updatedState: state };\n    }\n  }, {\n    key: 'unselect',\n    value: function unselect(state, layerID, itemID) {\n      state = Layer.unselect(state, layerID, 'items', itemID).updatedState;\n\n      return { updatedState: state };\n    }\n  }, {\n    key: 'selectToolDrawingItem',\n    value: function selectToolDrawingItem(state, sceneComponentType) {\n      state = state.merge({\n        mode: MODE_DRAWING_ITEM,\n        drawingSupport: new Map({\n          type: sceneComponentType\n        })\n      });\n\n      return { updatedState: state };\n    }\n  }, {\n    key: 'updateDrawingItem',\n    value: function updateDrawingItem(state, layerID, x, y) {\n      if (state.hasIn(['drawingSupport', 'currentID'])) {\n        state = state.updateIn(['scene', 'layers', layerID, 'items', state.getIn(['drawingSupport', 'currentID'])], function (item) {\n          return item.merge({ x: x, y: y });\n        });\n      } else {\n        var _create = this.create(state, layerID, state.getIn(['drawingSupport', 'type']), x, y, 200, 100, 0),\n            stateI = _create.updatedState,\n            item = _create.item;\n\n        state = Item.select(stateI, layerID, item.id).updatedState;\n        state = state.setIn(['drawingSupport', 'currentID'], item.id);\n      }\n\n      return { updatedState: state };\n    }\n  }, {\n    key: 'endDrawingItem',\n    value: function endDrawingItem(state, layerID, x, y) {\n      var catalog = state.catalog;\n      state = this.updateDrawingItem(state, layerID, x, y, catalog).updatedState;\n      state = Layer.unselectAll(state, layerID).updatedState;\n      state = state.merge({\n        drawingSupport: Map({\n          type: state.drawingSupport.get('type')\n        })\n      });\n\n      return { updatedState: state };\n    }\n  }, {\n    key: 'beginDraggingItem',\n    value: function beginDraggingItem(state, layerID, itemID, x, y) {\n\n      var item = state.getIn(['scene', 'layers', layerID, 'items', itemID]);\n\n      state = state.merge({\n        mode: MODE_DRAGGING_ITEM,\n        draggingSupport: Map({\n          layerID: layerID,\n          itemID: itemID,\n          startPointX: x,\n          startPointY: y,\n          originalX: item.x,\n          originalY: item.y\n        })\n      });\n\n      return { updatedState: state };\n    }\n  }, {\n    key: 'updateDraggingItem',\n    value: function updateDraggingItem(state, x, y) {\n      var _state = state,\n          draggingSupport = _state.draggingSupport,\n          scene = _state.scene;\n\n\n      var layerID = draggingSupport.get('layerID');\n      var itemID = draggingSupport.get('itemID');\n      var startPointX = draggingSupport.get('startPointX');\n      var startPointY = draggingSupport.get('startPointY');\n      var originalX = draggingSupport.get('originalX');\n      var originalY = draggingSupport.get('originalY');\n\n      var diffX = startPointX - x;\n      var diffY = startPointY - y;\n\n      var item = scene.getIn(['layers', layerID, 'items', itemID]);\n      item = item.merge({\n        x: originalX - diffX,\n        y: originalY - diffY\n      });\n\n      state = state.merge({\n        scene: scene.mergeIn(['layers', layerID, 'items', itemID], item)\n      });\n\n      return { updatedState: state };\n    }\n  }, {\n    key: 'endDraggingItem',\n    value: function endDraggingItem(state, x, y) {\n      state = this.updateDraggingItem(state, x, y).updatedState;\n      state = state.merge({ mode: MODE_IDLE });\n\n      return { updatedState: state };\n    }\n  }, {\n    key: 'beginRotatingItem',\n    value: function beginRotatingItem(state, layerID, itemID, x, y) {\n      state = state.merge({\n        mode: MODE_ROTATING_ITEM,\n        rotatingSupport: Map({\n          layerID: layerID,\n          itemID: itemID\n        })\n      });\n\n      return { updatedState: state };\n    }\n  }, {\n    key: 'updateRotatingItem',\n    value: function updateRotatingItem(state, x, y) {\n      var _state2 = state,\n          rotatingSupport = _state2.rotatingSupport,\n          scene = _state2.scene;\n\n\n      var layerID = rotatingSupport.get('layerID');\n      var itemID = rotatingSupport.get('itemID');\n      var item = state.getIn(['scene', 'layers', layerID, 'items', itemID]);\n\n      var deltaX = x - item.x;\n      var deltaY = y - item.y;\n      var rotation = Math.atan2(deltaY, deltaX) * 180 / Math.PI - 90;\n\n      if (-5 < rotation && rotation < 5) rotation = 0;\n      if (-95 < rotation && rotation < -85) rotation = -90;\n      if (-185 < rotation && rotation < -175) rotation = -180;\n      if (85 < rotation && rotation < 90) rotation = 90;\n      if (-270 < rotation && rotation < -265) rotation = 90;\n\n      item = item.merge({\n        rotation: rotation\n      });\n\n      state = state.merge({\n        scene: scene.mergeIn(['layers', layerID, 'items', itemID], item)\n      });\n\n      return { updatedState: state };\n    }\n  }, {\n    key: 'endRotatingItem',\n    value: function endRotatingItem(state, x, y) {\n      state = this.updateRotatingItem(state, x, y).updatedState;\n      state = state.merge({ mode: MODE_IDLE });\n\n      return { updatedState: state };\n    }\n  }, {\n    key: 'setProperties',\n    value: function setProperties(state, layerID, itemID, properties) {\n      state = state.mergeIn(['scene', 'layers', layerID, 'items', itemID, 'properties'], properties);\n\n      return { updatedState: state };\n    }\n  }, {\n    key: 'setJsProperties',\n    value: function setJsProperties(state, layerID, itemID, properties) {\n      return this.setProperties(state, layerID, itemID, fromJS(properties));\n    }\n  }, {\n    key: 'updateProperties',\n    value: function updateProperties(state, layerID, itemID, properties) {\n      properties.forEach(function (v, k) {\n        if (state.hasIn(['scene', 'layers', layerID, 'items', itemID, 'properties', k])) state = state.mergeIn(['scene', 'layers', layerID, 'items', itemID, 'properties', k], v);\n      });\n\n      return { updatedState: state };\n    }\n  }, {\n    key: 'updateJsProperties',\n    value: function updateJsProperties(state, layerID, itemID, properties) {\n      return this.updateProperties(state, layerID, itemID, fromJS(properties));\n    }\n  }, {\n    key: 'setAttributes',\n    value: function setAttributes(state, layerID, itemID, itemAttributes) {\n      state = state.mergeIn(['scene', 'layers', layerID, 'items', itemID], itemAttributes);\n      return { updatedState: state };\n    }\n  }, {\n    key: 'setJsAttributes',\n    value: function setJsAttributes(state, layerID, itemID, itemAttributes) {\n      itemAttributes = fromJS(itemAttributes);\n      return this.setAttributes(state, layerID, itemID, itemAttributes);\n    }\n  }]);\n\n  return Item;\n}();\n\nexport { Item as default };"]},"metadata":{},"sourceType":"module"}