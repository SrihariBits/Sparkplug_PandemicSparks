{"ast":null,"code":"import { Item } from '../class/export';\nimport { history } from '../utils/export';\nimport { SELECT_TOOL_DRAWING_ITEM, UPDATE_DRAWING_ITEM, END_DRAWING_ITEM, BEGIN_DRAGGING_ITEM, UPDATE_DRAGGING_ITEM, END_DRAGGING_ITEM, BEGIN_ROTATING_ITEM, UPDATE_ROTATING_ITEM, END_ROTATING_ITEM, SELECT_ITEM } from '../constants';\nexport default function (state, action) {\n  switch (action.type) {\n    case SELECT_ITEM:\n      return Item.select(state, action.layerID, action.itemID).updatedState;\n\n    case SELECT_TOOL_DRAWING_ITEM:\n      state = state.merge({\n        sceneHistory: history.historyPush(state.sceneHistory, state.scene)\n      });\n      return Item.selectToolDrawingItem(state, action.sceneComponentType).updatedState;\n\n    case UPDATE_DRAWING_ITEM:\n      return Item.updateDrawingItem(state, action.layerID, action.x, action.y).updatedState;\n\n    case END_DRAWING_ITEM:\n      state = state.merge({\n        sceneHistory: history.historyPush(state.sceneHistory, state.scene)\n      });\n      return Item.endDrawingItem(state, action.layerID, action.x, action.y).updatedState;\n\n    case BEGIN_DRAGGING_ITEM:\n      state = state.merge({\n        sceneHistory: history.historyPush(state.sceneHistory, state.scene)\n      });\n      return Item.beginDraggingItem(state, action.layerID, action.itemID, action.x, action.y).updatedState;\n\n    case UPDATE_DRAGGING_ITEM:\n      return Item.updateDraggingItem(state, action.x, action.y).updatedState;\n\n    case END_DRAGGING_ITEM:\n      state = state.merge({\n        sceneHistory: history.historyPush(state.sceneHistory, state.scene)\n      });\n      return Item.endDraggingItem(state, action.x, action.y).updatedState;\n\n    case BEGIN_ROTATING_ITEM:\n      state = state.merge({\n        sceneHistory: history.historyPush(state.sceneHistory, state.scene)\n      });\n      return Item.beginRotatingItem(state, action.layerID, action.itemID, action.x, action.y).updatedState;\n\n    case UPDATE_ROTATING_ITEM:\n      return Item.updateRotatingItem(state, action.x, action.y).updatedState;\n\n    case END_ROTATING_ITEM:\n      state = state.merge({\n        sceneHistory: history.historyPush(state.sceneHistory, state.scene)\n      });\n      return Item.endRotatingItem(state, action.x, action.y).updatedState;\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/srihari/Desktop/Sparkplug_PandemicSparks/grid/node_modules/react-planner/es/reducers/items-reducer.js"],"names":["Item","history","SELECT_TOOL_DRAWING_ITEM","UPDATE_DRAWING_ITEM","END_DRAWING_ITEM","BEGIN_DRAGGING_ITEM","UPDATE_DRAGGING_ITEM","END_DRAGGING_ITEM","BEGIN_ROTATING_ITEM","UPDATE_ROTATING_ITEM","END_ROTATING_ITEM","SELECT_ITEM","state","action","type","select","layerID","itemID","updatedState","merge","sceneHistory","historyPush","scene","selectToolDrawingItem","sceneComponentType","updateDrawingItem","x","y","endDrawingItem","beginDraggingItem","updateDraggingItem","endDraggingItem","beginRotatingItem","updateRotatingItem","endRotatingItem"],"mappings":"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","sourcesContent":["import { Item } from '../class/export';\nimport { history } from '../utils/export';\nimport { SELECT_TOOL_DRAWING_ITEM, UPDATE_DRAWING_ITEM, END_DRAWING_ITEM, BEGIN_DRAGGING_ITEM, UPDATE_DRAGGING_ITEM, END_DRAGGING_ITEM, BEGIN_ROTATING_ITEM, UPDATE_ROTATING_ITEM, END_ROTATING_ITEM, SELECT_ITEM } from '../constants';\n\nexport default function (state, action) {\n  switch (action.type) {\n    case SELECT_ITEM:\n      return Item.select(state, action.layerID, action.itemID).updatedState;\n\n    case SELECT_TOOL_DRAWING_ITEM:\n      state = state.merge({ sceneHistory: history.historyPush(state.sceneHistory, state.scene) });\n      return Item.selectToolDrawingItem(state, action.sceneComponentType).updatedState;\n\n    case UPDATE_DRAWING_ITEM:\n      return Item.updateDrawingItem(state, action.layerID, action.x, action.y).updatedState;\n\n    case END_DRAWING_ITEM:\n      state = state.merge({ sceneHistory: history.historyPush(state.sceneHistory, state.scene) });\n      return Item.endDrawingItem(state, action.layerID, action.x, action.y).updatedState;\n\n    case BEGIN_DRAGGING_ITEM:\n      state = state.merge({ sceneHistory: history.historyPush(state.sceneHistory, state.scene) });\n      return Item.beginDraggingItem(state, action.layerID, action.itemID, action.x, action.y).updatedState;\n\n    case UPDATE_DRAGGING_ITEM:\n      return Item.updateDraggingItem(state, action.x, action.y).updatedState;\n\n    case END_DRAGGING_ITEM:\n      state = state.merge({ sceneHistory: history.historyPush(state.sceneHistory, state.scene) });\n      return Item.endDraggingItem(state, action.x, action.y).updatedState;\n\n    case BEGIN_ROTATING_ITEM:\n      state = state.merge({ sceneHistory: history.historyPush(state.sceneHistory, state.scene) });\n      return Item.beginRotatingItem(state, action.layerID, action.itemID, action.x, action.y).updatedState;\n\n    case UPDATE_ROTATING_ITEM:\n      return Item.updateRotatingItem(state, action.x, action.y).updatedState;\n\n    case END_ROTATING_ITEM:\n      state = state.merge({ sceneHistory: history.historyPush(state.sceneHistory, state.scene) });\n      return Item.endRotatingItem(state, action.x, action.y).updatedState;\n\n    default:\n      return state;\n  }\n}"]},"metadata":{},"sourceType":"module"}