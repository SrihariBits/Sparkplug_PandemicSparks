{"ast":null,"code":"import React from 'react';\nimport PropTypes from 'prop-types';\nvar STYLE = {\n  stroke: \"#0096fd\",\n  strokeWidth: \"1px\"\n};\nvar STYLE_TEXT = {\n  textAnchor: \"middle\",\n  fontSize: \"12px\",\n  fontFamily: \"'Courier New', Courier, monospace\",\n  pointerEvents: \"none\",\n  fontWeight: \"bold\",\n  //http://stackoverflow.com/questions/826782/how-to-disable-text-selection-highlighting-using-css\n  WebkitTouchCallout: \"none\",\n\n  /* iOS Safari */\n  WebkitUserSelect: \"none\",\n\n  /* Chrome/Safari/Opera */\n  MozUserSelect: \"none\",\n\n  /* Firefox */\n  MsUserSelect: \"none\",\n\n  /* Internet Explorer/Edge */\n  userSelect: \"none\"\n};\nexport default function Ruler(_ref) {\n  var length = _ref.length,\n      unit = _ref.unit,\n      transform = _ref.transform;\n  var distanceText = length.toFixed(2) + ' ' + unit;\n  return React.createElement('g', {\n    transform: transform\n  }, React.createElement('text', {\n    x: length / 2,\n    y: '-3',\n    transform: 'scale(1, -1)',\n    style: STYLE_TEXT\n  }, distanceText), React.createElement('line', {\n    x1: '0',\n    y1: '-5',\n    x2: '0',\n    y2: '5',\n    style: STYLE\n  }), React.createElement('line', {\n    x1: length,\n    y1: '-5',\n    x2: length,\n    y2: '5',\n    style: STYLE\n  }), React.createElement('line', {\n    x1: '0',\n    y1: '0',\n    x2: length,\n    y2: '0',\n    style: STYLE\n  }));\n}\nRuler.propTypes = {\n  length: PropTypes.number.isRequired,\n  unit: PropTypes.string.isRequired,\n  transform: PropTypes.string.isRequired\n};","map":{"version":3,"sources":["/home/srihari/Desktop/Sparkplug_PandemicSparks/grid/node_modules/react-planner/es/components/viewer2d/ruler.js"],"names":["React","PropTypes","STYLE","stroke","strokeWidth","STYLE_TEXT","textAnchor","fontSize","fontFamily","pointerEvents","fontWeight","WebkitTouchCallout","WebkitUserSelect","MozUserSelect","MsUserSelect","userSelect","Ruler","_ref","length","unit","transform","distanceText","toFixed","createElement","x","y","style","x1","y1","x2","y2","propTypes","number","isRequired","string"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,IAAIC,KAAK,GAAG;AACVC,EAAAA,MAAM,EAAE,SADE;AAEVC,EAAAA,WAAW,EAAE;AAFH,CAAZ;AAKA,IAAIC,UAAU,GAAG;AACfC,EAAAA,UAAU,EAAE,QADG;AAEfC,EAAAA,QAAQ,EAAE,MAFK;AAGfC,EAAAA,UAAU,EAAE,mCAHG;AAIfC,EAAAA,aAAa,EAAE,MAJA;AAKfC,EAAAA,UAAU,EAAE,MALG;AAOf;AACAC,EAAAA,kBAAkB,EAAE,MARL;;AAQa;AAC5BC,EAAAA,gBAAgB,EAAE,MATH;;AASW;AAC1BC,EAAAA,aAAa,EAAE,MAVA;;AAUQ;AACvBC,EAAAA,YAAY,EAAE,MAXC;;AAWO;AACtBC,EAAAA,UAAU,EAAE;AAZG,CAAjB;AAeA,eAAe,SAASC,KAAT,CAAeC,IAAf,EAAqB;AAClC,MAAIC,MAAM,GAAGD,IAAI,CAACC,MAAlB;AAAA,MACIC,IAAI,GAAGF,IAAI,CAACE,IADhB;AAAA,MAEIC,SAAS,GAAGH,IAAI,CAACG,SAFrB;AAKA,MAAIC,YAAY,GAAGH,MAAM,CAACI,OAAP,CAAe,CAAf,IAAoB,GAApB,GAA0BH,IAA7C;AAEA,SAAOnB,KAAK,CAACuB,aAAN,CACL,GADK,EAEL;AAAEH,IAAAA,SAAS,EAAEA;AAAb,GAFK,EAGLpB,KAAK,CAACuB,aAAN,CACE,MADF,EAEE;AAAEC,IAAAA,CAAC,EAAEN,MAAM,GAAG,CAAd;AAAiBO,IAAAA,CAAC,EAAE,IAApB;AAA0BL,IAAAA,SAAS,EAAE,cAArC;AAAqDM,IAAAA,KAAK,EAAErB;AAA5D,GAFF,EAGEgB,YAHF,CAHK,EAQLrB,KAAK,CAACuB,aAAN,CAAoB,MAApB,EAA4B;AAAEI,IAAAA,EAAE,EAAE,GAAN;AAAWC,IAAAA,EAAE,EAAE,IAAf;AAAqBC,IAAAA,EAAE,EAAE,GAAzB;AAA8BC,IAAAA,EAAE,EAAE,GAAlC;AAAuCJ,IAAAA,KAAK,EAAExB;AAA9C,GAA5B,CARK,EASLF,KAAK,CAACuB,aAAN,CAAoB,MAApB,EAA4B;AAAEI,IAAAA,EAAE,EAAET,MAAN;AAAcU,IAAAA,EAAE,EAAE,IAAlB;AAAwBC,IAAAA,EAAE,EAAEX,MAA5B;AAAoCY,IAAAA,EAAE,EAAE,GAAxC;AAA6CJ,IAAAA,KAAK,EAAExB;AAApD,GAA5B,CATK,EAULF,KAAK,CAACuB,aAAN,CAAoB,MAApB,EAA4B;AAAEI,IAAAA,EAAE,EAAE,GAAN;AAAWC,IAAAA,EAAE,EAAE,GAAf;AAAoBC,IAAAA,EAAE,EAAEX,MAAxB;AAAgCY,IAAAA,EAAE,EAAE,GAApC;AAAyCJ,IAAAA,KAAK,EAAExB;AAAhD,GAA5B,CAVK,CAAP;AAYD;AAEDc,KAAK,CAACe,SAAN,GAAkB;AAChBb,EAAAA,MAAM,EAAEjB,SAAS,CAAC+B,MAAV,CAAiBC,UADT;AAEhBd,EAAAA,IAAI,EAAElB,SAAS,CAACiC,MAAV,CAAiBD,UAFP;AAGhBb,EAAAA,SAAS,EAAEnB,SAAS,CAACiC,MAAV,CAAiBD;AAHZ,CAAlB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nvar STYLE = {\n  stroke: \"#0096fd\",\n  strokeWidth: \"1px\"\n};\n\nvar STYLE_TEXT = {\n  textAnchor: \"middle\",\n  fontSize: \"12px\",\n  fontFamily: \"'Courier New', Courier, monospace\",\n  pointerEvents: \"none\",\n  fontWeight: \"bold\",\n\n  //http://stackoverflow.com/questions/826782/how-to-disable-text-selection-highlighting-using-css\n  WebkitTouchCallout: \"none\", /* iOS Safari */\n  WebkitUserSelect: \"none\", /* Chrome/Safari/Opera */\n  MozUserSelect: \"none\", /* Firefox */\n  MsUserSelect: \"none\", /* Internet Explorer/Edge */\n  userSelect: \"none\"\n};\n\nexport default function Ruler(_ref) {\n  var length = _ref.length,\n      unit = _ref.unit,\n      transform = _ref.transform;\n\n\n  var distanceText = length.toFixed(2) + ' ' + unit;\n\n  return React.createElement(\n    'g',\n    { transform: transform },\n    React.createElement(\n      'text',\n      { x: length / 2, y: '-3', transform: 'scale(1, -1)', style: STYLE_TEXT },\n      distanceText\n    ),\n    React.createElement('line', { x1: '0', y1: '-5', x2: '0', y2: '5', style: STYLE }),\n    React.createElement('line', { x1: length, y1: '-5', x2: length, y2: '5', style: STYLE }),\n    React.createElement('line', { x1: '0', y1: '0', x2: length, y2: '0', style: STYLE })\n  );\n}\n\nRuler.propTypes = {\n  length: PropTypes.number.isRequired,\n  unit: PropTypes.string.isRequired,\n  transform: PropTypes.string.isRequired\n};"]},"metadata":{},"sourceType":"module"}