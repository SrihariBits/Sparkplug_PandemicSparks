{"ast":null,"code":"import React from 'react';\nimport PropTypes from 'prop-types';\nimport If from '../../utils/react-if';\nimport * as sharedStyles from '../../shared-style';\nvar cx = 0;\nvar cy = 0;\nvar radius = 5;\nvar STYLE_CIRCLE = {\n  fill: sharedStyles.MATERIAL_COLORS[500].orange,\n  stroke: sharedStyles.MATERIAL_COLORS[500].orange,\n  cursor: 'default'\n};\nexport default function Group(_ref, _ref2) {\n  var layer = _ref.layer,\n      group = _ref.group,\n      scene = _ref.scene,\n      catalog = _ref.catalog;\n  var translator = _ref2.translator;\n  return React.createElement('g', {\n    'data-element-root': true,\n    'data-prototype': group.prototype,\n    'data-id': group.id,\n    'data-selected': group.selected,\n    'data-layer': layer.id,\n    style: group.selected ? {\n      cursor: 'move'\n    } : {},\n    transform: 'translate(' + group.x + ',' + group.y + ') rotate(' + group.rotation + ')'\n  }, React.createElement(If, {\n    condition: group.selected\n  }, React.createElement('g', {\n    'data-element-root': true,\n    'data-prototype': group.prototype,\n    'data-id': group.id,\n    'data-selected': group.selected,\n    'data-layer': layer.id,\n    'data-part': 'rotation-anchor'\n  }, React.createElement('circle', {\n    cx: cx,\n    cy: cy,\n    r: radius,\n    style: STYLE_CIRCLE\n  }, React.createElement('title', null, translator.t('Group\\'s Barycenter'))))));\n}\nGroup.propTypes = {\n  group: PropTypes.object.isRequired,\n  layer: PropTypes.object.isRequired,\n  scene: PropTypes.object.isRequired,\n  catalog: PropTypes.object.isRequired\n};\nGroup.contextTypes = {\n  translator: PropTypes.object.isRequired\n};","map":{"version":3,"sources":["/home/srihari/Desktop/Sparkplug_PandemicSparks/grid/node_modules/react-planner/es/components/viewer2d/group.js"],"names":["React","PropTypes","If","sharedStyles","cx","cy","radius","STYLE_CIRCLE","fill","MATERIAL_COLORS","orange","stroke","cursor","Group","_ref","_ref2","layer","group","scene","catalog","translator","createElement","prototype","id","selected","style","transform","x","y","rotation","condition","r","t","propTypes","object","isRequired","contextTypes"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,EAAP,MAAe,sBAAf;AACA,OAAO,KAAKC,YAAZ,MAA8B,oBAA9B;AAEA,IAAIC,EAAE,GAAG,CAAT;AACA,IAAIC,EAAE,GAAG,CAAT;AACA,IAAIC,MAAM,GAAG,CAAb;AAEA,IAAIC,YAAY,GAAG;AACjBC,EAAAA,IAAI,EAAEL,YAAY,CAACM,eAAb,CAA6B,GAA7B,EAAkCC,MADvB;AAEjBC,EAAAA,MAAM,EAAER,YAAY,CAACM,eAAb,CAA6B,GAA7B,EAAkCC,MAFzB;AAGjBE,EAAAA,MAAM,EAAE;AAHS,CAAnB;AAMA,eAAe,SAASC,KAAT,CAAeC,IAAf,EAAqBC,KAArB,EAA4B;AACzC,MAAIC,KAAK,GAAGF,IAAI,CAACE,KAAjB;AAAA,MACIC,KAAK,GAAGH,IAAI,CAACG,KADjB;AAAA,MAEIC,KAAK,GAAGJ,IAAI,CAACI,KAFjB;AAAA,MAGIC,OAAO,GAAGL,IAAI,CAACK,OAHnB;AAIA,MAAIC,UAAU,GAAGL,KAAK,CAACK,UAAvB;AAEA,SAAOpB,KAAK,CAACqB,aAAN,CACL,GADK,EAEL;AACE,yBAAqB,IADvB;AAEE,sBAAkBJ,KAAK,CAACK,SAF1B;AAGE,eAAWL,KAAK,CAACM,EAHnB;AAIE,qBAAiBN,KAAK,CAACO,QAJzB;AAKE,kBAAcR,KAAK,CAACO,EALtB;AAMEE,IAAAA,KAAK,EAAER,KAAK,CAACO,QAAN,GAAiB;AAAEZ,MAAAA,MAAM,EAAE;AAAV,KAAjB,GAAsC,EAN/C;AAOEc,IAAAA,SAAS,EAAE,eAAeT,KAAK,CAACU,CAArB,GAAyB,GAAzB,GAA+BV,KAAK,CAACW,CAArC,GAAyC,WAAzC,GAAuDX,KAAK,CAACY,QAA7D,GAAwE;AAPrF,GAFK,EAWL7B,KAAK,CAACqB,aAAN,CACEnB,EADF,EAEE;AAAE4B,IAAAA,SAAS,EAAEb,KAAK,CAACO;AAAnB,GAFF,EAGExB,KAAK,CAACqB,aAAN,CACE,GADF,EAEE;AACE,yBAAqB,IADvB;AAEE,sBAAkBJ,KAAK,CAACK,SAF1B;AAGE,eAAWL,KAAK,CAACM,EAHnB;AAIE,qBAAiBN,KAAK,CAACO,QAJzB;AAKE,kBAAcR,KAAK,CAACO,EALtB;AAME,iBAAa;AANf,GAFF,EAUEvB,KAAK,CAACqB,aAAN,CACE,QADF,EAEE;AAAEjB,IAAAA,EAAE,EAAEA,EAAN;AAAUC,IAAAA,EAAE,EAAEA,EAAd;AAAkB0B,IAAAA,CAAC,EAAEzB,MAArB;AAA6BmB,IAAAA,KAAK,EAAElB;AAApC,GAFF,EAGEP,KAAK,CAACqB,aAAN,CACE,OADF,EAEE,IAFF,EAGED,UAAU,CAACY,CAAX,CAAa,qBAAb,CAHF,CAHF,CAVF,CAHF,CAXK,CAAP;AAoCD;AAEDnB,KAAK,CAACoB,SAAN,GAAkB;AAChBhB,EAAAA,KAAK,EAAEhB,SAAS,CAACiC,MAAV,CAAiBC,UADR;AAEhBnB,EAAAA,KAAK,EAAEf,SAAS,CAACiC,MAAV,CAAiBC,UAFR;AAGhBjB,EAAAA,KAAK,EAAEjB,SAAS,CAACiC,MAAV,CAAiBC,UAHR;AAIhBhB,EAAAA,OAAO,EAAElB,SAAS,CAACiC,MAAV,CAAiBC;AAJV,CAAlB;AAOAtB,KAAK,CAACuB,YAAN,GAAqB;AACnBhB,EAAAA,UAAU,EAAEnB,SAAS,CAACiC,MAAV,CAAiBC;AADV,CAArB","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport If from '../../utils/react-if';\nimport * as sharedStyles from '../../shared-style';\n\nvar cx = 0;\nvar cy = 0;\nvar radius = 5;\n\nvar STYLE_CIRCLE = {\n  fill: sharedStyles.MATERIAL_COLORS[500].orange,\n  stroke: sharedStyles.MATERIAL_COLORS[500].orange,\n  cursor: 'default'\n};\n\nexport default function Group(_ref, _ref2) {\n  var layer = _ref.layer,\n      group = _ref.group,\n      scene = _ref.scene,\n      catalog = _ref.catalog;\n  var translator = _ref2.translator;\n\n  return React.createElement(\n    'g',\n    {\n      'data-element-root': true,\n      'data-prototype': group.prototype,\n      'data-id': group.id,\n      'data-selected': group.selected,\n      'data-layer': layer.id,\n      style: group.selected ? { cursor: 'move' } : {},\n      transform: 'translate(' + group.x + ',' + group.y + ') rotate(' + group.rotation + ')'\n    },\n    React.createElement(\n      If,\n      { condition: group.selected },\n      React.createElement(\n        'g',\n        {\n          'data-element-root': true,\n          'data-prototype': group.prototype,\n          'data-id': group.id,\n          'data-selected': group.selected,\n          'data-layer': layer.id,\n          'data-part': 'rotation-anchor'\n        },\n        React.createElement(\n          'circle',\n          { cx: cx, cy: cy, r: radius, style: STYLE_CIRCLE },\n          React.createElement(\n            'title',\n            null,\n            translator.t('Group\\'s Barycenter')\n          )\n        )\n      )\n    )\n  );\n}\n\nGroup.propTypes = {\n  group: PropTypes.object.isRequired,\n  layer: PropTypes.object.isRequired,\n  scene: PropTypes.object.isRequired,\n  catalog: PropTypes.object.isRequired\n};\n\nGroup.contextTypes = {\n  translator: PropTypes.object.isRequired\n};"]},"metadata":{},"sourceType":"module"}