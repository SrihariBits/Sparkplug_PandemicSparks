{"ast":null,"code":"var _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nfunction _objectWithoutProperties(obj, keys) {\n  var target = {};\n\n  for (var i in obj) {\n    if (keys.indexOf(i) >= 0) continue;\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) continue;\n    target[i] = obj[i];\n  }\n\n  return target;\n}\n\nimport React from 'react';\nimport FormTextInput from './form-text-input';\nvar STYLE = {\n  padding: 0,\n  border: 0\n};\nvar EREG_NUMBER = /^.*$/;\nexport default function FormColorInput(_ref) {\n  var onChange = _ref.onChange,\n      rest = _objectWithoutProperties(_ref, ['onChange']);\n\n  var onChangeCustom = function onChangeCustom(event) {\n    var value = event.target.value;\n\n    if (EREG_NUMBER.test(value)) {\n      onChange(event);\n    }\n  };\n\n  return React.createElement(FormTextInput, _extends({\n    type: 'color',\n    style: STYLE,\n    onChange: onChangeCustom,\n    autoComplete: 'off'\n  }, rest));\n}","map":{"version":3,"sources":["/home/srihari/Desktop/Sparkplug_PandemicSparks/grid/node_modules/react-planner/es/components/style/form-color-input.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_objectWithoutProperties","obj","keys","indexOf","React","FormTextInput","STYLE","padding","border","EREG_NUMBER","FormColorInput","_ref","onChange","rest","onChangeCustom","event","value","test","createElement","type","style","autoComplete"],"mappings":"AAAA,IAAIA,QAAQ,GAAGC,MAAM,CAACC,MAAP,IAAiB,UAAUC,MAAV,EAAkB;AAAE,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAAE,QAAIG,MAAM,GAAGF,SAAS,CAACD,CAAD,CAAtB;;AAA2B,SAAK,IAAII,GAAT,IAAgBD,MAAhB,EAAwB;AAAE,UAAIN,MAAM,CAACQ,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,MAArC,EAA6CC,GAA7C,CAAJ,EAAuD;AAAEL,QAAAA,MAAM,CAACK,GAAD,CAAN,GAAcD,MAAM,CAACC,GAAD,CAApB;AAA4B;AAAE;AAAE;;AAAC,SAAOL,MAAP;AAAgB,CAAhQ;;AAEA,SAASS,wBAAT,CAAkCC,GAAlC,EAAuCC,IAAvC,EAA6C;AAAE,MAAIX,MAAM,GAAG,EAAb;;AAAiB,OAAK,IAAIC,CAAT,IAAcS,GAAd,EAAmB;AAAE,QAAIC,IAAI,CAACC,OAAL,CAAaX,CAAb,KAAmB,CAAvB,EAA0B;AAAU,QAAI,CAACH,MAAM,CAACQ,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCE,GAArC,EAA0CT,CAA1C,CAAL,EAAmD;AAAUD,IAAAA,MAAM,CAACC,CAAD,CAAN,GAAYS,GAAG,CAACT,CAAD,CAAf;AAAqB;;AAAC,SAAOD,MAAP;AAAgB;;AAE5N,OAAOa,KAAP,MAAkB,OAAlB;AACA,OAAOC,aAAP,MAA0B,mBAA1B;AAEA,IAAIC,KAAK,GAAG;AACVC,EAAAA,OAAO,EAAE,CADC;AAEVC,EAAAA,MAAM,EAAE;AAFE,CAAZ;AAIA,IAAIC,WAAW,GAAG,MAAlB;AAEA,eAAe,SAASC,cAAT,CAAwBC,IAAxB,EAA8B;AAC3C,MAAIC,QAAQ,GAAGD,IAAI,CAACC,QAApB;AAAA,MACIC,IAAI,GAAGb,wBAAwB,CAACW,IAAD,EAAO,CAAC,UAAD,CAAP,CADnC;;AAGA,MAAIG,cAAc,GAAG,SAASA,cAAT,CAAwBC,KAAxB,EAA+B;AAClD,QAAIC,KAAK,GAAGD,KAAK,CAACxB,MAAN,CAAayB,KAAzB;;AACA,QAAIP,WAAW,CAACQ,IAAZ,CAAiBD,KAAjB,CAAJ,EAA6B;AAC3BJ,MAAAA,QAAQ,CAACG,KAAD,CAAR;AACD;AACF,GALD;;AAOA,SAAOX,KAAK,CAACc,aAAN,CAAoBb,aAApB,EAAmCjB,QAAQ,CAAC;AAAE+B,IAAAA,IAAI,EAAE,OAAR;AAAiBC,IAAAA,KAAK,EAAEd,KAAxB;AAA+BM,IAAAA,QAAQ,EAAEE,cAAzC;AAAyDO,IAAAA,YAAY,EAAE;AAAvE,GAAD,EAAiFR,IAAjF,CAA3C,CAAP;AACD","sourcesContent":["var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nfunction _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }\n\nimport React from 'react';\nimport FormTextInput from './form-text-input';\n\nvar STYLE = {\n  padding: 0,\n  border: 0\n};\nvar EREG_NUMBER = /^.*$/;\n\nexport default function FormColorInput(_ref) {\n  var onChange = _ref.onChange,\n      rest = _objectWithoutProperties(_ref, ['onChange']);\n\n  var onChangeCustom = function onChangeCustom(event) {\n    var value = event.target.value;\n    if (EREG_NUMBER.test(value)) {\n      onChange(event);\n    }\n  };\n\n  return React.createElement(FormTextInput, _extends({ type: 'color', style: STYLE, onChange: onChangeCustom, autoComplete: 'off' }, rest));\n}"]},"metadata":{},"sourceType":"module"}