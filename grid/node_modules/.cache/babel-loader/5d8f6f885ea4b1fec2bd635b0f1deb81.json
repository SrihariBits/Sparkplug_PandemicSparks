{"ast":null,"code":"var _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nimport { Map, List } from 'immutable';\nimport { MODE_VIEWING_CATALOG, MODE_CONFIGURING_PROJECT, MODE_IDLE } from '../constants';\nimport { State, Catalog } from '../models';\nimport { history } from '../utils/export';\nimport { Layer, Group, Line, Hole, Item, HorizontalGuide, VerticalGuide } from '../class/export';\n\nvar Project = function () {\n  function Project() {\n    _classCallCheck(this, Project);\n  }\n\n  _createClass(Project, null, [{\n    key: 'setAlterate',\n    value: function setAlterate(state) {\n      return {\n        updatedState: state.set('alterate', !state.alterate)\n      };\n    }\n  }, {\n    key: 'openCatalog',\n    value: function openCatalog(state) {\n      state = this.setMode(state, MODE_VIEWING_CATALOG).updatedState;\n      return {\n        updatedState: state\n      };\n    }\n  }, {\n    key: 'newProject',\n    value: function newProject(state) {\n      state = new State({\n        'viewer2D': state.get('viewer2D')\n      });\n      return {\n        updatedState: state\n      };\n    }\n  }, {\n    key: 'loadProject',\n    value: function loadProject(state, sceneJSON) {\n      state = new State({\n        scene: sceneJSON,\n        catalog: state.catalog.toJS()\n      });\n      return {\n        updatedState: state\n      };\n    }\n  }, {\n    key: 'setProperties',\n    value: function setProperties(state, layerID, properties) {\n      state = Layer.setPropertiesOnSelected(state, layerID, properties).updatedState;\n      return {\n        updatedState: state\n      };\n    }\n  }, {\n    key: 'updateProperties',\n    value: function updateProperties(state, layerID, properties) {\n      state = Layer.updatePropertiesOnSelected(state, layerID, properties).updatedState;\n      return {\n        updatedState: state\n      };\n    }\n  }, {\n    key: 'setItemsAttributes',\n    value: function setItemsAttributes(state, attributes) {\n      //TODO apply only to items\n      state.getIn(['scene', 'layers']).forEach(function (layer) {\n        state = Layer.setAttributesOnSelected(state, layer.id, attributes).updatedState;\n      });\n      return {\n        updatedState: state\n      };\n    }\n  }, {\n    key: 'setLinesAttributes',\n    value: function setLinesAttributes(state, attributes) {\n      //TODO apply only to lines\n      state.getIn(['scene', 'layers']).forEach(function (layer) {\n        state = Layer.setAttributesOnSelected(state, layer.id, attributes).updatedState;\n      });\n      return {\n        updatedState: state\n      };\n    }\n  }, {\n    key: 'setHolesAttributes',\n    value: function setHolesAttributes(state, attributes) {\n      //TODO apply only to holes\n      state.getIn(['scene', 'layers']).forEach(function (layer) {\n        state = Layer.setAttributesOnSelected(state, layer.id, attributes).updatedState;\n      });\n      return {\n        updatedState: state\n      };\n    }\n  }, {\n    key: 'unselectAll',\n    value: function unselectAll(state) {\n      state.getIn(['scene', 'layers']).forEach(function (_ref) {\n        var layerID = _ref.id;\n        state = Layer.unselectAll(state, layerID).updatedState;\n      });\n      state.getIn(['scene', 'groups']).forEach(function (group) {\n        state = Group.unselect(state, group.get('id')).updatedState;\n      });\n      return {\n        updatedState: state\n      };\n    }\n  }, {\n    key: 'remove',\n    value: function remove(state) {\n      var selectedLayer = state.getIn(['scene', 'selectedLayer']);\n\n      var _state$getIn = state.getIn(['scene', 'layers', selectedLayer, 'selected']),\n          selectedLines = _state$getIn.lines,\n          selectedHoles = _state$getIn.holes,\n          selectedItems = _state$getIn.items;\n\n      state = Layer.unselectAll(state, selectedLayer).updatedState;\n      selectedLines.forEach(function (lineID) {\n        state = Line.remove(state, selectedLayer, lineID).updatedState;\n      });\n      selectedHoles.forEach(function (holeID) {\n        state = Hole.remove(state, selectedLayer, holeID).updatedState;\n      });\n      selectedItems.forEach(function (itemID) {\n        state = Item.remove(state, selectedLayer, itemID).updatedState;\n      });\n      state = Layer.detectAndUpdateAreas(state, selectedLayer).updatedState;\n      return {\n        updatedState: state\n      };\n    }\n  }, {\n    key: 'undo',\n    value: function undo(state) {\n      var sceneHistory = state.sceneHistory;\n\n      if (state.scene === sceneHistory.last && sceneHistory.list.size > 1) {\n        sceneHistory = history.historyPop(sceneHistory);\n      }\n\n      state = state.merge({\n        mode: MODE_IDLE,\n        scene: sceneHistory.last,\n        sceneHistory: history.historyPop(sceneHistory)\n      });\n      return {\n        updatedState: state\n      };\n    }\n  }, {\n    key: 'rollback',\n    value: function rollback(state) {\n      var sceneHistory = state.sceneHistory;\n\n      if (!sceneHistory.last && sceneHistory.list.isEmpty()) {\n        return {\n          updatedState: state\n        };\n      }\n\n      state = this.unselectAll(state).updatedState;\n      state = state.merge({\n        mode: MODE_IDLE,\n        scene: sceneHistory.last,\n        sceneHistory: history.historyPush(sceneHistory, sceneHistory.last),\n        snapElements: new List(),\n        activeSnapElement: null,\n        drawingSupport: new Map(),\n        draggingSupport: new Map(),\n        rotatingSupport: new Map()\n      });\n      return {\n        updatedState: state\n      };\n    }\n  }, {\n    key: 'setProjectProperties',\n    value: function setProjectProperties(state, properties) {\n      var scene = state.scene.merge(properties);\n      state = state.merge({\n        mode: MODE_IDLE,\n        scene: scene\n      });\n      return {\n        updatedState: state\n      };\n    }\n  }, {\n    key: 'openProjectConfigurator',\n    value: function openProjectConfigurator(state) {\n      state = state.merge({\n        mode: MODE_CONFIGURING_PROJECT\n      });\n      return {\n        updatedState: state\n      };\n    }\n  }, {\n    key: 'initCatalog',\n    value: function initCatalog(state, catalog) {\n      state = state.set('catalog', new Catalog(catalog));\n      return {\n        updatedState: state\n      };\n    }\n  }, {\n    key: 'updateMouseCoord',\n    value: function updateMouseCoord(state, coords) {\n      state = state.set('mouse', new Map(coords));\n      return {\n        updatedState: state\n      };\n    }\n  }, {\n    key: 'updateZoomScale',\n    value: function updateZoomScale(state, scale) {\n      state = state.set('zoom', scale);\n      return {\n        updatedState: state\n      };\n    }\n  }, {\n    key: 'toggleSnap',\n    value: function toggleSnap(state, mask) {\n      state = state.set('snapMask', mask);\n      return {\n        updatedState: state\n      };\n    }\n  }, {\n    key: 'throwError',\n    value: function throwError(state, error) {\n      state = state.set('errors', state.get('errors').push({\n        date: Date.now(),\n        error: error\n      }));\n      return {\n        updatedState: state\n      };\n    }\n  }, {\n    key: 'throwWarning',\n    value: function throwWarning(state, warning) {\n      state = state.set('warnings', state.get('warnings').push({\n        date: Date.now(),\n        warning: warning\n      }));\n      return {\n        updatedState: state\n      };\n    }\n  }, {\n    key: 'copyProperties',\n    value: function copyProperties(state, properties) {\n      state = state.set('clipboardProperties', properties);\n      return {\n        updatedState: state\n      };\n    }\n  }, {\n    key: 'pasteProperties',\n    value: function pasteProperties(state) {\n      state = this.updateProperties(state, state.getIn(['scene', 'selectedLayer']), state.get('clipboardProperties')).updatedState;\n      return {\n        updatedState: state\n      };\n    }\n  }, {\n    key: 'pushLastSelectedCatalogElementToHistory',\n    value: function pushLastSelectedCatalogElementToHistory(state, element) {\n      var currHistory = state.selectedElementsHistory;\n      var previousPosition = currHistory.findIndex(function (el) {\n        return el.name === element.name;\n      });\n\n      if (previousPosition !== -1) {\n        currHistory = currHistory.splice(previousPosition, 1);\n      }\n\n      currHistory = currHistory.splice(0, 0, element);\n      state = state.set('selectedElementsHistory', currHistory);\n      return {\n        updatedState: state\n      };\n    }\n  }, {\n    key: 'changeCatalogPage',\n    value: function changeCatalogPage(state, oldPage, newPage) {\n      state = state.setIn(['catalog', 'page'], newPage).updateIn(['catalog', 'path'], function (path) {\n        return path.push(oldPage);\n      });\n      return {\n        updatedState: state\n      };\n    }\n  }, {\n    key: 'goBackToCatalogPage',\n    value: function goBackToCatalogPage(state, newPage) {\n      var pageIndex = state.catalog.path.findIndex(function (page) {\n        return page === newPage;\n      });\n      state = state.setIn(['catalog', 'page'], newPage).updateIn(['catalog', 'path'], function (path) {\n        return path.take(pageIndex);\n      });\n      return {\n        updatedState: state\n      };\n    }\n  }, {\n    key: 'setMode',\n    value: function setMode(state, mode) {\n      state = state.set('mode', mode);\n      return {\n        updatedState: state\n      };\n    }\n  }, {\n    key: 'addHorizontalGuide',\n    value: function addHorizontalGuide(state, coordinate) {\n      state = HorizontalGuide.create(state, coordinate).updatedState;\n      return {\n        updatedState: state\n      };\n    }\n  }, {\n    key: 'addVerticalGuide',\n    value: function addVerticalGuide(state, coordinate) {\n      state = VerticalGuide.create(state, coordinate).updatedState;\n      return {\n        updatedState: state\n      };\n    }\n  }, {\n    key: 'addCircularGuide',\n    value: function addCircularGuide(state, x, y, radius) {\n      console.log('adding horizontal guide at', x, y, radius);\n      return {\n        updatedState: state\n      };\n    }\n  }, {\n    key: 'removeHorizontalGuide',\n    value: function removeHorizontalGuide(state, guideID) {\n      state = HorizontalGuide.remove(state, guideID).updatedState;\n      return {\n        updatedState: state\n      };\n    }\n  }, {\n    key: 'removeVerticalGuide',\n    value: function removeVerticalGuide(state, guideID) {\n      state = VerticalGuide.remove(state, guideID).updatedState;\n      return {\n        updatedState: state\n      };\n    }\n  }, {\n    key: 'removeCircularGuide',\n    value: function removeCircularGuide(state, guideID) {\n      console.log('removeing horizontal guide ', guideID);\n      return {\n        updatedState: state\n      };\n    }\n  }]);\n\n  return Project;\n}();\n\nexport { Project as default };","map":{"version":3,"sources":["/home/srihari/Desktop/Sparkplug_PandemicSparks/grid/node_modules/react-planner/es/class/project.js"],"names":["_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","prototype","_classCallCheck","instance","TypeError","Map","List","MODE_VIEWING_CATALOG","MODE_CONFIGURING_PROJECT","MODE_IDLE","State","Catalog","history","Layer","Group","Line","Hole","Item","HorizontalGuide","VerticalGuide","Project","value","setAlterate","state","updatedState","set","alterate","openCatalog","setMode","newProject","get","loadProject","sceneJSON","scene","catalog","toJS","setProperties","layerID","properties","setPropertiesOnSelected","updateProperties","updatePropertiesOnSelected","setItemsAttributes","attributes","getIn","forEach","layer","setAttributesOnSelected","id","setLinesAttributes","setHolesAttributes","unselectAll","_ref","group","unselect","remove","selectedLayer","_state$getIn","selectedLines","lines","selectedHoles","holes","selectedItems","items","lineID","holeID","itemID","detectAndUpdateAreas","undo","sceneHistory","last","list","size","historyPop","merge","mode","rollback","isEmpty","historyPush","snapElements","activeSnapElement","drawingSupport","draggingSupport","rotatingSupport","setProjectProperties","openProjectConfigurator","initCatalog","updateMouseCoord","coords","updateZoomScale","scale","toggleSnap","mask","throwError","error","push","date","Date","now","throwWarning","warning","copyProperties","pasteProperties","pushLastSelectedCatalogElementToHistory","element","currHistory","selectedElementsHistory","previousPosition","findIndex","el","name","splice","changeCatalogPage","oldPage","newPage","setIn","updateIn","path","goBackToCatalogPage","pageIndex","page","take","addHorizontalGuide","coordinate","create","addVerticalGuide","addCircularGuide","x","y","radius","console","log","removeHorizontalGuide","guideID","removeVerticalGuide","removeCircularGuide","default"],"mappings":"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","sourcesContent":["var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport { Map, List } from 'immutable';\nimport { MODE_VIEWING_CATALOG, MODE_CONFIGURING_PROJECT, MODE_IDLE } from '../constants';\nimport { State, Catalog } from '../models';\nimport { history } from '../utils/export';\nimport { Layer, Group, Line, Hole, Item, HorizontalGuide, VerticalGuide } from '../class/export';\n\nvar Project = function () {\n  function Project() {\n    _classCallCheck(this, Project);\n  }\n\n  _createClass(Project, null, [{\n    key: 'setAlterate',\n    value: function setAlterate(state) {\n      return { updatedState: state.set('alterate', !state.alterate) };\n    }\n  }, {\n    key: 'openCatalog',\n    value: function openCatalog(state) {\n      state = this.setMode(state, MODE_VIEWING_CATALOG).updatedState;\n\n      return { updatedState: state };\n    }\n  }, {\n    key: 'newProject',\n    value: function newProject(state) {\n      state = new State({ 'viewer2D': state.get('viewer2D') });\n\n      return { updatedState: state };\n    }\n  }, {\n    key: 'loadProject',\n    value: function loadProject(state, sceneJSON) {\n      state = new State({ scene: sceneJSON, catalog: state.catalog.toJS() });\n\n      return { updatedState: state };\n    }\n  }, {\n    key: 'setProperties',\n    value: function setProperties(state, layerID, properties) {\n      state = Layer.setPropertiesOnSelected(state, layerID, properties).updatedState;\n\n      return { updatedState: state };\n    }\n  }, {\n    key: 'updateProperties',\n    value: function updateProperties(state, layerID, properties) {\n      state = Layer.updatePropertiesOnSelected(state, layerID, properties).updatedState;\n\n      return { updatedState: state };\n    }\n  }, {\n    key: 'setItemsAttributes',\n    value: function setItemsAttributes(state, attributes) {\n      //TODO apply only to items\n      state.getIn(['scene', 'layers']).forEach(function (layer) {\n        state = Layer.setAttributesOnSelected(state, layer.id, attributes).updatedState;\n      });\n\n      return { updatedState: state };\n    }\n  }, {\n    key: 'setLinesAttributes',\n    value: function setLinesAttributes(state, attributes) {\n      //TODO apply only to lines\n      state.getIn(['scene', 'layers']).forEach(function (layer) {\n        state = Layer.setAttributesOnSelected(state, layer.id, attributes).updatedState;\n      });\n\n      return { updatedState: state };\n    }\n  }, {\n    key: 'setHolesAttributes',\n    value: function setHolesAttributes(state, attributes) {\n      //TODO apply only to holes\n      state.getIn(['scene', 'layers']).forEach(function (layer) {\n        state = Layer.setAttributesOnSelected(state, layer.id, attributes).updatedState;\n      });\n\n      return { updatedState: state };\n    }\n  }, {\n    key: 'unselectAll',\n    value: function unselectAll(state) {\n      state.getIn(['scene', 'layers']).forEach(function (_ref) {\n        var layerID = _ref.id;\n        state = Layer.unselectAll(state, layerID).updatedState;\n      });\n      state.getIn(['scene', 'groups']).forEach(function (group) {\n        state = Group.unselect(state, group.get('id')).updatedState;\n      });\n\n      return { updatedState: state };\n    }\n  }, {\n    key: 'remove',\n    value: function remove(state) {\n      var selectedLayer = state.getIn(['scene', 'selectedLayer']);\n\n      var _state$getIn = state.getIn(['scene', 'layers', selectedLayer, 'selected']),\n          selectedLines = _state$getIn.lines,\n          selectedHoles = _state$getIn.holes,\n          selectedItems = _state$getIn.items;\n\n      state = Layer.unselectAll(state, selectedLayer).updatedState;\n\n      selectedLines.forEach(function (lineID) {\n        state = Line.remove(state, selectedLayer, lineID).updatedState;\n      });\n      selectedHoles.forEach(function (holeID) {\n        state = Hole.remove(state, selectedLayer, holeID).updatedState;\n      });\n      selectedItems.forEach(function (itemID) {\n        state = Item.remove(state, selectedLayer, itemID).updatedState;\n      });\n\n      state = Layer.detectAndUpdateAreas(state, selectedLayer).updatedState;\n\n      return { updatedState: state };\n    }\n  }, {\n    key: 'undo',\n    value: function undo(state) {\n      var sceneHistory = state.sceneHistory;\n      if (state.scene === sceneHistory.last && sceneHistory.list.size > 1) {\n        sceneHistory = history.historyPop(sceneHistory);\n      }\n\n      state = state.merge({\n        mode: MODE_IDLE,\n        scene: sceneHistory.last,\n        sceneHistory: history.historyPop(sceneHistory)\n      });\n\n      return { updatedState: state };\n    }\n  }, {\n    key: 'rollback',\n    value: function rollback(state) {\n      var sceneHistory = state.sceneHistory;\n\n      if (!sceneHistory.last && sceneHistory.list.isEmpty()) {\n        return { updatedState: state };\n      }\n\n      state = this.unselectAll(state).updatedState;\n\n      state = state.merge({\n        mode: MODE_IDLE,\n        scene: sceneHistory.last,\n        sceneHistory: history.historyPush(sceneHistory, sceneHistory.last),\n        snapElements: new List(),\n        activeSnapElement: null,\n        drawingSupport: new Map(),\n        draggingSupport: new Map(),\n        rotatingSupport: new Map()\n      });\n\n      return { updatedState: state };\n    }\n  }, {\n    key: 'setProjectProperties',\n    value: function setProjectProperties(state, properties) {\n      var scene = state.scene.merge(properties);\n      state = state.merge({\n        mode: MODE_IDLE,\n        scene: scene\n      });\n\n      return { updatedState: state };\n    }\n  }, {\n    key: 'openProjectConfigurator',\n    value: function openProjectConfigurator(state) {\n      state = state.merge({\n        mode: MODE_CONFIGURING_PROJECT\n      });\n\n      return { updatedState: state };\n    }\n  }, {\n    key: 'initCatalog',\n    value: function initCatalog(state, catalog) {\n      state = state.set('catalog', new Catalog(catalog));\n\n      return { updatedState: state };\n    }\n  }, {\n    key: 'updateMouseCoord',\n    value: function updateMouseCoord(state, coords) {\n      state = state.set('mouse', new Map(coords));\n\n      return { updatedState: state };\n    }\n  }, {\n    key: 'updateZoomScale',\n    value: function updateZoomScale(state, scale) {\n      state = state.set('zoom', scale);\n\n      return { updatedState: state };\n    }\n  }, {\n    key: 'toggleSnap',\n    value: function toggleSnap(state, mask) {\n      state = state.set('snapMask', mask);\n      return { updatedState: state };\n    }\n  }, {\n    key: 'throwError',\n    value: function throwError(state, error) {\n      state = state.set('errors', state.get('errors').push({\n        date: Date.now(),\n        error: error\n      }));\n\n      return { updatedState: state };\n    }\n  }, {\n    key: 'throwWarning',\n    value: function throwWarning(state, warning) {\n      state = state.set('warnings', state.get('warnings').push({\n        date: Date.now(),\n        warning: warning\n      }));\n\n      return { updatedState: state };\n    }\n  }, {\n    key: 'copyProperties',\n    value: function copyProperties(state, properties) {\n      state = state.set('clipboardProperties', properties);\n\n      return { updatedState: state };\n    }\n  }, {\n    key: 'pasteProperties',\n    value: function pasteProperties(state) {\n      state = this.updateProperties(state, state.getIn(['scene', 'selectedLayer']), state.get('clipboardProperties')).updatedState;\n\n      return { updatedState: state };\n    }\n  }, {\n    key: 'pushLastSelectedCatalogElementToHistory',\n    value: function pushLastSelectedCatalogElementToHistory(state, element) {\n      var currHistory = state.selectedElementsHistory;\n\n      var previousPosition = currHistory.findIndex(function (el) {\n        return el.name === element.name;\n      });\n      if (previousPosition !== -1) {\n        currHistory = currHistory.splice(previousPosition, 1);\n      }\n      currHistory = currHistory.splice(0, 0, element);\n\n      state = state.set('selectedElementsHistory', currHistory);\n      return { updatedState: state };\n    }\n  }, {\n    key: 'changeCatalogPage',\n    value: function changeCatalogPage(state, oldPage, newPage) {\n      state = state.setIn(['catalog', 'page'], newPage).updateIn(['catalog', 'path'], function (path) {\n        return path.push(oldPage);\n      });\n\n      return { updatedState: state };\n    }\n  }, {\n    key: 'goBackToCatalogPage',\n    value: function goBackToCatalogPage(state, newPage) {\n      var pageIndex = state.catalog.path.findIndex(function (page) {\n        return page === newPage;\n      });\n      state = state.setIn(['catalog', 'page'], newPage).updateIn(['catalog', 'path'], function (path) {\n        return path.take(pageIndex);\n      });\n\n      return { updatedState: state };\n    }\n  }, {\n    key: 'setMode',\n    value: function setMode(state, mode) {\n      state = state.set('mode', mode);\n      return { updatedState: state };\n    }\n  }, {\n    key: 'addHorizontalGuide',\n    value: function addHorizontalGuide(state, coordinate) {\n      state = HorizontalGuide.create(state, coordinate).updatedState;\n\n      return { updatedState: state };\n    }\n  }, {\n    key: 'addVerticalGuide',\n    value: function addVerticalGuide(state, coordinate) {\n      state = VerticalGuide.create(state, coordinate).updatedState;\n\n      return { updatedState: state };\n    }\n  }, {\n    key: 'addCircularGuide',\n    value: function addCircularGuide(state, x, y, radius) {\n      console.log('adding horizontal guide at', x, y, radius);\n\n      return { updatedState: state };\n    }\n  }, {\n    key: 'removeHorizontalGuide',\n    value: function removeHorizontalGuide(state, guideID) {\n      state = HorizontalGuide.remove(state, guideID).updatedState;\n\n      return { updatedState: state };\n    }\n  }, {\n    key: 'removeVerticalGuide',\n    value: function removeVerticalGuide(state, guideID) {\n      state = VerticalGuide.remove(state, guideID).updatedState;\n\n      return { updatedState: state };\n    }\n  }, {\n    key: 'removeCircularGuide',\n    value: function removeCircularGuide(state, guideID) {\n      console.log('removeing horizontal guide ', guideID);\n\n      return { updatedState: state };\n    }\n  }]);\n\n  return Project;\n}();\n\nexport { Project as default };"]},"metadata":{},"sourceType":"module"}