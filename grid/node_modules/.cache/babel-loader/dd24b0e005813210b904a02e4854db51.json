{"ast":null,"code":"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormLabel } from '../../components/style/export';\nimport PropertyStyle from './shared-property-style';\nvar checkboxStyle = {\n  margin: 0\n};\nexport default function PropertyCheckbox(_ref) {\n  var value = _ref.value,\n      onUpdate = _ref.onUpdate,\n      configs = _ref.configs,\n      sourceElement = _ref.sourceElement,\n      internalState = _ref.internalState,\n      state = _ref.state;\n\n  var update = function update(val) {\n    if (configs.hook) {\n      return configs.hook(val, sourceElement, internalState, state).then(function (_val) {\n        return onUpdate(_val);\n      });\n    }\n\n    return onUpdate(val);\n  };\n\n  return React.createElement('table', {\n    className: 'PropertyCheckbox',\n    style: PropertyStyle.tableStyle\n  }, React.createElement('tbody', null, React.createElement('tr', null, React.createElement('td', {\n    style: PropertyStyle.firstTdStyle\n  }, React.createElement(FormLabel, null, configs.label)), React.createElement('td', null, React.createElement('input', {\n    style: checkboxStyle,\n    type: 'checkbox',\n    checked: value,\n    onChange: function onChange(e) {\n      return update(!value);\n    }\n  })))));\n}\nPropertyCheckbox.propTypes = {\n  value: PropTypes.any.isRequired,\n  onUpdate: PropTypes.func.isRequired,\n  configs: PropTypes.object.isRequired,\n  sourceElement: PropTypes.object,\n  internalState: PropTypes.object,\n  state: PropTypes.object.isRequired\n};","map":{"version":3,"sources":["/home/srihari/Desktop/Sparkplug_PandemicSparks/grid/node_modules/react-planner/es/catalog/properties/property-checkbox.js"],"names":["React","PropTypes","FormLabel","PropertyStyle","checkboxStyle","margin","PropertyCheckbox","_ref","value","onUpdate","configs","sourceElement","internalState","state","update","val","hook","then","_val","createElement","className","style","tableStyle","firstTdStyle","label","type","checked","onChange","e","propTypes","any","isRequired","func","object"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,QAA0B,+BAA1B;AACA,OAAOC,aAAP,MAA0B,yBAA1B;AAEA,IAAIC,aAAa,GAAG;AAAEC,EAAAA,MAAM,EAAE;AAAV,CAApB;AAEA,eAAe,SAASC,gBAAT,CAA0BC,IAA1B,EAAgC;AAC7C,MAAIC,KAAK,GAAGD,IAAI,CAACC,KAAjB;AAAA,MACIC,QAAQ,GAAGF,IAAI,CAACE,QADpB;AAAA,MAEIC,OAAO,GAAGH,IAAI,CAACG,OAFnB;AAAA,MAGIC,aAAa,GAAGJ,IAAI,CAACI,aAHzB;AAAA,MAIIC,aAAa,GAAGL,IAAI,CAACK,aAJzB;AAAA,MAKIC,KAAK,GAAGN,IAAI,CAACM,KALjB;;AAQA,MAAIC,MAAM,GAAG,SAASA,MAAT,CAAgBC,GAAhB,EAAqB;AAEhC,QAAIL,OAAO,CAACM,IAAZ,EAAkB;AAChB,aAAON,OAAO,CAACM,IAAR,CAAaD,GAAb,EAAkBJ,aAAlB,EAAiCC,aAAjC,EAAgDC,KAAhD,EAAuDI,IAAvD,CAA4D,UAAUC,IAAV,EAAgB;AACjF,eAAOT,QAAQ,CAACS,IAAD,CAAf;AACD,OAFM,CAAP;AAGD;;AAED,WAAOT,QAAQ,CAACM,GAAD,CAAf;AACD,GATD;;AAWA,SAAOf,KAAK,CAACmB,aAAN,CACL,OADK,EAEL;AAAEC,IAAAA,SAAS,EAAE,kBAAb;AAAiCC,IAAAA,KAAK,EAAElB,aAAa,CAACmB;AAAtD,GAFK,EAGLtB,KAAK,CAACmB,aAAN,CACE,OADF,EAEE,IAFF,EAGEnB,KAAK,CAACmB,aAAN,CACE,IADF,EAEE,IAFF,EAGEnB,KAAK,CAACmB,aAAN,CACE,IADF,EAEE;AAAEE,IAAAA,KAAK,EAAElB,aAAa,CAACoB;AAAvB,GAFF,EAGEvB,KAAK,CAACmB,aAAN,CACEjB,SADF,EAEE,IAFF,EAGEQ,OAAO,CAACc,KAHV,CAHF,CAHF,EAYExB,KAAK,CAACmB,aAAN,CACE,IADF,EAEE,IAFF,EAGEnB,KAAK,CAACmB,aAAN,CAAoB,OAApB,EAA6B;AAAEE,IAAAA,KAAK,EAAEjB,aAAT;AAAwBqB,IAAAA,IAAI,EAAE,UAA9B;AAA0CC,IAAAA,OAAO,EAAElB,KAAnD;AAA0DmB,IAAAA,QAAQ,EAAE,SAASA,QAAT,CAAkBC,CAAlB,EAAqB;AAClH,aAAOd,MAAM,CAAC,CAACN,KAAF,CAAb;AACD;AAF0B,GAA7B,CAHF,CAZF,CAHF,CAHK,CAAP;AA4BD;AAEDF,gBAAgB,CAACuB,SAAjB,GAA6B;AAC3BrB,EAAAA,KAAK,EAAEP,SAAS,CAAC6B,GAAV,CAAcC,UADM;AAE3BtB,EAAAA,QAAQ,EAAER,SAAS,CAAC+B,IAAV,CAAeD,UAFE;AAG3BrB,EAAAA,OAAO,EAAET,SAAS,CAACgC,MAAV,CAAiBF,UAHC;AAI3BpB,EAAAA,aAAa,EAAEV,SAAS,CAACgC,MAJE;AAK3BrB,EAAAA,aAAa,EAAEX,SAAS,CAACgC,MALE;AAM3BpB,EAAAA,KAAK,EAAEZ,SAAS,CAACgC,MAAV,CAAiBF;AANG,CAA7B","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormLabel } from '../../components/style/export';\nimport PropertyStyle from './shared-property-style';\n\nvar checkboxStyle = { margin: 0 };\n\nexport default function PropertyCheckbox(_ref) {\n  var value = _ref.value,\n      onUpdate = _ref.onUpdate,\n      configs = _ref.configs,\n      sourceElement = _ref.sourceElement,\n      internalState = _ref.internalState,\n      state = _ref.state;\n\n\n  var update = function update(val) {\n\n    if (configs.hook) {\n      return configs.hook(val, sourceElement, internalState, state).then(function (_val) {\n        return onUpdate(_val);\n      });\n    }\n\n    return onUpdate(val);\n  };\n\n  return React.createElement(\n    'table',\n    { className: 'PropertyCheckbox', style: PropertyStyle.tableStyle },\n    React.createElement(\n      'tbody',\n      null,\n      React.createElement(\n        'tr',\n        null,\n        React.createElement(\n          'td',\n          { style: PropertyStyle.firstTdStyle },\n          React.createElement(\n            FormLabel,\n            null,\n            configs.label\n          )\n        ),\n        React.createElement(\n          'td',\n          null,\n          React.createElement('input', { style: checkboxStyle, type: 'checkbox', checked: value, onChange: function onChange(e) {\n              return update(!value);\n            } })\n        )\n      )\n    )\n  );\n}\n\nPropertyCheckbox.propTypes = {\n  value: PropTypes.any.isRequired,\n  onUpdate: PropTypes.func.isRequired,\n  configs: PropTypes.object.isRequired,\n  sourceElement: PropTypes.object,\n  internalState: PropTypes.object,\n  state: PropTypes.object.isRequired\n};"]},"metadata":{},"sourceType":"module"}