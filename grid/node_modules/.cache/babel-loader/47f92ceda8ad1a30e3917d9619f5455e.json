{"ast":null,"code":"export function browserDownload(json) {\n  output = JSON.parse(json);\n  console.log(json);\n  fetch('http://192.168.43.115:5000/warehouseSave.json', {\n    method: \"post\",\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      data: output\n    })\n  });\n}\n/*export function browserUpload() {\n  return new Promise(function (resolve, reject) {\n\n    var fileInput = document.createElement('input');\n    fileInput.type = 'file';\n\n    fileInput.addEventListener('change', function (event) {\n      var file = event.target.files[0];\n      var reader = new FileReader();\n      reader.addEventListener('load', function (fileEvent) {\n        var loadedData = fileEvent.target.result;\n        resolve(loadedData);\n      });\n      reader.readAsText(file);\n    });\n\n    fileInput.click();\n  });\n}*/","map":{"version":3,"sources":["/home/srihari/Desktop/Sparkplug_PandemicSparks/grid/node_modules/react-planner/es/utils/browser.js"],"names":["browserDownload","json","output","JSON","parse","console","log","fetch","method","headers","body","stringify","data"],"mappings":"AAAA,OAAO,SAASA,eAAT,CAAyBC,IAAzB,EAA+B;AACpCC,EAAAA,MAAM,GAACC,IAAI,CAACC,KAAL,CAAWH,IAAX,CAAP;AACAI,EAAAA,OAAO,CAACC,GAAR,CAAYL,IAAZ;AACAM,EAAAA,KAAK,CAAC,+CAAD,EAAkD;AAC7CC,IAAAA,MAAM,EAAE,MADqC;AAE7CC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAFoC;AAG7CC,IAAAA,IAAI,EAAEP,IAAI,CAACQ,SAAL,CAAe;AACjBC,MAAAA,IAAI,EAACV;AADY,KAAf;AAHuC,GAAlD,CAAL;AAOD;AAED","sourcesContent":["export function browserDownload(json) {\n  output=JSON.parse(json);\n  console.log(json);\n  fetch('http://192.168.43.115:5000/warehouseSave.json', {\n            method: \"post\",\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                data:output\n            })\n        })\n}\n\n/*export function browserUpload() {\n  return new Promise(function (resolve, reject) {\n\n    var fileInput = document.createElement('input');\n    fileInput.type = 'file';\n\n    fileInput.addEventListener('change', function (event) {\n      var file = event.target.files[0];\n      var reader = new FileReader();\n      reader.addEventListener('load', function (fileEvent) {\n        var loadedData = fileEvent.target.result;\n        resolve(loadedData);\n      });\n      reader.readAsText(file);\n    });\n\n    fileInput.click();\n  });\n}*/"]},"metadata":{},"sourceType":"module"}