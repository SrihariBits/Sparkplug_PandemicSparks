{"ast":null,"code":"var _jsxFileName = \"/home/srihari/Desktop/Sparkplug_PandemicSparks/grid/src/App.js\";\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Map } from 'immutable';\nimport { createStore } from 'redux';\nimport { Provider } from 'react-redux'; //download this demo catalog https://github.com/cvdlab/react-planner/tree/master/demo/src/catalog\n\nimport MyCatalog from './catalog/mycatalog';\nimport { Models as PlannerModels, reducer as PlannerReducer, ReactPlanner, Plugins as PlannerPlugins } from 'react-planner'; //define state\n\nlet AppState = Map({\n  'react-planner': new PlannerModels.State()\n}); //define reducer\n\nlet reducer = (state, action) => {\n  state = state || AppState;\n  state = state.update('react-planner', plannerState => PlannerReducer(plannerState, action));\n  return state;\n};\n\nlet store = createStore(reducer, null, window.devToolsExtension ? window.devToolsExtension() : f => f);\nlet plugins = [PlannerPlugins.Keyboard(), PlannerPlugins.Autosave('react-planner_v0'), PlannerPlugins.ConsoleDebugger()]; //render\n\nReactDOM.render( /*#__PURE__*/React.createElement(Provider, {\n  store: store,\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }\n}, /*#__PURE__*/React.createElement(ReactPlanner, {\n  catalog: MyCatalog,\n  width: 800,\n  height: 600,\n  plugins: plugins,\n  stateExtractor: state => state.get('react-planner'),\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 7\n  }\n})), document.getElementById('app'));","map":{"version":3,"sources":["/home/srihari/Desktop/Sparkplug_PandemicSparks/grid/src/App.js"],"names":["React","ReactDOM","Map","createStore","Provider","MyCatalog","Models","PlannerModels","reducer","PlannerReducer","ReactPlanner","Plugins","PlannerPlugins","AppState","State","state","action","update","plannerState","store","window","devToolsExtension","f","plugins","Keyboard","Autosave","ConsoleDebugger","render","get","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,SAAQC,GAAR,QAAkB,WAAlB;AACA,SAAQC,WAAR,QAA0B,OAA1B;AACA,SAAQC,QAAR,QAAuB,aAAvB,C,CAEA;;AACA,OAAOC,SAAP,MAAsB,qBAAtB;AAEA,SACEC,MAAM,IAAIC,aADZ,EAEEC,OAAO,IAAIC,cAFb,EAGEC,YAHF,EAIEC,OAAO,IAAIC,cAJb,QAKO,eALP,C,CAQA;;AACA,IAAIC,QAAQ,GAAGX,GAAG,CAAC;AACjB,mBAAiB,IAAIK,aAAa,CAACO,KAAlB;AADA,CAAD,CAAlB,C,CAIA;;AACA,IAAIN,OAAO,GAAG,CAACO,KAAD,EAAQC,MAAR,KAAmB;AAC/BD,EAAAA,KAAK,GAAGA,KAAK,IAAIF,QAAjB;AACAE,EAAAA,KAAK,GAAGA,KAAK,CAACE,MAAN,CAAa,eAAb,EAA8BC,YAAY,IAAIT,cAAc,CAACS,YAAD,EAAeF,MAAf,CAA5D,CAAR;AACA,SAAOD,KAAP;AACD,CAJD;;AAMA,IAAII,KAAK,GAAGhB,WAAW,CAACK,OAAD,EAAU,IAAV,EAAgBY,MAAM,CAACC,iBAAP,GAA2BD,MAAM,CAACC,iBAAP,EAA3B,GAAwDC,CAAC,IAAIA,CAA7E,CAAvB;AAEA,IAAIC,OAAO,GAAG,CACZX,cAAc,CAACY,QAAf,EADY,EAEZZ,cAAc,CAACa,QAAf,CAAwB,kBAAxB,CAFY,EAGZb,cAAc,CAACc,eAAf,EAHY,CAAd,C,CAMA;;AACAzB,QAAQ,CAAC0B,MAAT,eAEI,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAER,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBACE,oBAAC,YAAD;AACE,EAAA,OAAO,EAAEd,SADX;AAEE,EAAA,KAAK,EAAE,GAFT;AAGE,EAAA,MAAM,EAAE,GAHV;AAIE,EAAA,OAAO,EAAEkB,OAJX;AAKE,EAAA,cAAc,EAAER,KAAK,IAAIA,KAAK,CAACa,GAAN,CAAU,eAAV,CAL3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,CAFJ,EAYEC,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAZF","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Map} from 'immutable';\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\n\n//download this demo catalog https://github.com/cvdlab/react-planner/tree/master/demo/src/catalog\nimport MyCatalog from './catalog/mycatalog';\n\nimport {\n  Models as PlannerModels,\n  reducer as PlannerReducer,\n  ReactPlanner,\n  Plugins as PlannerPlugins,\n} from 'react-planner';\n\n\n//define state\nlet AppState = Map({\n  'react-planner': new PlannerModels.State()\n});\n\n//define reducer\nlet reducer = (state, action) => {\n  state = state || AppState;\n  state = state.update('react-planner', plannerState => PlannerReducer(plannerState, action));\n  return state;\n};\n\nlet store = createStore(reducer, null, window.devToolsExtension ? window.devToolsExtension() : f => f);\n\nlet plugins = [\n  PlannerPlugins.Keyboard(),\n  PlannerPlugins.Autosave('react-planner_v0'),\n  PlannerPlugins.ConsoleDebugger(),\n];\n\n//render\nReactDOM.render(\n  (\n    <Provider store={store}>\n      <ReactPlanner\n        catalog={MyCatalog}\n        width={800}\n        height={600}\n        plugins={plugins}\n        stateExtractor={state => state.get('react-planner')}\n      />\n    </Provider>\n  ),\n  document.getElementById('app')\n);"]},"metadata":{},"sourceType":"module"}