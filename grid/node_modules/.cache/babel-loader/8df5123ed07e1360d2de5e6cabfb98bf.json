{"ast":null,"code":"export function browserDownload(json) {\n  let output = JSON.parse(JSON.stringify(json));\n  console.log(output);\n  fetch('http://192.168.43.115:5000/warehouseSave', {\n    method: \"post\",\n    headers: {\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({\n      data: output\n    })\n  });\n}\n/*export function browserUpload() {\n  return new Promise(function (resolve, reject) {\n\n    var fileInput = document.createElement('input');\n    fileInput.type = 'file';\n\n    fileInput.addEventListener('change', function (event) {\n      var file = event.target.files[0];\n      var reader = new FileReader();\n      reader.addEventListener('load', function (fileEvent) {\n        var loadedData = fileEvent.target.result;\n        resolve(loadedData);\n      });\n      reader.readAsText(file);\n    });\n\n    fileInput.click();\n  });\n}*/","map":{"version":3,"sources":["/home/srihari/Desktop/Sparkplug_PandemicSparks/grid/node_modules/react-planner/es/utils/browser.js"],"names":["browserDownload","json","output","JSON","parse","stringify","console","log","fetch","method","headers","body","data"],"mappings":"AAAA,OAAO,SAASA,eAAT,CAAyBC,IAAzB,EAA+B;AACpC,MAAIC,MAAM,GAACC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,SAAL,CAAeJ,IAAf,CAAX,CAAX;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYL,MAAZ;AACAM,EAAAA,KAAK,CAAC,0CAAD,EAA6C;AACxCC,IAAAA,MAAM,EAAE,MADgC;AAExCC,IAAAA,OAAO,EAAE;AAAE,sBAAgB;AAAlB,KAF+B;AAGxCC,IAAAA,IAAI,EAAER,IAAI,CAACE,SAAL,CAAe;AACjBO,MAAAA,IAAI,EAACV;AADY,KAAf;AAHkC,GAA7C,CAAL;AAOD;AAED","sourcesContent":["export function browserDownload(json) {\n  let output=JSON.parse(JSON.stringify(json));\n  console.log(output);\n  fetch('http://192.168.43.115:5000/warehouseSave', {\n            method: \"post\",\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                data:output\n            })\n        })\n}\n\n/*export function browserUpload() {\n  return new Promise(function (resolve, reject) {\n\n    var fileInput = document.createElement('input');\n    fileInput.type = 'file';\n\n    fileInput.addEventListener('change', function (event) {\n      var file = event.target.files[0];\n      var reader = new FileReader();\n      reader.addEventListener('load', function (fileEvent) {\n        var loadedData = fileEvent.target.result;\n        resolve(loadedData);\n      });\n      reader.readAsText(file);\n    });\n\n    fileInput.click();\n  });\n}*/"]},"metadata":{},"sourceType":"module"}