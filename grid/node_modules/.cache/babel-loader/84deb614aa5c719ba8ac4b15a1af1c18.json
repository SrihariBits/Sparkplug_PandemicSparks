{"ast":null,"code":"import { Line } from '../class/export';\nimport { history } from '../utils/export';\nimport { SELECT_TOOL_DRAWING_LINE, BEGIN_DRAWING_LINE, UPDATE_DRAWING_LINE, END_DRAWING_LINE, BEGIN_DRAGGING_LINE, UPDATE_DRAGGING_LINE, END_DRAGGING_LINE, SELECT_LINE } from '../constants';\nexport default function (state, action) {\n  switch (action.type) {\n    case SELECT_TOOL_DRAWING_LINE:\n      return Line.selectToolDrawingLine(state, action.sceneComponentType).updatedState;\n\n    case BEGIN_DRAWING_LINE:\n      state = state.merge({\n        sceneHistory: history.historyPush(state.sceneHistory, state.scene)\n      });\n      return Line.beginDrawingLine(state, action.layerID, action.x, action.y).updatedState;\n\n    case UPDATE_DRAWING_LINE:\n      return Line.updateDrawingLine(state, action.x, action.y).updatedState;\n\n    case END_DRAWING_LINE:\n      state = state.merge({\n        sceneHistory: history.historyPush(state.sceneHistory, state.scene)\n      });\n      return Line.endDrawingLine(state, action.x, action.y).updatedState;\n\n    case BEGIN_DRAGGING_LINE:\n      state = state.merge({\n        sceneHistory: history.historyPush(state.sceneHistory, state.scene)\n      });\n      return Line.beginDraggingLine(state, action.layerID, action.lineID, action.x, action.y).updatedState;\n\n    case UPDATE_DRAGGING_LINE:\n      return Line.updateDraggingLine(state, action.x, action.y).updatedState;\n\n    case END_DRAGGING_LINE:\n      state = state.merge({\n        sceneHistory: history.historyPush(state.sceneHistory, state.scene)\n      });\n      return Line.endDraggingLine(state, action.x, action.y).updatedState;\n\n    case SELECT_LINE:\n      return Line.select(state, action.layerID, action.lineID).updatedState;\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/srihari/Desktop/Sparkplug_PandemicSparks/grid/node_modules/react-planner/es/reducers/lines-reducer.js"],"names":["Line","history","SELECT_TOOL_DRAWING_LINE","BEGIN_DRAWING_LINE","UPDATE_DRAWING_LINE","END_DRAWING_LINE","BEGIN_DRAGGING_LINE","UPDATE_DRAGGING_LINE","END_DRAGGING_LINE","SELECT_LINE","state","action","type","selectToolDrawingLine","sceneComponentType","updatedState","merge","sceneHistory","historyPush","scene","beginDrawingLine","layerID","x","y","updateDrawingLine","endDrawingLine","beginDraggingLine","lineID","updateDraggingLine","endDraggingLine","select"],"mappings":"AAAA,SAASA,IAAT,QAAqB,iBAArB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,wBAAT,EAAmCC,kBAAnC,EAAuDC,mBAAvD,EAA4EC,gBAA5E,EAA8FC,mBAA9F,EAAmHC,oBAAnH,EAAyIC,iBAAzI,EAA4JC,WAA5J,QAA+K,cAA/K;AAEA,eAAe,UAAUC,KAAV,EAAiBC,MAAjB,EAAyB;AAEtC,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKV,wBAAL;AACE,aAAOF,IAAI,CAACa,qBAAL,CAA2BH,KAA3B,EAAkCC,MAAM,CAACG,kBAAzC,EAA6DC,YAApE;;AAEF,SAAKZ,kBAAL;AACEO,MAAAA,KAAK,GAAGA,KAAK,CAACM,KAAN,CAAY;AAAEC,QAAAA,YAAY,EAAEhB,OAAO,CAACiB,WAAR,CAAoBR,KAAK,CAACO,YAA1B,EAAwCP,KAAK,CAACS,KAA9C;AAAhB,OAAZ,CAAR;AACA,aAAOnB,IAAI,CAACoB,gBAAL,CAAsBV,KAAtB,EAA6BC,MAAM,CAACU,OAApC,EAA6CV,MAAM,CAACW,CAApD,EAAuDX,MAAM,CAACY,CAA9D,EAAiER,YAAxE;;AAEF,SAAKX,mBAAL;AACE,aAAOJ,IAAI,CAACwB,iBAAL,CAAuBd,KAAvB,EAA8BC,MAAM,CAACW,CAArC,EAAwCX,MAAM,CAACY,CAA/C,EAAkDR,YAAzD;;AAEF,SAAKV,gBAAL;AACEK,MAAAA,KAAK,GAAGA,KAAK,CAACM,KAAN,CAAY;AAAEC,QAAAA,YAAY,EAAEhB,OAAO,CAACiB,WAAR,CAAoBR,KAAK,CAACO,YAA1B,EAAwCP,KAAK,CAACS,KAA9C;AAAhB,OAAZ,CAAR;AACA,aAAOnB,IAAI,CAACyB,cAAL,CAAoBf,KAApB,EAA2BC,MAAM,CAACW,CAAlC,EAAqCX,MAAM,CAACY,CAA5C,EAA+CR,YAAtD;;AAEF,SAAKT,mBAAL;AACEI,MAAAA,KAAK,GAAGA,KAAK,CAACM,KAAN,CAAY;AAAEC,QAAAA,YAAY,EAAEhB,OAAO,CAACiB,WAAR,CAAoBR,KAAK,CAACO,YAA1B,EAAwCP,KAAK,CAACS,KAA9C;AAAhB,OAAZ,CAAR;AACA,aAAOnB,IAAI,CAAC0B,iBAAL,CAAuBhB,KAAvB,EAA8BC,MAAM,CAACU,OAArC,EAA8CV,MAAM,CAACgB,MAArD,EAA6DhB,MAAM,CAACW,CAApE,EAAuEX,MAAM,CAACY,CAA9E,EAAiFR,YAAxF;;AAEF,SAAKR,oBAAL;AACE,aAAOP,IAAI,CAAC4B,kBAAL,CAAwBlB,KAAxB,EAA+BC,MAAM,CAACW,CAAtC,EAAyCX,MAAM,CAACY,CAAhD,EAAmDR,YAA1D;;AAEF,SAAKP,iBAAL;AACEE,MAAAA,KAAK,GAAGA,KAAK,CAACM,KAAN,CAAY;AAAEC,QAAAA,YAAY,EAAEhB,OAAO,CAACiB,WAAR,CAAoBR,KAAK,CAACO,YAA1B,EAAwCP,KAAK,CAACS,KAA9C;AAAhB,OAAZ,CAAR;AACA,aAAOnB,IAAI,CAAC6B,eAAL,CAAqBnB,KAArB,EAA4BC,MAAM,CAACW,CAAnC,EAAsCX,MAAM,CAACY,CAA7C,EAAgDR,YAAvD;;AAEF,SAAKN,WAAL;AACE,aAAOT,IAAI,CAAC8B,MAAL,CAAYpB,KAAZ,EAAmBC,MAAM,CAACU,OAA1B,EAAmCV,MAAM,CAACgB,MAA1C,EAAkDZ,YAAzD;;AAEF;AACE,aAAOL,KAAP;AA9BJ;AAgCD","sourcesContent":["import { Line } from '../class/export';\nimport { history } from '../utils/export';\nimport { SELECT_TOOL_DRAWING_LINE, BEGIN_DRAWING_LINE, UPDATE_DRAWING_LINE, END_DRAWING_LINE, BEGIN_DRAGGING_LINE, UPDATE_DRAGGING_LINE, END_DRAGGING_LINE, SELECT_LINE } from '../constants';\n\nexport default function (state, action) {\n\n  switch (action.type) {\n    case SELECT_TOOL_DRAWING_LINE:\n      return Line.selectToolDrawingLine(state, action.sceneComponentType).updatedState;\n\n    case BEGIN_DRAWING_LINE:\n      state = state.merge({ sceneHistory: history.historyPush(state.sceneHistory, state.scene) });\n      return Line.beginDrawingLine(state, action.layerID, action.x, action.y).updatedState;\n\n    case UPDATE_DRAWING_LINE:\n      return Line.updateDrawingLine(state, action.x, action.y).updatedState;\n\n    case END_DRAWING_LINE:\n      state = state.merge({ sceneHistory: history.historyPush(state.sceneHistory, state.scene) });\n      return Line.endDrawingLine(state, action.x, action.y).updatedState;\n\n    case BEGIN_DRAGGING_LINE:\n      state = state.merge({ sceneHistory: history.historyPush(state.sceneHistory, state.scene) });\n      return Line.beginDraggingLine(state, action.layerID, action.lineID, action.x, action.y).updatedState;\n\n    case UPDATE_DRAGGING_LINE:\n      return Line.updateDraggingLine(state, action.x, action.y).updatedState;\n\n    case END_DRAGGING_LINE:\n      state = state.merge({ sceneHistory: history.historyPush(state.sceneHistory, state.scene) });\n      return Line.endDraggingLine(state, action.x, action.y).updatedState;\n\n    case SELECT_LINE:\n      return Line.select(state, action.layerID, action.lineID).updatedState;\n\n    default:\n      return state;\n  }\n}"]},"metadata":{},"sourceType":"module"}