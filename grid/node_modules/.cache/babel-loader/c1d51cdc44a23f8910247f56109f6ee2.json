{"ast":null,"code":"function getEdgesOfSubgraphs(subgraphs, graph) {\n  var edges = [];\n  subgraphs.forEach(function (component) {\n    edges.push([]);\n    var vertices = getVerticesFromBiconnectedComponent(component);\n    var inserted = [];\n    vertices.forEach(function (vertex) {\n      var adjacents = graph.adj[vertex];\n      adjacents.forEach(function (adj) {\n        if (vertex <= adj && vertices.has(adj)) {\n          edges[edges.length - 1].push([vertex, adj]);\n        }\n      });\n    });\n  });\n  return edges;\n}\n\nfunction getVerticesFromBiconnectedComponent(component) {\n  var vertices = new Set();\n  component.forEach(function (edge) {\n    vertices.add(edge.u);\n    vertices.add(edge.v);\n  });\n  return vertices;\n}\n\nmodule.exports = getEdgesOfSubgraphs;","map":{"version":3,"sources":["/home/srihari/Desktop/Sparkplug_PandemicSparks/grid/node_modules/react-planner/es/utils/get-edges-of-subgraphs.js"],"names":["getEdgesOfSubgraphs","subgraphs","graph","edges","forEach","component","push","vertices","getVerticesFromBiconnectedComponent","inserted","vertex","adjacents","adj","has","length","Set","edge","add","u","v","module","exports"],"mappings":"AAAA,SAASA,mBAAT,CAA6BC,SAA7B,EAAwCC,KAAxC,EAA+C;AAE3C,MAAIC,KAAK,GAAG,EAAZ;AAEAF,EAAAA,SAAS,CAACG,OAAV,CAAkB,UAAUC,SAAV,EAAqB;AACnCF,IAAAA,KAAK,CAACG,IAAN,CAAW,EAAX;AACA,QAAIC,QAAQ,GAAGC,mCAAmC,CAACH,SAAD,CAAlD;AACA,QAAII,QAAQ,GAAG,EAAf;AACAF,IAAAA,QAAQ,CAACH,OAAT,CAAiB,UAAUM,MAAV,EAAkB;AAC/B,UAAIC,SAAS,GAAGT,KAAK,CAACU,GAAN,CAAUF,MAAV,CAAhB;AACAC,MAAAA,SAAS,CAACP,OAAV,CAAkB,UAAUQ,GAAV,EAAe;AAC7B,YAAIF,MAAM,IAAIE,GAAV,IAAiBL,QAAQ,CAACM,GAAT,CAAaD,GAAb,CAArB,EAAwC;AACpCT,UAAAA,KAAK,CAACA,KAAK,CAACW,MAAN,GAAe,CAAhB,CAAL,CAAwBR,IAAxB,CAA6B,CAACI,MAAD,EAASE,GAAT,CAA7B;AACH;AACJ,OAJD;AAKH,KAPD;AAQH,GAZD;AAaA,SAAOT,KAAP;AACH;;AAED,SAASK,mCAAT,CAA6CH,SAA7C,EAAwD;AACpD,MAAIE,QAAQ,GAAG,IAAIQ,GAAJ,EAAf;AACAV,EAAAA,SAAS,CAACD,OAAV,CAAkB,UAAUY,IAAV,EAAgB;AAC9BT,IAAAA,QAAQ,CAACU,GAAT,CAAaD,IAAI,CAACE,CAAlB;AACAX,IAAAA,QAAQ,CAACU,GAAT,CAAaD,IAAI,CAACG,CAAlB;AACH,GAHD;AAIA,SAAOZ,QAAP;AACH;;AAEDa,MAAM,CAACC,OAAP,GAAiBrB,mBAAjB","sourcesContent":["function getEdgesOfSubgraphs(subgraphs, graph) {\n\n    var edges = [];\n\n    subgraphs.forEach(function (component) {\n        edges.push([]);\n        var vertices = getVerticesFromBiconnectedComponent(component);\n        var inserted = [];\n        vertices.forEach(function (vertex) {\n            var adjacents = graph.adj[vertex];\n            adjacents.forEach(function (adj) {\n                if (vertex <= adj && vertices.has(adj)) {\n                    edges[edges.length - 1].push([vertex, adj]);\n                }\n            });\n        });\n    });\n    return edges;\n}\n\nfunction getVerticesFromBiconnectedComponent(component) {\n    var vertices = new Set();\n    component.forEach(function (edge) {\n        vertices.add(edge.u);\n        vertices.add(edge.v);\n    });\n    return vertices;\n}\n\nmodule.exports = getEdgesOfSubgraphs;"]},"metadata":{},"sourceType":"script"}