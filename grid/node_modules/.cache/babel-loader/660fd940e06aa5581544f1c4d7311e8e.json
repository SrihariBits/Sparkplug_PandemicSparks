{"ast":null,"code":"import React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '../panel';\nimport { Seq } from 'immutable';\nimport { MODE_IDLE, MODE_2D_ZOOM_IN, MODE_2D_ZOOM_OUT, MODE_2D_PAN, MODE_3D_VIEW, MODE_3D_FIRST_PERSON, MODE_WAITING_DRAWING_LINE, MODE_DRAWING_LINE, MODE_DRAWING_HOLE, MODE_DRAWING_ITEM, MODE_DRAGGING_LINE, MODE_DRAGGING_VERTEX, MODE_DRAGGING_ITEM, MODE_DRAGGING_HOLE, MODE_FITTING_IMAGE, MODE_UPLOADING_IMAGE, MODE_ROTATING_ITEM } from '../../../constants';\nimport ElementEditor from './element-editor';\nexport default function PanelElementEditor(_ref, _ref2) {\n  var state = _ref.state;\n  var projectActions = _ref2.projectActions,\n      translator = _ref2.translator;\n  var scene = state.scene,\n      mode = state.mode;\n  if (![MODE_IDLE, MODE_2D_ZOOM_IN, MODE_2D_ZOOM_OUT, MODE_2D_PAN, MODE_3D_VIEW, MODE_3D_FIRST_PERSON, MODE_WAITING_DRAWING_LINE, MODE_DRAWING_LINE, MODE_DRAWING_HOLE, MODE_DRAWING_ITEM, MODE_DRAGGING_LINE, MODE_DRAGGING_VERTEX, MODE_DRAGGING_ITEM, MODE_DRAGGING_HOLE, MODE_ROTATING_ITEM, MODE_UPLOADING_IMAGE, MODE_FITTING_IMAGE].includes(mode)) return null;\n\n  var componentRenderer = function componentRenderer(element, layer) {\n    return React.createElement(Panel, {\n      key: element.id,\n      name: translator.t('Properties: [{0}] {1}', element.type, element.id),\n      opened: true\n    }\n    /*React.createElement(\n      'div',\n      { style: { padding: '5px 15px' } },\n      React.createElement(ElementEditor, { element: element, layer: layer, state: state })\n    )*/\n    );\n  };\n\n  var layerRenderer = function layerRenderer(layer) {\n    return Seq().concat(layer.lines, layer.holes, layer.areas, layer.items).filter(function (element) {\n      return element.selected;\n    }).map(function (element) {\n      return componentRenderer(element, layer);\n    }).valueSeq();\n  };\n\n  return React.createElement('div', null, scene.layers.valueSeq().map(layerRenderer));\n}\nPanelElementEditor.propTypes = {\n  state: PropTypes.object.isRequired\n};\nPanelElementEditor.contextTypes = {\n  projectActions: PropTypes.object.isRequired,\n  translator: PropTypes.object.isRequired\n};","map":{"version":3,"sources":["/home/srihari/Desktop/Sparkplug_PandemicSparks/grid/node_modules/react-planner/es/components/sidebar/panel-element-editor/panel-element-editor.js"],"names":["React","PropTypes","Panel","Seq","MODE_IDLE","MODE_2D_ZOOM_IN","MODE_2D_ZOOM_OUT","MODE_2D_PAN","MODE_3D_VIEW","MODE_3D_FIRST_PERSON","MODE_WAITING_DRAWING_LINE","MODE_DRAWING_LINE","MODE_DRAWING_HOLE","MODE_DRAWING_ITEM","MODE_DRAGGING_LINE","MODE_DRAGGING_VERTEX","MODE_DRAGGING_ITEM","MODE_DRAGGING_HOLE","MODE_FITTING_IMAGE","MODE_UPLOADING_IMAGE","MODE_ROTATING_ITEM","ElementEditor","PanelElementEditor","_ref","_ref2","state","projectActions","translator","scene","mode","includes","componentRenderer","element","layer","createElement","key","id","name","t","type","opened","layerRenderer","concat","lines","holes","areas","items","filter","selected","map","valueSeq","layers","propTypes","object","isRequired","contextTypes"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,UAAlB;AACA,SAASC,GAAT,QAAoB,WAApB;AACA,SAASC,SAAT,EAAoBC,eAApB,EAAqCC,gBAArC,EAAuDC,WAAvD,EAAoEC,YAApE,EAAkFC,oBAAlF,EAAwGC,yBAAxG,EAAmIC,iBAAnI,EAAsJC,iBAAtJ,EAAyKC,iBAAzK,EAA4LC,kBAA5L,EAAgNC,oBAAhN,EAAsOC,kBAAtO,EAA0PC,kBAA1P,EAA8QC,kBAA9Q,EAAkSC,oBAAlS,EAAwTC,kBAAxT,QAAkV,oBAAlV;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AAEA,eAAe,SAASC,kBAAT,CAA4BC,IAA5B,EAAkCC,KAAlC,EAAyC;AACtD,MAAIC,KAAK,GAAGF,IAAI,CAACE,KAAjB;AACA,MAAIC,cAAc,GAAGF,KAAK,CAACE,cAA3B;AAAA,MACIC,UAAU,GAAGH,KAAK,CAACG,UADvB;AAEA,MAAIC,KAAK,GAAGH,KAAK,CAACG,KAAlB;AAAA,MACIC,IAAI,GAAGJ,KAAK,CAACI,IADjB;AAIA,MAAI,CAAC,CAACzB,SAAD,EAAYC,eAAZ,EAA6BC,gBAA7B,EAA+CC,WAA/C,EAA4DC,YAA5D,EAA0EC,oBAA1E,EAAgGC,yBAAhG,EAA2HC,iBAA3H,EAA8IC,iBAA9I,EAAiKC,iBAAjK,EAAoLC,kBAApL,EAAwMC,oBAAxM,EAA8NC,kBAA9N,EAAkPC,kBAAlP,EAAsQG,kBAAtQ,EAA0RD,oBAA1R,EAAgTD,kBAAhT,EAAoUY,QAApU,CAA6UD,IAA7U,CAAL,EAAyV,OAAO,IAAP;;AAEzV,MAAIE,iBAAiB,GAAG,SAASA,iBAAT,CAA2BC,OAA3B,EAAoCC,KAApC,EAA2C;AACjE,WAAOjC,KAAK,CAACkC,aAAN,CACLhC,KADK,EAEL;AAAEiC,MAAAA,GAAG,EAAEH,OAAO,CAACI,EAAf;AAAmBC,MAAAA,IAAI,EAAEV,UAAU,CAACW,CAAX,CAAa,uBAAb,EAAsCN,OAAO,CAACO,IAA9C,EAAoDP,OAAO,CAACI,EAA5D,CAAzB;AAA0FI,MAAAA,MAAM,EAAE;AAAlG;AACA;;;;;AAHK,KAAP;AASD,GAVD;;AAYA,MAAIC,aAAa,GAAG,SAASA,aAAT,CAAuBR,KAAvB,EAA8B;AAChD,WAAO9B,GAAG,GAAGuC,MAAN,CAAaT,KAAK,CAACU,KAAnB,EAA0BV,KAAK,CAACW,KAAhC,EAAuCX,KAAK,CAACY,KAA7C,EAAoDZ,KAAK,CAACa,KAA1D,EAAiEC,MAAjE,CAAwE,UAAUf,OAAV,EAAmB;AAChG,aAAOA,OAAO,CAACgB,QAAf;AACD,KAFM,EAEJC,GAFI,CAEA,UAAUjB,OAAV,EAAmB;AACxB,aAAOD,iBAAiB,CAACC,OAAD,EAAUC,KAAV,CAAxB;AACD,KAJM,EAIJiB,QAJI,EAAP;AAKD,GAND;;AAQA,SAAOlD,KAAK,CAACkC,aAAN,CACL,KADK,EAEL,IAFK,EAGLN,KAAK,CAACuB,MAAN,CAAaD,QAAb,GAAwBD,GAAxB,CAA4BR,aAA5B,CAHK,CAAP;AAKD;AAEDnB,kBAAkB,CAAC8B,SAAnB,GAA+B;AAC7B3B,EAAAA,KAAK,EAAExB,SAAS,CAACoD,MAAV,CAAiBC;AADK,CAA/B;AAIAhC,kBAAkB,CAACiC,YAAnB,GAAkC;AAChC7B,EAAAA,cAAc,EAAEzB,SAAS,CAACoD,MAAV,CAAiBC,UADD;AAEhC3B,EAAAA,UAAU,EAAE1B,SAAS,CAACoD,MAAV,CAAiBC;AAFG,CAAlC","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport Panel from '../panel';\nimport { Seq } from 'immutable';\nimport { MODE_IDLE, MODE_2D_ZOOM_IN, MODE_2D_ZOOM_OUT, MODE_2D_PAN, MODE_3D_VIEW, MODE_3D_FIRST_PERSON, MODE_WAITING_DRAWING_LINE, MODE_DRAWING_LINE, MODE_DRAWING_HOLE, MODE_DRAWING_ITEM, MODE_DRAGGING_LINE, MODE_DRAGGING_VERTEX, MODE_DRAGGING_ITEM, MODE_DRAGGING_HOLE, MODE_FITTING_IMAGE, MODE_UPLOADING_IMAGE, MODE_ROTATING_ITEM } from '../../../constants';\nimport ElementEditor from './element-editor';\n\nexport default function PanelElementEditor(_ref, _ref2) {\n  var state = _ref.state;\n  var projectActions = _ref2.projectActions,\n      translator = _ref2.translator;\n  var scene = state.scene,\n      mode = state.mode;\n\n\n  if (![MODE_IDLE, MODE_2D_ZOOM_IN, MODE_2D_ZOOM_OUT, MODE_2D_PAN, MODE_3D_VIEW, MODE_3D_FIRST_PERSON, MODE_WAITING_DRAWING_LINE, MODE_DRAWING_LINE, MODE_DRAWING_HOLE, MODE_DRAWING_ITEM, MODE_DRAGGING_LINE, MODE_DRAGGING_VERTEX, MODE_DRAGGING_ITEM, MODE_DRAGGING_HOLE, MODE_ROTATING_ITEM, MODE_UPLOADING_IMAGE, MODE_FITTING_IMAGE].includes(mode)) return null;\n\n  var componentRenderer = function componentRenderer(element, layer) {\n    return React.createElement(\n      Panel,\n      { key: element.id, name: translator.t('Properties: [{0}] {1}', element.type, element.id), opened: true },\n      /*React.createElement(\n        'div',\n        { style: { padding: '5px 15px' } },\n        React.createElement(ElementEditor, { element: element, layer: layer, state: state })\n      )*/\n    );\n  };\n\n  var layerRenderer = function layerRenderer(layer) {\n    return Seq().concat(layer.lines, layer.holes, layer.areas, layer.items).filter(function (element) {\n      return element.selected;\n    }).map(function (element) {\n      return componentRenderer(element, layer);\n    }).valueSeq();\n  };\n\n  return React.createElement(\n    'div',\n    null,\n    scene.layers.valueSeq().map(layerRenderer)\n  );\n}\n\nPanelElementEditor.propTypes = {\n  state: PropTypes.object.isRequired\n};\n\nPanelElementEditor.contextTypes = {\n  projectActions: PropTypes.object.isRequired,\n  translator: PropTypes.object.isRequired\n};"]},"metadata":{},"sourceType":"module"}