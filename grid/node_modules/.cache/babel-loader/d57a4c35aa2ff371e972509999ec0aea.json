{"ast":null,"code":"import { history } from '../utils/export';\nimport { LOAD_PROJECT, NEW_PROJECT, OPEN_CATALOG, SELECT_TOOL_EDIT, MODE_IDLE, UNSELECT_ALL, SET_PROPERTIES, SET_ITEMS_ATTRIBUTES, SET_LINES_ATTRIBUTES, SET_HOLES_ATTRIBUTES, REMOVE, UNDO, ROLLBACK, SET_PROJECT_PROPERTIES, OPEN_PROJECT_CONFIGURATOR, INIT_CATALOG, UPDATE_MOUSE_COORDS, UPDATE_ZOOM_SCALE, TOGGLE_SNAP, CHANGE_CATALOG_PAGE, GO_BACK_TO_CATALOG_PAGE, THROW_ERROR, THROW_WARNING, COPY_PROPERTIES, PASTE_PROPERTIES, PUSH_LAST_SELECTED_CATALOG_ELEMENT_TO_HISTORY, ALTERATE_STATE, SET_MODE, ADD_HORIZONTAL_GUIDE, ADD_VERTICAL_GUIDE, ADD_CIRCULAR_GUIDE, REMOVE_HORIZONTAL_GUIDE, REMOVE_VERTICAL_GUIDE, REMOVE_CIRCULAR_GUIDE } from '../constants';\nimport { Project } from '../class/export';\nexport default function (state, action) {\n  switch (action.type) {\n    case NEW_PROJECT:\n      return Project.newProject(state).updatedState;\n\n    case LOAD_PROJECT:\n      return Project.loadProject(state, action.sceneJSON).updatedState;\n\n    case OPEN_CATALOG:\n      return Project.openCatalog(state).updatedState;\n\n    case CHANGE_CATALOG_PAGE:\n      return Project.changeCatalogPage(state, action.oldPage, action.newPage).updatedState;\n\n    case GO_BACK_TO_CATALOG_PAGE:\n      return Project.goBackToCatalogPage(state, action.newPage).updatedState;\n\n    case SELECT_TOOL_EDIT:\n      return Project.setMode(state, MODE_IDLE).updatedState;\n\n    case UNSELECT_ALL:\n      return Project.unselectAll(state).updatedState;\n\n    case SET_PROPERTIES:\n      state = state.merge({\n        sceneHistory: history.historyPush(state.sceneHistory, state.scene)\n      });\n      return Project.setProperties(state, state.getIn(['scene', 'selectedLayer']), action.properties).updatedState;\n\n    case SET_ITEMS_ATTRIBUTES:\n      state = state.merge({\n        sceneHistory: history.historyPush(state.sceneHistory, state.scene)\n      });\n      return Project.setItemsAttributes(state, action.itemsAttributes).updatedState;\n\n    case SET_LINES_ATTRIBUTES:\n      state = state.merge({\n        sceneHistory: history.historyPush(state.sceneHistory, state.scene)\n      });\n      return Project.setLinesAttributes(state, action.linesAttributes).updatedState;\n\n    case SET_HOLES_ATTRIBUTES:\n      state = state.merge({\n        sceneHistory: history.historyPush(state.sceneHistory, state.scene)\n      });\n      return Project.setHolesAttributes(state, action.holesAttributes).updatedState;\n\n    case REMOVE:\n      state = state.merge({\n        sceneHistory: history.historyPush(state.sceneHistory, state.scene)\n      });\n      return Project.remove(state).updatedState;\n\n    case UNDO:\n      return Project.undo(state).updatedState;\n\n    case ROLLBACK:\n      return Project.rollback(state).updatedState;\n\n    case SET_PROJECT_PROPERTIES:\n      state = state.merge({\n        sceneHistory: history.historyPush(state.sceneHistory, state.scene)\n      });\n      return Project.setProjectProperties(state, action.properties).updatedState;\n\n    case OPEN_PROJECT_CONFIGURATOR:\n      state = state.merge({\n        sceneHistory: history.historyPush(state.sceneHistory, state.scene)\n      });\n      return Project.openProjectConfigurator(state).updatedState;\n\n    case INIT_CATALOG:\n      return Project.initCatalog(state, action.catalog).updatedState;\n\n    case UPDATE_MOUSE_COORDS:\n      return Project.updateMouseCoord(state, action.coords).updatedState;\n\n    case UPDATE_ZOOM_SCALE:\n      return Project.updateZoomScale(state, action.scale).updatedState;\n\n    case TOGGLE_SNAP:\n      return Project.toggleSnap(state, action.mask).updatedState;\n\n    case THROW_ERROR:\n      return Project.throwError(state, action.error).updatedState;\n\n    case THROW_WARNING:\n      return Project.throwWarning(state, action.warning).updatedState;\n\n    case COPY_PROPERTIES:\n      return Project.copyProperties(state, action.properties).updatedState;\n\n    case PASTE_PROPERTIES:\n      state = state.merge({\n        sceneHistory: history.historyPush(state.sceneHistory, state.scene)\n      });\n      return Project.pasteProperties(state).updatedState;\n\n    case PUSH_LAST_SELECTED_CATALOG_ELEMENT_TO_HISTORY:\n      return Project.pushLastSelectedCatalogElementToHistory(state, action.element).updatedState;\n\n    case ALTERATE_STATE:\n      return Project.setAlterate(state).updatedState;\n\n    case SET_MODE:\n      return Project.setMode(state, action.mode).updatedState;\n\n    case ADD_HORIZONTAL_GUIDE:\n      state = state.merge({\n        sceneHistory: history.historyPush(state.sceneHistory, state.scene)\n      });\n      return Project.addHorizontalGuide(state, action.coordinate).updatedState;\n\n    case ADD_VERTICAL_GUIDE:\n      return Project.addVerticalGuide(state, action.coordinate).updatedState;\n\n    case ADD_CIRCULAR_GUIDE:\n      return Project.addCircularGuide(state, action.x, action.y, action.radius).updatedState;\n\n    case REMOVE_HORIZONTAL_GUIDE:\n      return Project.removeHorizontalGuide(state, action.guideID).updatedState;\n\n    case REMOVE_VERTICAL_GUIDE:\n      return Project.removeVerticalGuide(state, action.guideID).updatedState;\n\n    case REMOVE_CIRCULAR_GUIDE:\n      return Project.removeCircularGuide(state, action.guideID).updatedState;\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/home/srihari/Desktop/Sparkplug_PandemicSparks/grid/node_modules/react-planner/es/reducers/project-reducer.js"],"names":["history","LOAD_PROJECT","NEW_PROJECT","OPEN_CATALOG","SELECT_TOOL_EDIT","MODE_IDLE","UNSELECT_ALL","SET_PROPERTIES","SET_ITEMS_ATTRIBUTES","SET_LINES_ATTRIBUTES","SET_HOLES_ATTRIBUTES","REMOVE","UNDO","ROLLBACK","SET_PROJECT_PROPERTIES","OPEN_PROJECT_CONFIGURATOR","INIT_CATALOG","UPDATE_MOUSE_COORDS","UPDATE_ZOOM_SCALE","TOGGLE_SNAP","CHANGE_CATALOG_PAGE","GO_BACK_TO_CATALOG_PAGE","THROW_ERROR","THROW_WARNING","COPY_PROPERTIES","PASTE_PROPERTIES","PUSH_LAST_SELECTED_CATALOG_ELEMENT_TO_HISTORY","ALTERATE_STATE","SET_MODE","ADD_HORIZONTAL_GUIDE","ADD_VERTICAL_GUIDE","ADD_CIRCULAR_GUIDE","REMOVE_HORIZONTAL_GUIDE","REMOVE_VERTICAL_GUIDE","REMOVE_CIRCULAR_GUIDE","Project","state","action","type","newProject","updatedState","loadProject","sceneJSON","openCatalog","changeCatalogPage","oldPage","newPage","goBackToCatalogPage","setMode","unselectAll","merge","sceneHistory","historyPush","scene","setProperties","getIn","properties","setItemsAttributes","itemsAttributes","setLinesAttributes","linesAttributes","setHolesAttributes","holesAttributes","remove","undo","rollback","setProjectProperties","openProjectConfigurator","initCatalog","catalog","updateMouseCoord","coords","updateZoomScale","scale","toggleSnap","mask","throwError","error","throwWarning","warning","copyProperties","pasteProperties","pushLastSelectedCatalogElementToHistory","element","setAlterate","mode","addHorizontalGuide","coordinate","addVerticalGuide","addCircularGuide","x","y","radius","removeHorizontalGuide","guideID","removeVerticalGuide","removeCircularGuide"],"mappings":"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","sourcesContent":["import { history } from '../utils/export';\nimport { LOAD_PROJECT, NEW_PROJECT, OPEN_CATALOG, SELECT_TOOL_EDIT, MODE_IDLE, UNSELECT_ALL, SET_PROPERTIES, SET_ITEMS_ATTRIBUTES, SET_LINES_ATTRIBUTES, SET_HOLES_ATTRIBUTES, REMOVE, UNDO, ROLLBACK, SET_PROJECT_PROPERTIES, OPEN_PROJECT_CONFIGURATOR, INIT_CATALOG, UPDATE_MOUSE_COORDS, UPDATE_ZOOM_SCALE, TOGGLE_SNAP, CHANGE_CATALOG_PAGE, GO_BACK_TO_CATALOG_PAGE, THROW_ERROR, THROW_WARNING, COPY_PROPERTIES, PASTE_PROPERTIES, PUSH_LAST_SELECTED_CATALOG_ELEMENT_TO_HISTORY, ALTERATE_STATE, SET_MODE, ADD_HORIZONTAL_GUIDE, ADD_VERTICAL_GUIDE, ADD_CIRCULAR_GUIDE, REMOVE_HORIZONTAL_GUIDE, REMOVE_VERTICAL_GUIDE, REMOVE_CIRCULAR_GUIDE } from '../constants';\n\nimport { Project } from '../class/export';\n\nexport default function (state, action) {\n\n  switch (action.type) {\n    case NEW_PROJECT:\n      return Project.newProject(state).updatedState;\n\n    case LOAD_PROJECT:\n      return Project.loadProject(state, action.sceneJSON).updatedState;\n\n    case OPEN_CATALOG:\n      return Project.openCatalog(state).updatedState;\n\n    case CHANGE_CATALOG_PAGE:\n      return Project.changeCatalogPage(state, action.oldPage, action.newPage).updatedState;\n\n    case GO_BACK_TO_CATALOG_PAGE:\n      return Project.goBackToCatalogPage(state, action.newPage).updatedState;\n\n    case SELECT_TOOL_EDIT:\n      return Project.setMode(state, MODE_IDLE).updatedState;\n\n    case UNSELECT_ALL:\n      return Project.unselectAll(state).updatedState;\n\n    case SET_PROPERTIES:\n      state = state.merge({ sceneHistory: history.historyPush(state.sceneHistory, state.scene) });\n      return Project.setProperties(state, state.getIn(['scene', 'selectedLayer']), action.properties).updatedState;\n\n    case SET_ITEMS_ATTRIBUTES:\n      state = state.merge({ sceneHistory: history.historyPush(state.sceneHistory, state.scene) });\n      return Project.setItemsAttributes(state, action.itemsAttributes).updatedState;\n\n    case SET_LINES_ATTRIBUTES:\n      state = state.merge({ sceneHistory: history.historyPush(state.sceneHistory, state.scene) });\n      return Project.setLinesAttributes(state, action.linesAttributes).updatedState;\n\n    case SET_HOLES_ATTRIBUTES:\n      state = state.merge({ sceneHistory: history.historyPush(state.sceneHistory, state.scene) });\n      return Project.setHolesAttributes(state, action.holesAttributes).updatedState;\n\n    case REMOVE:\n      state = state.merge({ sceneHistory: history.historyPush(state.sceneHistory, state.scene) });\n      return Project.remove(state).updatedState;\n\n    case UNDO:\n      return Project.undo(state).updatedState;\n\n    case ROLLBACK:\n      return Project.rollback(state).updatedState;\n\n    case SET_PROJECT_PROPERTIES:\n      state = state.merge({ sceneHistory: history.historyPush(state.sceneHistory, state.scene) });\n      return Project.setProjectProperties(state, action.properties).updatedState;\n\n    case OPEN_PROJECT_CONFIGURATOR:\n      state = state.merge({ sceneHistory: history.historyPush(state.sceneHistory, state.scene) });\n      return Project.openProjectConfigurator(state).updatedState;\n\n    case INIT_CATALOG:\n      return Project.initCatalog(state, action.catalog).updatedState;\n\n    case UPDATE_MOUSE_COORDS:\n      return Project.updateMouseCoord(state, action.coords).updatedState;\n\n    case UPDATE_ZOOM_SCALE:\n      return Project.updateZoomScale(state, action.scale).updatedState;\n\n    case TOGGLE_SNAP:\n      return Project.toggleSnap(state, action.mask).updatedState;\n\n    case THROW_ERROR:\n      return Project.throwError(state, action.error).updatedState;\n\n    case THROW_WARNING:\n      return Project.throwWarning(state, action.warning).updatedState;\n\n    case COPY_PROPERTIES:\n      return Project.copyProperties(state, action.properties).updatedState;\n\n    case PASTE_PROPERTIES:\n      state = state.merge({ sceneHistory: history.historyPush(state.sceneHistory, state.scene) });\n      return Project.pasteProperties(state).updatedState;\n\n    case PUSH_LAST_SELECTED_CATALOG_ELEMENT_TO_HISTORY:\n      return Project.pushLastSelectedCatalogElementToHistory(state, action.element).updatedState;\n\n    case ALTERATE_STATE:\n      return Project.setAlterate(state).updatedState;\n\n    case SET_MODE:\n      return Project.setMode(state, action.mode).updatedState;\n\n    case ADD_HORIZONTAL_GUIDE:\n      state = state.merge({ sceneHistory: history.historyPush(state.sceneHistory, state.scene) });\n      return Project.addHorizontalGuide(state, action.coordinate).updatedState;\n\n    case ADD_VERTICAL_GUIDE:\n      return Project.addVerticalGuide(state, action.coordinate).updatedState;\n\n    case ADD_CIRCULAR_GUIDE:\n      return Project.addCircularGuide(state, action.x, action.y, action.radius).updatedState;\n\n    case REMOVE_HORIZONTAL_GUIDE:\n      return Project.removeHorizontalGuide(state, action.guideID).updatedState;\n\n    case REMOVE_VERTICAL_GUIDE:\n      return Project.removeVerticalGuide(state, action.guideID).updatedState;\n\n    case REMOVE_CIRCULAR_GUIDE:\n      return Project.removeCircularGuide(state, action.guideID).updatedState;\n\n    default:\n      return state;\n\n  }\n}"]},"metadata":{},"sourceType":"module"}