{"ast":null,"code":"import { PROJECT_ACTIONS, VIEWER2D_ACTIONS, VIEWER3D_ACTIONS, GROUP_ACTIONS, ITEMS_ACTIONS, HOLE_ACTIONS, LINE_ACTIONS, AREA_ACTIONS, SCENE_ACTIONS, VERTEX_ACTIONS } from '../constants';\nimport { ReactPlannerAreasReducer, ReactPlannerHolesReducer, ReactPlannerItemsReducer, ReactPlannerLinesReducer, ReactPlannerGroupsReducer, ReactPlannerProjectReducer, ReactPlannerSceneReducer, ReactPlannerVerticesReducer, ReactPlannerViewer2dReducer, ReactPlannerViewer3dReducer } from './export';\nimport { State } from '../models';\nexport var initialState = new State();\nexport default function appReducer(state, action) {\n  if (PROJECT_ACTIONS[action.type]) return ReactPlannerProjectReducer.apply(undefined, arguments);\n  if (VIEWER2D_ACTIONS[action.type]) return ReactPlannerViewer2dReducer.apply(undefined, arguments);\n  if (VIEWER3D_ACTIONS[action.type]) return ReactPlannerViewer3dReducer.apply(undefined, arguments);\n  if (ITEMS_ACTIONS[action.type]) return ReactPlannerItemsReducer.apply(undefined, arguments);\n  if (HOLE_ACTIONS[action.type]) return ReactPlannerHolesReducer.apply(undefined, arguments);\n  if (LINE_ACTIONS[action.type]) return ReactPlannerLinesReducer.apply(undefined, arguments);\n  if (AREA_ACTIONS[action.type]) return ReactPlannerAreasReducer.apply(undefined, arguments);\n  if (GROUP_ACTIONS[action.type]) return ReactPlannerGroupsReducer.apply(undefined, arguments);\n  if (SCENE_ACTIONS[action.type]) return ReactPlannerSceneReducer.apply(undefined, arguments);\n  if (VERTEX_ACTIONS[action.type]) return ReactPlannerVerticesReducer.apply(undefined, arguments);\n  return state || initialState;\n}\n;","map":{"version":3,"sources":["/home/srihari/Desktop/Sparkplug_PandemicSparks/grid/node_modules/react-planner/es/reducers/reducer.js"],"names":["PROJECT_ACTIONS","VIEWER2D_ACTIONS","VIEWER3D_ACTIONS","GROUP_ACTIONS","ITEMS_ACTIONS","HOLE_ACTIONS","LINE_ACTIONS","AREA_ACTIONS","SCENE_ACTIONS","VERTEX_ACTIONS","ReactPlannerAreasReducer","ReactPlannerHolesReducer","ReactPlannerItemsReducer","ReactPlannerLinesReducer","ReactPlannerGroupsReducer","ReactPlannerProjectReducer","ReactPlannerSceneReducer","ReactPlannerVerticesReducer","ReactPlannerViewer2dReducer","ReactPlannerViewer3dReducer","State","initialState","appReducer","state","action","type","apply","undefined","arguments"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,gBAA1B,EAA4CC,gBAA5C,EAA8DC,aAA9D,EAA6EC,aAA7E,EAA4FC,YAA5F,EAA0GC,YAA1G,EAAwHC,YAAxH,EAAsIC,aAAtI,EAAqJC,cAArJ,QAA2K,cAA3K;AAEA,SAASC,wBAAT,EAAmCC,wBAAnC,EAA6DC,wBAA7D,EAAuFC,wBAAvF,EAAiHC,yBAAjH,EAA4IC,0BAA5I,EAAwKC,wBAAxK,EAAkMC,2BAAlM,EAA+NC,2BAA/N,EAA4PC,2BAA5P,QAA+R,UAA/R;AAEA,SAASC,KAAT,QAAsB,WAAtB;AAEA,OAAO,IAAIC,YAAY,GAAG,IAAID,KAAJ,EAAnB;AAEP,eAAe,SAASE,UAAT,CAAoBC,KAApB,EAA2BC,MAA3B,EAAmC;AAChD,MAAIxB,eAAe,CAACwB,MAAM,CAACC,IAAR,CAAnB,EAAkC,OAAOV,0BAA0B,CAACW,KAA3B,CAAiCC,SAAjC,EAA4CC,SAA5C,CAAP;AAClC,MAAI3B,gBAAgB,CAACuB,MAAM,CAACC,IAAR,CAApB,EAAmC,OAAOP,2BAA2B,CAACQ,KAA5B,CAAkCC,SAAlC,EAA6CC,SAA7C,CAAP;AACnC,MAAI1B,gBAAgB,CAACsB,MAAM,CAACC,IAAR,CAApB,EAAmC,OAAON,2BAA2B,CAACO,KAA5B,CAAkCC,SAAlC,EAA6CC,SAA7C,CAAP;AACnC,MAAIxB,aAAa,CAACoB,MAAM,CAACC,IAAR,CAAjB,EAAgC,OAAOb,wBAAwB,CAACc,KAAzB,CAA+BC,SAA/B,EAA0CC,SAA1C,CAAP;AAChC,MAAIvB,YAAY,CAACmB,MAAM,CAACC,IAAR,CAAhB,EAA+B,OAAOd,wBAAwB,CAACe,KAAzB,CAA+BC,SAA/B,EAA0CC,SAA1C,CAAP;AAC/B,MAAItB,YAAY,CAACkB,MAAM,CAACC,IAAR,CAAhB,EAA+B,OAAOZ,wBAAwB,CAACa,KAAzB,CAA+BC,SAA/B,EAA0CC,SAA1C,CAAP;AAC/B,MAAIrB,YAAY,CAACiB,MAAM,CAACC,IAAR,CAAhB,EAA+B,OAAOf,wBAAwB,CAACgB,KAAzB,CAA+BC,SAA/B,EAA0CC,SAA1C,CAAP;AAC/B,MAAIzB,aAAa,CAACqB,MAAM,CAACC,IAAR,CAAjB,EAAgC,OAAOX,yBAAyB,CAACY,KAA1B,CAAgCC,SAAhC,EAA2CC,SAA3C,CAAP;AAChC,MAAIpB,aAAa,CAACgB,MAAM,CAACC,IAAR,CAAjB,EAAgC,OAAOT,wBAAwB,CAACU,KAAzB,CAA+BC,SAA/B,EAA0CC,SAA1C,CAAP;AAChC,MAAInB,cAAc,CAACe,MAAM,CAACC,IAAR,CAAlB,EAAiC,OAAOR,2BAA2B,CAACS,KAA5B,CAAkCC,SAAlC,EAA6CC,SAA7C,CAAP;AAEjC,SAAOL,KAAK,IAAIF,YAAhB;AACD;AAAA","sourcesContent":["import { PROJECT_ACTIONS, VIEWER2D_ACTIONS, VIEWER3D_ACTIONS, GROUP_ACTIONS, ITEMS_ACTIONS, HOLE_ACTIONS, LINE_ACTIONS, AREA_ACTIONS, SCENE_ACTIONS, VERTEX_ACTIONS } from '../constants';\n\nimport { ReactPlannerAreasReducer, ReactPlannerHolesReducer, ReactPlannerItemsReducer, ReactPlannerLinesReducer, ReactPlannerGroupsReducer, ReactPlannerProjectReducer, ReactPlannerSceneReducer, ReactPlannerVerticesReducer, ReactPlannerViewer2dReducer, ReactPlannerViewer3dReducer } from './export';\n\nimport { State } from '../models';\n\nexport var initialState = new State();\n\nexport default function appReducer(state, action) {\n  if (PROJECT_ACTIONS[action.type]) return ReactPlannerProjectReducer.apply(undefined, arguments);\n  if (VIEWER2D_ACTIONS[action.type]) return ReactPlannerViewer2dReducer.apply(undefined, arguments);\n  if (VIEWER3D_ACTIONS[action.type]) return ReactPlannerViewer3dReducer.apply(undefined, arguments);\n  if (ITEMS_ACTIONS[action.type]) return ReactPlannerItemsReducer.apply(undefined, arguments);\n  if (HOLE_ACTIONS[action.type]) return ReactPlannerHolesReducer.apply(undefined, arguments);\n  if (LINE_ACTIONS[action.type]) return ReactPlannerLinesReducer.apply(undefined, arguments);\n  if (AREA_ACTIONS[action.type]) return ReactPlannerAreasReducer.apply(undefined, arguments);\n  if (GROUP_ACTIONS[action.type]) return ReactPlannerGroupsReducer.apply(undefined, arguments);\n  if (SCENE_ACTIONS[action.type]) return ReactPlannerSceneReducer.apply(undefined, arguments);\n  if (VERTEX_ACTIONS[action.type]) return ReactPlannerVerticesReducer.apply(undefined, arguments);\n\n  return state || initialState;\n};"]},"metadata":{},"sourceType":"module"}