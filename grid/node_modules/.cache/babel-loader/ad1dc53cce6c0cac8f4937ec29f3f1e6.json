{"ast":null,"code":"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormLabel, Button } from '../../components/style/export';\nimport PropertyStyle from './shared-property-style';\nexport default function PropertyToggle(_ref) {\n  var value = _ref.value,\n      onUpdate = _ref.onUpdate,\n      configs = _ref.configs,\n      sourceElement = _ref.sourceElement,\n      internalState = _ref.internalState,\n      state = _ref.state;\n\n  var update = function update(val) {\n    if (configs.hook) {\n      return configs.hook(val, sourceElement, internalState, state).then(function (_val) {\n        return onUpdate(_val);\n      });\n    }\n\n    return onUpdate(val);\n  };\n\n  return React.createElement('table', {\n    className: 'PropertyToggle',\n    style: PropertyStyle.tableStyle\n  }, React.createElement('tbody', null, React.createElement('tr', null, React.createElement('td', {\n    style: PropertyStyle.firstTdStyle\n  }, React.createElement(FormLabel, null, configs.label)), React.createElement('td', null, React.createElement(Button, {\n    onClick: function onClick(e) {\n      return update(!value);\n    },\n    size: 'small'\n  }, configs.actionName)))));\n}\nPropertyToggle.propTypes = {\n  value: PropTypes.any.isRequired,\n  onUpdate: PropTypes.func.isRequired,\n  configs: PropTypes.object.isRequired,\n  sourceElement: PropTypes.object,\n  internalState: PropTypes.object,\n  state: PropTypes.object.isRequired\n};","map":{"version":3,"sources":["/home/srihari/Desktop/Sparkplug_PandemicSparks/grid/node_modules/react-planner/es/catalog/properties/property-toggle.js"],"names":["React","PropTypes","FormLabel","Button","PropertyStyle","PropertyToggle","_ref","value","onUpdate","configs","sourceElement","internalState","state","update","val","hook","then","_val","createElement","className","style","tableStyle","firstTdStyle","label","onClick","e","size","actionName","propTypes","any","isRequired","func","object"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,SAAT,EAAoBC,MAApB,QAAkC,+BAAlC;AACA,OAAOC,aAAP,MAA0B,yBAA1B;AAEA,eAAe,SAASC,cAAT,CAAwBC,IAAxB,EAA8B;AAC3C,MAAIC,KAAK,GAAGD,IAAI,CAACC,KAAjB;AAAA,MACIC,QAAQ,GAAGF,IAAI,CAACE,QADpB;AAAA,MAEIC,OAAO,GAAGH,IAAI,CAACG,OAFnB;AAAA,MAGIC,aAAa,GAAGJ,IAAI,CAACI,aAHzB;AAAA,MAIIC,aAAa,GAAGL,IAAI,CAACK,aAJzB;AAAA,MAKIC,KAAK,GAAGN,IAAI,CAACM,KALjB;;AAQA,MAAIC,MAAM,GAAG,SAASA,MAAT,CAAgBC,GAAhB,EAAqB;AAEhC,QAAIL,OAAO,CAACM,IAAZ,EAAkB;AAChB,aAAON,OAAO,CAACM,IAAR,CAAaD,GAAb,EAAkBJ,aAAlB,EAAiCC,aAAjC,EAAgDC,KAAhD,EAAuDI,IAAvD,CAA4D,UAAUC,IAAV,EAAgB;AACjF,eAAOT,QAAQ,CAACS,IAAD,CAAf;AACD,OAFM,CAAP;AAGD;;AAED,WAAOT,QAAQ,CAACM,GAAD,CAAf;AACD,GATD;;AAWA,SAAOd,KAAK,CAACkB,aAAN,CACL,OADK,EAEL;AAAEC,IAAAA,SAAS,EAAE,gBAAb;AAA+BC,IAAAA,KAAK,EAAEhB,aAAa,CAACiB;AAApD,GAFK,EAGLrB,KAAK,CAACkB,aAAN,CACE,OADF,EAEE,IAFF,EAGElB,KAAK,CAACkB,aAAN,CACE,IADF,EAEE,IAFF,EAGElB,KAAK,CAACkB,aAAN,CACE,IADF,EAEE;AAAEE,IAAAA,KAAK,EAAEhB,aAAa,CAACkB;AAAvB,GAFF,EAGEtB,KAAK,CAACkB,aAAN,CACEhB,SADF,EAEE,IAFF,EAGEO,OAAO,CAACc,KAHV,CAHF,CAHF,EAYEvB,KAAK,CAACkB,aAAN,CACE,IADF,EAEE,IAFF,EAGElB,KAAK,CAACkB,aAAN,CACEf,MADF,EAEE;AAAEqB,IAAAA,OAAO,EAAE,SAASA,OAAT,CAAiBC,CAAjB,EAAoB;AAC3B,aAAOZ,MAAM,CAAC,CAACN,KAAF,CAAb;AACD,KAFH;AAEKmB,IAAAA,IAAI,EAAE;AAFX,GAFF,EAKEjB,OAAO,CAACkB,UALV,CAHF,CAZF,CAHF,CAHK,CAAP;AAgCD;AAEDtB,cAAc,CAACuB,SAAf,GAA2B;AACzBrB,EAAAA,KAAK,EAAEN,SAAS,CAAC4B,GAAV,CAAcC,UADI;AAEzBtB,EAAAA,QAAQ,EAAEP,SAAS,CAAC8B,IAAV,CAAeD,UAFA;AAGzBrB,EAAAA,OAAO,EAAER,SAAS,CAAC+B,MAAV,CAAiBF,UAHD;AAIzBpB,EAAAA,aAAa,EAAET,SAAS,CAAC+B,MAJA;AAKzBrB,EAAAA,aAAa,EAAEV,SAAS,CAAC+B,MALA;AAMzBpB,EAAAA,KAAK,EAAEX,SAAS,CAAC+B,MAAV,CAAiBF;AANC,CAA3B","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FormLabel, Button } from '../../components/style/export';\nimport PropertyStyle from './shared-property-style';\n\nexport default function PropertyToggle(_ref) {\n  var value = _ref.value,\n      onUpdate = _ref.onUpdate,\n      configs = _ref.configs,\n      sourceElement = _ref.sourceElement,\n      internalState = _ref.internalState,\n      state = _ref.state;\n\n\n  var update = function update(val) {\n\n    if (configs.hook) {\n      return configs.hook(val, sourceElement, internalState, state).then(function (_val) {\n        return onUpdate(_val);\n      });\n    }\n\n    return onUpdate(val);\n  };\n\n  return React.createElement(\n    'table',\n    { className: 'PropertyToggle', style: PropertyStyle.tableStyle },\n    React.createElement(\n      'tbody',\n      null,\n      React.createElement(\n        'tr',\n        null,\n        React.createElement(\n          'td',\n          { style: PropertyStyle.firstTdStyle },\n          React.createElement(\n            FormLabel,\n            null,\n            configs.label\n          )\n        ),\n        React.createElement(\n          'td',\n          null,\n          React.createElement(\n            Button,\n            { onClick: function onClick(e) {\n                return update(!value);\n              }, size: 'small' },\n            configs.actionName\n          )\n        )\n      )\n    )\n  );\n}\n\nPropertyToggle.propTypes = {\n  value: PropTypes.any.isRequired,\n  onUpdate: PropTypes.func.isRequired,\n  configs: PropTypes.object.isRequired,\n  sourceElement: PropTypes.object,\n  internalState: PropTypes.object,\n  state: PropTypes.object.isRequired\n};"]},"metadata":{},"sourceType":"module"}