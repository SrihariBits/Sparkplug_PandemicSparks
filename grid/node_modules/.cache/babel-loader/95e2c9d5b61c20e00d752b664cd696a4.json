{"ast":null,"code":"module.exports = function (points, signed) {\n  var l = points.length;\n  var det = 0;\n  var isSigned = signed || false;\n  points = points.map(normalize);\n  if (points[0] != points[points.length - 1]) points = points.concat(points[0]);\n\n  for (var i = 0; i < l; i++) det += points[i].x * points[i + 1].y - points[i].y * points[i + 1].x;\n\n  if (isSigned) return det / 2;else return Math.abs(det) / 2;\n};\n\nfunction normalize(point) {\n  if (Array.isArray(point)) return {\n    x: point[0],\n    y: point[1]\n  };else return point;\n}","map":{"version":3,"sources":["/home/srihari/Desktop/Sparkplug_PandemicSparks/grid/node_modules/area-polygon/index.js"],"names":["module","exports","points","signed","l","length","det","isSigned","map","normalize","concat","i","x","y","Math","abs","point","Array","isArray"],"mappings":"AAAAA,MAAM,CAACC,OAAP,GAAiB,UAAUC,MAAV,EAAiBC,MAAjB,EAAyB;AACxC,MAAIC,CAAC,GAAGF,MAAM,CAACG,MAAf;AACA,MAAIC,GAAG,GAAG,CAAV;AACA,MAAIC,QAAQ,GAAGJ,MAAM,IAAI,KAAzB;AAEAD,EAAAA,MAAM,GAAGA,MAAM,CAACM,GAAP,CAAWC,SAAX,CAAT;AACA,MAAIP,MAAM,CAAC,CAAD,CAAN,IAAaA,MAAM,CAACA,MAAM,CAACG,MAAP,GAAe,CAAhB,CAAvB,EACEH,MAAM,GAAGA,MAAM,CAACQ,MAAP,CAAcR,MAAM,CAAC,CAAD,CAApB,CAAT;;AAEF,OAAK,IAAIS,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGP,CAApB,EAAuBO,CAAC,EAAxB,EACEL,GAAG,IAAIJ,MAAM,CAACS,CAAD,CAAN,CAAUC,CAAV,GAAcV,MAAM,CAACS,CAAC,GAAG,CAAL,CAAN,CAAcE,CAA5B,GACHX,MAAM,CAACS,CAAD,CAAN,CAAUE,CAAV,GAAcX,MAAM,CAACS,CAAC,GAAG,CAAL,CAAN,CAAcC,CADhC;;AAEF,MAAIL,QAAJ,EACE,OAAOD,GAAG,GAAG,CAAb,CADF,KAGE,OAAOQ,IAAI,CAACC,GAAL,CAAST,GAAT,IAAgB,CAAvB;AACH,CAhBD;;AAkBA,SAASG,SAAT,CAAmBO,KAAnB,EAA0B;AACxB,MAAIC,KAAK,CAACC,OAAN,CAAcF,KAAd,CAAJ,EACE,OAAO;AACLJ,IAAAA,CAAC,EAAEI,KAAK,CAAC,CAAD,CADH;AAELH,IAAAA,CAAC,EAAEG,KAAK,CAAC,CAAD;AAFH,GAAP,CADF,KAME,OAAOA,KAAP;AACH","sourcesContent":["module.exports = function (points,signed) {\n  var l = points.length\n  var det = 0\n  var isSigned = signed || false\n\n  points = points.map(normalize)\n  if (points[0] != points[points.length -1])  \n    points = points.concat(points[0])\n\n  for (var i = 0; i < l; i++)\n    det += points[i].x * points[i + 1].y\n      - points[i].y * points[i + 1].x\n  if (isSigned)\n    return det / 2\n  else\n    return Math.abs(det) / 2\n}\n\nfunction normalize(point) {\n  if (Array.isArray(point))\n    return {\n      x: point[0],\n      y: point[1]\n    }\n  else\n    return point\n}\n"]},"metadata":{},"sourceType":"script"}