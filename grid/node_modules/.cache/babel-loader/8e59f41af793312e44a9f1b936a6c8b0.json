{"ast":null,"code":"/** @description Return float fixed to desired precision\n *  @param {number} num Float to fix\n *  @param {number} precision Desired precision, or 6 if not specified\n *  @return {number}\n*/\nexport function toFixedFloat(num) {\n  var precision = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 6;\n\n  if (num && precision) {\n    return parseFloat(parseFloat(num).toFixed(precision));\n  }\n\n  return 0;\n}\n/** @description Return absolute value of a number\n *  @param {number} n Number of wich get value without sign\n *  @return {number}\n*/\n\nexport var fAbs = function fAbs(n) {\n  var x = n;\n  x < 0 && (x = ~x + 1);\n  return x;\n};\n/** @description Multiply two matrices\n *  @param {Array} m1 Matrix 1\n *  @param {Array} m2 Matrix 2\n *  @return {Array}\n*/\n\nexport var multiplyMatrices = function multiplyMatrices(m1, m2) {\n  var result = [];\n\n  for (var i = 0; i < m1.length; i++) {\n    result[i] = [];\n\n    for (var j = 0; j < m2[0].length; j++) {\n      var sum = 0;\n\n      for (var k = 0; k < m1[0].length; k++) {\n        sum += m1[i][k] * m2[k][j];\n      }\n\n      result[i][j] = sum;\n    }\n  }\n\n  return result;\n};","map":{"version":3,"sources":["/home/srihari/Desktop/Sparkplug_PandemicSparks/grid/node_modules/react-planner/es/utils/math.js"],"names":["toFixedFloat","num","precision","arguments","length","undefined","parseFloat","toFixed","fAbs","n","x","multiplyMatrices","m1","m2","result","i","j","sum","k"],"mappings":"AAAA;;;;;AAKA,OAAO,SAASA,YAAT,CAAsBC,GAAtB,EAA2B;AAChC,MAAIC,SAAS,GAAGC,SAAS,CAACC,MAAV,GAAmB,CAAnB,IAAwBD,SAAS,CAAC,CAAD,CAAT,KAAiBE,SAAzC,GAAqDF,SAAS,CAAC,CAAD,CAA9D,GAAoE,CAApF;;AAEA,MAAIF,GAAG,IAAIC,SAAX,EAAsB;AACpB,WAAOI,UAAU,CAACA,UAAU,CAACL,GAAD,CAAV,CAAgBM,OAAhB,CAAwBL,SAAxB,CAAD,CAAjB;AACD;;AACD,SAAO,CAAP;AACD;AAED;;;;;AAIA,OAAO,IAAIM,IAAI,GAAG,SAASA,IAAT,CAAcC,CAAd,EAAiB;AACjC,MAAIC,CAAC,GAAGD,CAAR;AAAUC,EAAAA,CAAC,GAAG,CAAJ,KAAUA,CAAC,GAAG,CAACA,CAAD,GAAK,CAAnB;AAAsB,SAAOA,CAAP;AACjC,CAFM;AAIP;;;;;;AAKA,OAAO,IAAIC,gBAAgB,GAAG,SAASA,gBAAT,CAA0BC,EAA1B,EAA8BC,EAA9B,EAAkC;AAC9D,MAAIC,MAAM,GAAG,EAAb;;AACA,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,EAAE,CAACR,MAAvB,EAA+BW,CAAC,EAAhC,EAAoC;AAClCD,IAAAA,MAAM,CAACC,CAAD,CAAN,GAAY,EAAZ;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,EAAE,CAAC,CAAD,CAAF,CAAMT,MAA1B,EAAkCY,CAAC,EAAnC,EAAuC;AACrC,UAAIC,GAAG,GAAG,CAAV;;AACA,WAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGN,EAAE,CAAC,CAAD,CAAF,CAAMR,MAA1B,EAAkCc,CAAC,EAAnC,EAAuC;AACrCD,QAAAA,GAAG,IAAIL,EAAE,CAACG,CAAD,CAAF,CAAMG,CAAN,IAAWL,EAAE,CAACK,CAAD,CAAF,CAAMF,CAAN,CAAlB;AACD;;AACDF,MAAAA,MAAM,CAACC,CAAD,CAAN,CAAUC,CAAV,IAAeC,GAAf;AACD;AACF;;AACD,SAAOH,MAAP;AACD,CAbM","sourcesContent":["/** @description Return float fixed to desired precision\n *  @param {number} num Float to fix\n *  @param {number} precision Desired precision, or 6 if not specified\n *  @return {number}\n*/\nexport function toFixedFloat(num) {\n  var precision = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 6;\n\n  if (num && precision) {\n    return parseFloat(parseFloat(num).toFixed(precision));\n  }\n  return 0;\n}\n\n/** @description Return absolute value of a number\n *  @param {number} n Number of wich get value without sign\n *  @return {number}\n*/\nexport var fAbs = function fAbs(n) {\n  var x = n;x < 0 && (x = ~x + 1);return x;\n};\n\n/** @description Multiply two matrices\n *  @param {Array} m1 Matrix 1\n *  @param {Array} m2 Matrix 2\n *  @return {Array}\n*/\nexport var multiplyMatrices = function multiplyMatrices(m1, m2) {\n  var result = [];\n  for (var i = 0; i < m1.length; i++) {\n    result[i] = [];\n    for (var j = 0; j < m2[0].length; j++) {\n      var sum = 0;\n      for (var k = 0; k < m1[0].length; k++) {\n        sum += m1[i][k] * m2[k][j];\n      }\n      result[i][j] = sum;\n    }\n  }\n  return result;\n};"]},"metadata":{},"sourceType":"module"}