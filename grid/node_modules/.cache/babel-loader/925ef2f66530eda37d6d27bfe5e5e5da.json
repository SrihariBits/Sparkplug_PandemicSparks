{"ast":null,"code":"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FaFolderOpen as IconLoad } from 'react-icons/fa';\nimport ToolbarButton from './toolbar-button';\nimport { browserUpload } from '../../utils/browser';\nexport default function ToolbarLoadButton(_ref, _ref2) {\n  var state = _ref.state;\n  var translator = _ref2.translator,\n      projectActions = _ref2.projectActions;\n\n  var loadProjectFromFile = function loadProjectFromFile(event) {\n    event.preventDefault();\n    fetch('http://192.168.43.115:5000/warehouseLoad/', {\n      method: \"get\",\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => res.json()).then(data => {\n      var dat = JSON.parse(data);\n\n      for (const property in dat.layers) {\n        for (const pty in dat.layers[property]) {\n          console.log(dat.layers[property][pty]);\n        }\n      }\n\n      projectActions.loadProject(JSON.parse(data));\n    });\n  };\n\n  return React.createElement(ToolbarButton, {\n    active: false,\n    tooltip: translator.t(\"Load project\"),\n    onClick: loadProjectFromFile\n  }, React.createElement(IconLoad, null));\n}\nToolbarLoadButton.propTypes = {\n  state: PropTypes.object.isRequired\n};\nToolbarLoadButton.contextTypes = {\n  projectActions: PropTypes.object.isRequired,\n  translator: PropTypes.object.isRequired\n};","map":{"version":3,"sources":["/home/srihari/Desktop/Sparkplug_PandemicSparks/grid/node_modules/react-planner/es/components/toolbar/toolbar-load-button.js"],"names":["React","PropTypes","FaFolderOpen","IconLoad","ToolbarButton","browserUpload","ToolbarLoadButton","_ref","_ref2","state","translator","projectActions","loadProjectFromFile","event","preventDefault","fetch","method","headers","then","res","json","data","dat","JSON","parse","property","layers","pty","console","log","loadProject","createElement","active","tooltip","t","onClick","propTypes","object","isRequired","contextTypes"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,YAAY,IAAIC,QAAzB,QAAyC,gBAAzC;AACA,OAAOC,aAAP,MAA0B,kBAA1B;AACA,SAASC,aAAT,QAA8B,qBAA9B;AAEA,eAAe,SAASC,iBAAT,CAA2BC,IAA3B,EAAiCC,KAAjC,EAAwC;AACrD,MAAIC,KAAK,GAAGF,IAAI,CAACE,KAAjB;AACA,MAAIC,UAAU,GAAGF,KAAK,CAACE,UAAvB;AAAA,MACIC,cAAc,GAAGH,KAAK,CAACG,cAD3B;;AAIA,MAAIC,mBAAmB,GAAG,SAASA,mBAAT,CAA6BC,KAA7B,EAAoC;AAC5DA,IAAAA,KAAK,CAACC,cAAN;AACAC,IAAAA,KAAK,CAAC,2CAAD,EAA8C;AAC3CC,MAAAA,MAAM,EAAE,KADmC;AAE3CC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB;AAFkC,KAA9C,CAAL,CAIKC,IAJL,CAIUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EAJjB,EAKKF,IALL,CAKUG,IAAI,IAAI;AACV,UAAIC,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWH,IAAX,CAAV;;AACA,WAAI,MAAMI,QAAV,IAAsBH,GAAG,CAACI,MAA1B,EACA;AACE,aAAI,MAAMC,GAAV,IAAiBL,GAAG,CAACI,MAAJ,CAAWD,QAAX,CAAjB,EACA;AACEG,UAAAA,OAAO,CAACC,GAAR,CAAYP,GAAG,CAACI,MAAJ,CAAWD,QAAX,EAAqBE,GAArB,CAAZ;AACD;AACF;;AACDhB,MAAAA,cAAc,CAACmB,WAAf,CAA2BP,IAAI,CAACC,KAAL,CAAWH,IAAX,CAA3B;AACH,KAfL;AAgBD,GAlBD;;AAoBA,SAAOrB,KAAK,CAAC+B,aAAN,CACL3B,aADK,EAEL;AAAE4B,IAAAA,MAAM,EAAE,KAAV;AAAiBC,IAAAA,OAAO,EAAEvB,UAAU,CAACwB,CAAX,CAAa,cAAb,CAA1B;AAAwDC,IAAAA,OAAO,EAAEvB;AAAjE,GAFK,EAGLZ,KAAK,CAAC+B,aAAN,CAAoB5B,QAApB,EAA8B,IAA9B,CAHK,CAAP;AAKD;AAEDG,iBAAiB,CAAC8B,SAAlB,GAA8B;AAC5B3B,EAAAA,KAAK,EAAER,SAAS,CAACoC,MAAV,CAAiBC;AADI,CAA9B;AAIAhC,iBAAiB,CAACiC,YAAlB,GAAiC;AAC/B5B,EAAAA,cAAc,EAAEV,SAAS,CAACoC,MAAV,CAAiBC,UADF;AAE/B5B,EAAAA,UAAU,EAAET,SAAS,CAACoC,MAAV,CAAiBC;AAFE,CAAjC","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { FaFolderOpen as IconLoad } from 'react-icons/fa';\nimport ToolbarButton from './toolbar-button';\nimport { browserUpload } from '../../utils/browser';\n\nexport default function ToolbarLoadButton(_ref, _ref2) {\n  var state = _ref.state;\n  var translator = _ref2.translator,\n      projectActions = _ref2.projectActions;\n\n\n  var loadProjectFromFile = function loadProjectFromFile(event) {\n    event.preventDefault();\n    fetch('http://192.168.43.115:5000/warehouseLoad/', {\n            method: \"get\",\n            headers: { 'Content-Type': 'application/json' }\n        })\n        .then(res => res.json())\n        .then(data => {\n            var dat = JSON.parse(data);\n            for(const property in dat.layers)\n            {\n              for(const pty in dat.layers[property])\n              {\n                console.log(dat.layers[property][pty]);\n              }\n            }\n            projectActions.loadProject(JSON.parse(data));\n        });\n  };\n\n  return React.createElement(\n    ToolbarButton,\n    { active: false, tooltip: translator.t(\"Load project\"), onClick: loadProjectFromFile },\n    React.createElement(IconLoad, null)\n  );\n}\n\nToolbarLoadButton.propTypes = {\n  state: PropTypes.object.isRequired\n};\n\nToolbarLoadButton.contextTypes = {\n  projectActions: PropTypes.object.isRequired,\n  translator: PropTypes.object.isRequired\n};"]},"metadata":{},"sourceType":"module"}