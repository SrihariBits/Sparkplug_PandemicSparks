{"ast":null,"code":"var _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nimport { PropertyColor, PropertyEnum, PropertyString, PropertyNumber, PropertyLengthMeasure, PropertyToggle, PropertyCheckbox, PropertyHidden, PropertyReadOnly } from './properties/export';\nimport { UNIT_CENTIMETER } from '../constants';\n\nvar Catalog = function () {\n  function Catalog() {\n    var unit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : UNIT_CENTIMETER;\n\n    _classCallCheck(this, Catalog);\n\n    this.elements = {};\n    this.categories = {\n      root: {\n        name: 'root',\n        label: '/',\n        elements: [],\n        categories: []\n      }\n    };\n    this.propertyTypes = {};\n    this.unit = unit;\n    this.registerMultiplePropertyType([['color', PropertyColor, PropertyColor], ['enum', PropertyEnum, PropertyEnum], ['string', PropertyString, PropertyString], ['number', PropertyNumber, PropertyNumber], ['length-measure', PropertyLengthMeasure, PropertyLengthMeasure], ['toggle', PropertyToggle, PropertyToggle], ['checkbox', PropertyCheckbox, PropertyCheckbox], ['hidden', PropertyHidden, PropertyHidden], ['read-only', PropertyReadOnly, PropertyReadOnly]]);\n  }\n  /** @description Get catalog's element\n   *  @param {string} type Element's type\n   *  @return {?object} Element\n  */\n\n\n  _createClass(Catalog, [{\n    key: 'getElement',\n    value: function getElement(type) {\n      if (this.hasElement(type)) {\n        return this.elements[type];\n      }\n\n      throw new Error('Element ' + type + ' does not exist in catalog');\n    }\n    /** @description Get catalog category\n     *  @param {string} categoryName Name of category\n     *  @return {object} Category\n    */\n\n  }, {\n    key: 'getCategory',\n    value: function getCategory(categoryName) {\n      if (this.hasCategory(categoryName)) {\n        return this.categories[categoryName];\n      }\n\n      throw new Error('Category ' + categoryName + ' does not exist in catalog');\n    }\n    /** @description Return type of a specfied property\n     *  @param {string} type Property type\n     *  @return {?object} Property\n    */\n\n  }, {\n    key: 'getPropertyType',\n    value: function getPropertyType(type) {\n      if (this.propertyTypes.hasOwnProperty(type)) {\n        return this.propertyTypes[type];\n      }\n\n      throw new Error('Element ' + type + ' does not exist in catalog');\n    }\n    /** @description Register a new element\n     *  @param {object} json Element structure\n     *  @return {void}\n    */\n\n  }, {\n    key: 'registerElement',\n    value: function registerElement(json) {\n      json.properties = json.properties || {};\n\n      if (this.validateElement(json)) {\n        this.elements[json.name] = json;\n        this.categories.root.elements.push(this.elements[json.name]);\n      }\n    }\n    /** @description Register multiple elements\n     *  @param {array} [elementArray] Array of elements\n     *  @return {void}\n    */\n\n  }, {\n    key: 'registerMultipleElements',\n    value: function registerMultipleElements(elementArray) {\n      var _this = this;\n\n      elementArray.forEach(function (el) {\n        return _this.registerElement(el);\n      });\n    }\n    /** @description Register a new property\n     *  @param {string} type Type of property\n     *  @param {object} Viewer Property viewer component\n     *  @param {object} Editor Property editor component\n     *  @return {void}\n    */\n\n  }, {\n    key: 'registerPropertyType',\n    value: function registerPropertyType(type, Viewer, Editor) {\n      this.propertyTypes[type] = {\n        type: type,\n        Viewer: Viewer,\n        Editor: Editor\n      };\n    }\n    /** @description Register multiple property\n     *  @param {array} propertyTypeArray Array of properties\n     *  @return {void}\n    */\n\n  }, {\n    key: 'registerMultiplePropertyType',\n    value: function registerMultiplePropertyType(propertyTypeArray) {\n      var _this2 = this;\n\n      propertyTypeArray.forEach(function (el) {\n        return _this2.registerPropertyType.apply(_this2, _toConsumableArray(el));\n      });\n    }\n    /** @description Validate an element\n     *  @param {object} json Element's structure\n     *  @return {?boolean}\n    */\n\n  }, {\n    key: 'validateElement',\n    value: function validateElement(json) {\n      if (!json.hasOwnProperty('name')) throw new Error('Element not valid');\n      var name = json.name;\n      if (!json.hasOwnProperty('prototype')) throw new Error('Element ' + name + ' doesn\\'t have prototype');\n      if (!json.hasOwnProperty('info')) throw new Error('Element ' + name + ' doesn\\'t have info');\n      if (!json.info.hasOwnProperty('tag')) throw new Error('Element ' + name + ' doesn\\'t have tag');\n      if (!json.info.hasOwnProperty('description')) throw new Error('Element ' + name + ' doesn\\'t have description');\n      if (!json.info.hasOwnProperty('image')) throw new Error('Element ' + name + ' doesn\\'t have image');\n      if (!json.hasOwnProperty('render2D')) throw new Error('Element ' + name + ' doesn\\'t have render2D handler');\n      if (!json.hasOwnProperty('render3D')) throw new Error('Element ' + name + ' doesn\\'t have render3D handler');\n      if (!json.hasOwnProperty('properties')) throw new Error('Element ' + name + ' doesn\\'t have properties');\n\n      for (var propertyName in json.properties) {\n        var propertyConfigs = json.properties[propertyName];\n        if (!propertyConfigs.hasOwnProperty('type')) throw new Error('Element ' + name + ', Property ' + propertyName + ' doesn\\'t have type');\n        if (!propertyConfigs.hasOwnProperty('defaultValue')) throw new Error('Element ' + name + ', Property ' + propertyName + ' doesn\\'t have defaultValue');\n      }\n\n      return true;\n    }\n    /** @description Check if catalog has element\n     *  @param {string} type Element's type\n     *  @return {boolean}\n    */\n\n  }, {\n    key: 'hasElement',\n    value: function hasElement(type) {\n      return this.elements.hasOwnProperty(type);\n    }\n    /** @description Register a new category\n     *  @param {string} name Name of category\n     *  @param {string} label Label of category\n     *  @param {array} [childs] Category's childs\n     *  @return {?object} Registered category\n    */\n\n  }, {\n    key: 'registerCategory',\n    value: function registerCategory(name, label, childs) {\n      var _this3 = this;\n\n      if (this.validateCategory(name, label)) {\n        this.categories[name] = {\n          name: name,\n          label: label,\n          categories: [],\n          elements: []\n        };\n        this.categories.root.categories.push(this.categories[name]);\n\n        if (childs && childs.length) {\n          childs.forEach(function (el) {\n            return _this3.addToCategory(name, el);\n          });\n        }\n\n        return this.categories[name];\n      }\n\n      return null;\n    }\n    /** @description Add an element to the specified category\n     *  @param {string} name Name of category\n     *  @param {object} child Element's structure\n     *  @return {?void}\n    */\n\n  }, {\n    key: 'addToCategory',\n    value: function addToCategory(name, child) {\n      if (this.hasElement(child.name)) {\n        this.categories[name].elements.push(child);\n        this.categories.root.elements.splice(this.categories.root.elements.indexOf(child), 1);\n      } else if (this.hasCategory(child.name)) {\n        this.categories[name].categories.push(child);\n        this.categories.root.categories.splice(this.categories.root.categories.indexOf(child), 1);\n      } else {\n        throw new Error('child ' + child + ' is either category nor element');\n      }\n    }\n    /** @description Check if category contain element\n     *  @param {string} categoryName Name of category\n     *  @param {string} elementName Name of element\n     *  @return {boolean}\n    */\n\n  }, {\n    key: 'categoryHasElement',\n    value: function categoryHasElement(categoryName, elementName) {\n      return this.hasCategory(categoryName) && this.categories[categoryName].elements.some(function (el) {\n        return el.name === elementName;\n      });\n    }\n    /** @description Validate a category\n     *  @param {string} name Name of category\n     *  @param {string} label Label of category\n     *  @return {?boolean}\n    */\n\n  }, {\n    key: 'validateCategory',\n    value: function validateCategory(name, label) {\n      if (!name) {\n        throw new Error('Category has undefined name');\n      }\n\n      if (name === '') {\n        throw new Error('Category has empty name');\n      }\n\n      if (this.hasCategory(name)) {\n        throw new Error('Category has already been registered');\n      }\n\n      return true;\n    }\n    /** @description Verify if catalog already contain a category with specified name\n     *  @param {string} categoryName Name of category\n     *  @return {boolean}\n    */\n\n  }, {\n    key: 'hasCategory',\n    value: function hasCategory(categoryName) {\n      return this.categories.hasOwnProperty(categoryName);\n    }\n  }]);\n\n  return Catalog;\n}();\n\nexport default Catalog;","map":{"version":3,"sources":["/home/srihari/Desktop/Sparkplug_PandemicSparks/grid/node_modules/react-planner/es/catalog/catalog.js"],"names":["_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","prototype","_toConsumableArray","arr","Array","isArray","arr2","from","_classCallCheck","instance","TypeError","PropertyColor","PropertyEnum","PropertyString","PropertyNumber","PropertyLengthMeasure","PropertyToggle","PropertyCheckbox","PropertyHidden","PropertyReadOnly","UNIT_CENTIMETER","Catalog","unit","arguments","undefined","elements","categories","root","name","label","propertyTypes","registerMultiplePropertyType","value","getElement","type","hasElement","Error","getCategory","categoryName","hasCategory","getPropertyType","hasOwnProperty","registerElement","json","properties","validateElement","push","registerMultipleElements","elementArray","_this","forEach","el","registerPropertyType","Viewer","Editor","propertyTypeArray","_this2","apply","info","propertyName","propertyConfigs","registerCategory","childs","_this3","validateCategory","addToCategory","child","splice","indexOf","categoryHasElement","elementName","some"],"mappings":"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","sourcesContent":["var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nimport { PropertyColor, PropertyEnum, PropertyString, PropertyNumber, PropertyLengthMeasure, PropertyToggle, PropertyCheckbox, PropertyHidden, PropertyReadOnly } from './properties/export';\n\nimport { UNIT_CENTIMETER } from '../constants';\n\nvar Catalog = function () {\n  function Catalog() {\n    var unit = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : UNIT_CENTIMETER;\n\n    _classCallCheck(this, Catalog);\n\n    this.elements = {};\n    this.categories = { root: { name: 'root', label: '/', elements: [], categories: [] } };\n    this.propertyTypes = {};\n    this.unit = unit;\n\n    this.registerMultiplePropertyType([['color', PropertyColor, PropertyColor], ['enum', PropertyEnum, PropertyEnum], ['string', PropertyString, PropertyString], ['number', PropertyNumber, PropertyNumber], ['length-measure', PropertyLengthMeasure, PropertyLengthMeasure], ['toggle', PropertyToggle, PropertyToggle], ['checkbox', PropertyCheckbox, PropertyCheckbox], ['hidden', PropertyHidden, PropertyHidden], ['read-only', PropertyReadOnly, PropertyReadOnly]]);\n  }\n\n  /** @description Get catalog's element\n   *  @param {string} type Element's type\n   *  @return {?object} Element\n  */\n\n\n  _createClass(Catalog, [{\n    key: 'getElement',\n    value: function getElement(type) {\n      if (this.hasElement(type)) {\n        return this.elements[type];\n      }\n      throw new Error('Element ' + type + ' does not exist in catalog');\n    }\n\n    /** @description Get catalog category\n     *  @param {string} categoryName Name of category\n     *  @return {object} Category\n    */\n\n  }, {\n    key: 'getCategory',\n    value: function getCategory(categoryName) {\n      if (this.hasCategory(categoryName)) {\n        return this.categories[categoryName];\n      }\n      throw new Error('Category ' + categoryName + ' does not exist in catalog');\n    }\n\n    /** @description Return type of a specfied property\n     *  @param {string} type Property type\n     *  @return {?object} Property\n    */\n\n  }, {\n    key: 'getPropertyType',\n    value: function getPropertyType(type) {\n      if (this.propertyTypes.hasOwnProperty(type)) {\n        return this.propertyTypes[type];\n      }\n      throw new Error('Element ' + type + ' does not exist in catalog');\n    }\n\n    /** @description Register a new element\n     *  @param {object} json Element structure\n     *  @return {void}\n    */\n\n  }, {\n    key: 'registerElement',\n    value: function registerElement(json) {\n      json.properties = json.properties || {};\n      if (this.validateElement(json)) {\n        this.elements[json.name] = json;\n        this.categories.root.elements.push(this.elements[json.name]);\n      }\n    }\n\n    /** @description Register multiple elements\n     *  @param {array} [elementArray] Array of elements\n     *  @return {void}\n    */\n\n  }, {\n    key: 'registerMultipleElements',\n    value: function registerMultipleElements(elementArray) {\n      var _this = this;\n\n      elementArray.forEach(function (el) {\n        return _this.registerElement(el);\n      });\n    }\n\n    /** @description Register a new property\n     *  @param {string} type Type of property\n     *  @param {object} Viewer Property viewer component\n     *  @param {object} Editor Property editor component\n     *  @return {void}\n    */\n\n  }, {\n    key: 'registerPropertyType',\n    value: function registerPropertyType(type, Viewer, Editor) {\n      this.propertyTypes[type] = { type: type, Viewer: Viewer, Editor: Editor };\n    }\n\n    /** @description Register multiple property\n     *  @param {array} propertyTypeArray Array of properties\n     *  @return {void}\n    */\n\n  }, {\n    key: 'registerMultiplePropertyType',\n    value: function registerMultiplePropertyType(propertyTypeArray) {\n      var _this2 = this;\n\n      propertyTypeArray.forEach(function (el) {\n        return _this2.registerPropertyType.apply(_this2, _toConsumableArray(el));\n      });\n    }\n\n    /** @description Validate an element\n     *  @param {object} json Element's structure\n     *  @return {?boolean}\n    */\n\n  }, {\n    key: 'validateElement',\n    value: function validateElement(json) {\n      if (!json.hasOwnProperty('name')) throw new Error('Element not valid');\n\n      var name = json.name;\n      if (!json.hasOwnProperty('prototype')) throw new Error('Element ' + name + ' doesn\\'t have prototype');\n\n      if (!json.hasOwnProperty('info')) throw new Error('Element ' + name + ' doesn\\'t have info');\n      if (!json.info.hasOwnProperty('tag')) throw new Error('Element ' + name + ' doesn\\'t have tag');\n      if (!json.info.hasOwnProperty('description')) throw new Error('Element ' + name + ' doesn\\'t have description');\n      if (!json.info.hasOwnProperty('image')) throw new Error('Element ' + name + ' doesn\\'t have image');\n\n      if (!json.hasOwnProperty('render2D')) throw new Error('Element ' + name + ' doesn\\'t have render2D handler');\n      if (!json.hasOwnProperty('render3D')) throw new Error('Element ' + name + ' doesn\\'t have render3D handler');\n      if (!json.hasOwnProperty('properties')) throw new Error('Element ' + name + ' doesn\\'t have properties');\n\n      for (var propertyName in json.properties) {\n        var propertyConfigs = json.properties[propertyName];\n        if (!propertyConfigs.hasOwnProperty('type')) throw new Error('Element ' + name + ', Property ' + propertyName + ' doesn\\'t have type');\n        if (!propertyConfigs.hasOwnProperty('defaultValue')) throw new Error('Element ' + name + ', Property ' + propertyName + ' doesn\\'t have defaultValue');\n      }\n\n      return true;\n    }\n\n    /** @description Check if catalog has element\n     *  @param {string} type Element's type\n     *  @return {boolean}\n    */\n\n  }, {\n    key: 'hasElement',\n    value: function hasElement(type) {\n      return this.elements.hasOwnProperty(type);\n    }\n\n    /** @description Register a new category\n     *  @param {string} name Name of category\n     *  @param {string} label Label of category\n     *  @param {array} [childs] Category's childs\n     *  @return {?object} Registered category\n    */\n\n  }, {\n    key: 'registerCategory',\n    value: function registerCategory(name, label, childs) {\n      var _this3 = this;\n\n      if (this.validateCategory(name, label)) {\n        this.categories[name] = { name: name, label: label, categories: [], elements: [] };\n        this.categories.root.categories.push(this.categories[name]);\n\n        if (childs && childs.length) {\n          childs.forEach(function (el) {\n            return _this3.addToCategory(name, el);\n          });\n        }\n\n        return this.categories[name];\n      }\n      return null;\n    }\n\n    /** @description Add an element to the specified category\n     *  @param {string} name Name of category\n     *  @param {object} child Element's structure\n     *  @return {?void}\n    */\n\n  }, {\n    key: 'addToCategory',\n    value: function addToCategory(name, child) {\n      if (this.hasElement(child.name)) {\n        this.categories[name].elements.push(child);\n        this.categories.root.elements.splice(this.categories.root.elements.indexOf(child), 1);\n      } else if (this.hasCategory(child.name)) {\n        this.categories[name].categories.push(child);\n        this.categories.root.categories.splice(this.categories.root.categories.indexOf(child), 1);\n      } else {\n        throw new Error('child ' + child + ' is either category nor element');\n      }\n    }\n\n    /** @description Check if category contain element\n     *  @param {string} categoryName Name of category\n     *  @param {string} elementName Name of element\n     *  @return {boolean}\n    */\n\n  }, {\n    key: 'categoryHasElement',\n    value: function categoryHasElement(categoryName, elementName) {\n      return this.hasCategory(categoryName) && this.categories[categoryName].elements.some(function (el) {\n        return el.name === elementName;\n      });\n    }\n\n    /** @description Validate a category\n     *  @param {string} name Name of category\n     *  @param {string} label Label of category\n     *  @return {?boolean}\n    */\n\n  }, {\n    key: 'validateCategory',\n    value: function validateCategory(name, label) {\n      if (!name) {\n        throw new Error('Category has undefined name');\n      }\n      if (name === '') {\n        throw new Error('Category has empty name');\n      }\n      if (this.hasCategory(name)) {\n        throw new Error('Category has already been registered');\n      }\n\n      return true;\n    }\n\n    /** @description Verify if catalog already contain a category with specified name\n     *  @param {string} categoryName Name of category\n     *  @return {boolean}\n    */\n\n  }, {\n    key: 'hasCategory',\n    value: function hasCategory(categoryName) {\n      return this.categories.hasOwnProperty(categoryName);\n    }\n  }]);\n\n  return Catalog;\n}();\n\nexport default Catalog;"]},"metadata":{},"sourceType":"module"}