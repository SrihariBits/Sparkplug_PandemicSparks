{"ast":null,"code":"export function browserDownload(json) {\n  /*let output=JSON.parse(JSON.stringify(json));\n  console.log(output);\n  fetch('http://192.168.43.115:5000/warehouseSave', {\n            method: \"post\",\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                data:output\n            })\n        })*/\n  let fileOutputLink = document.createElement('a');\n  let filename = 'output' + Date.now() + '.json';\n  filename = window.prompt('Insert output filename', filename);\n  if (!filename) return;\n  let output = JSON.stringify(json);\n  console.log(output);\n  let data = new Blob([output], {\n    type: 'text/plain'\n  });\n  console.log(data);\n  let url = window.URL.createObjectURL(data);\n  console.log(url);\n  fileOutputLink.setAttribute('download', filename);\n  fileOutputLink.href = url;\n  fileOutputLink.style.display = 'none';\n  document.body.appendChild(fileOutputLink);\n  fileOutputLink.click();\n  document.body.removeChild(fileOutputLink);\n}\n/*export function browserUpload() {\n  return new Promise(function (resolve, reject) {\n\n    var fileInput = document.createElement('input');\n    fileInput.type = 'file';\n\n    fileInput.addEventListener('change', function (event) {\n      var file = event.target.files[0];\n      var reader = new FileReader();\n      reader.addEventListener('load', function (fileEvent) {\n        var loadedData = fileEvent.target.result;\n        resolve(loadedData);\n      });\n      reader.readAsText(file);\n    });\n\n    fileInput.click();\n  });\n}*/","map":{"version":3,"sources":["/home/srihari/Desktop/Sparkplug_PandemicSparks/grid/node_modules/react-planner/es/utils/browser.js"],"names":["browserDownload","json","fileOutputLink","document","createElement","filename","Date","now","window","prompt","output","JSON","stringify","console","log","data","Blob","type","url","URL","createObjectURL","setAttribute","href","style","display","body","appendChild","click","removeChild"],"mappings":"AAAA,OAAO,SAASA,eAAT,CAAyBC,IAAzB,EAA+B;AACpC;;;;;;;;;AASA,MAAIC,cAAc,GAAGC,QAAQ,CAACC,aAAT,CAAuB,GAAvB,CAArB;AAEA,MAAIC,QAAQ,GAAG,WAAWC,IAAI,CAACC,GAAL,EAAX,GAAwB,OAAvC;AACAF,EAAAA,QAAQ,GAAGG,MAAM,CAACC,MAAP,CAAc,wBAAd,EAAwCJ,QAAxC,CAAX;AACA,MAAI,CAACA,QAAL,EAAe;AAEf,MAAIK,MAAM,GAAGC,IAAI,CAACC,SAAL,CAAeX,IAAf,CAAb;AACAY,EAAAA,OAAO,CAACC,GAAR,CAAYJ,MAAZ;AACA,MAAIK,IAAI,GAAG,IAAIC,IAAJ,CAAS,CAACN,MAAD,CAAT,EAAmB;AAACO,IAAAA,IAAI,EAAE;AAAP,GAAnB,CAAX;AACAJ,EAAAA,OAAO,CAACC,GAAR,CAAYC,IAAZ;AACA,MAAIG,GAAG,GAAGV,MAAM,CAACW,GAAP,CAAWC,eAAX,CAA2BL,IAA3B,CAAV;AACAF,EAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ;AACAhB,EAAAA,cAAc,CAACmB,YAAf,CAA4B,UAA5B,EAAwChB,QAAxC;AACAH,EAAAA,cAAc,CAACoB,IAAf,GAAsBJ,GAAtB;AACAhB,EAAAA,cAAc,CAACqB,KAAf,CAAqBC,OAArB,GAA+B,MAA/B;AACArB,EAAAA,QAAQ,CAACsB,IAAT,CAAcC,WAAd,CAA0BxB,cAA1B;AACAA,EAAAA,cAAc,CAACyB,KAAf;AACAxB,EAAAA,QAAQ,CAACsB,IAAT,CAAcG,WAAd,CAA0B1B,cAA1B;AACD;AAED","sourcesContent":["export function browserDownload(json) {\n  /*let output=JSON.parse(JSON.stringify(json));\n  console.log(output);\n  fetch('http://192.168.43.115:5000/warehouseSave', {\n            method: \"post\",\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({\n                data:output\n            })\n        })*/\n  let fileOutputLink = document.createElement('a');\n\n  let filename = 'output' + Date.now() + '.json';\n  filename = window.prompt('Insert output filename', filename);\n  if (!filename) return;\n\n  let output = JSON.stringify(json);\n  console.log(output);\n  let data = new Blob([output], {type: 'text/plain'});\n  console.log(data);\n  let url = window.URL.createObjectURL(data);\n  console.log(url);\n  fileOutputLink.setAttribute('download', filename);\n  fileOutputLink.href = url;\n  fileOutputLink.style.display = 'none';\n  document.body.appendChild(fileOutputLink);\n  fileOutputLink.click();\n  document.body.removeChild(fileOutputLink);\n}\n\n/*export function browserUpload() {\n  return new Promise(function (resolve, reject) {\n\n    var fileInput = document.createElement('input');\n    fileInput.type = 'file';\n\n    fileInput.addEventListener('change', function (event) {\n      var file = event.target.files[0];\n      var reader = new FileReader();\n      reader.addEventListener('load', function (fileEvent) {\n        var loadedData = fileEvent.target.result;\n        resolve(loadedData);\n      });\n      reader.readAsText(file);\n    });\n\n    fileInput.click();\n  });\n}*/"]},"metadata":{},"sourceType":"module"}