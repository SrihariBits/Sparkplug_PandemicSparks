{"ast":null,"code":"import React from 'react';\nimport PropTypes from 'prop-types';\nimport { GeometryUtils } from '../../utils/export';\nimport Ruler from './ruler';\nexport default function Line(_ref) {\n  var line = _ref.line,\n      layer = _ref.layer,\n      scene = _ref.scene,\n      catalog = _ref.catalog;\n  var vertex0 = layer.vertices.get(line.vertices.get(0));\n  var vertex1 = layer.vertices.get(line.vertices.get(1));\n  if (vertex0.id === vertex1.id || GeometryUtils.samePoints(vertex0, vertex1)) return null; //avoid 0-length lines\n\n  var x1 = vertex0.x,\n      y1 = vertex0.y;\n  var x2 = vertex1.x,\n      y2 = vertex1.y;\n\n  if (x1 > x2) {\n    x1 = vertex1.x;\n    y1 = vertex1.y;\n    x2 = vertex0.x;\n    y2 = vertex0.y;\n  }\n\n  var length = GeometryUtils.pointsDistance(x1, y1, x2, y2);\n  var angle = GeometryUtils.angleBetweenTwoPointsAndOrigin(x1, y1, x2, y2);\n  var renderedHoles = line.holes.map(function (holeID) {\n    var hole = layer.holes.get(holeID);\n    var startAt = length * hole.offset;\n    var renderedHole = catalog.getElement(hole.type).render2D(hole, layer, scene);\n    return React.createElement('g', {\n      key: holeID,\n      transform: 'translate(' + startAt + ', 0)',\n      'data-element-root': true,\n      'data-prototype': hole.prototype,\n      'data-id': hole.id,\n      'data-selected': hole.selected,\n      'data-layer': layer.id\n    }, renderedHole);\n  });\n  var thickness = line.getIn(['properties', 'thickness', 'length']);\n  var half_thickness = thickness / 2;\n  var renderedLine = catalog.getElement(line.type).render2D(line, layer);\n  var renderedRuler = line.selected ? React.createElement(Ruler, {\n    unit: scene.unit,\n    length: length,\n    transform: 'translate(0, ' + (half_thickness + 10) + ' )'\n  }) : null;\n  return React.createElement('g', {\n    transform: 'translate(' + x1 + ', ' + y1 + ') rotate(' + angle + ', 0, 0)',\n    'data-element-root': true,\n    'data-prototype': line.prototype,\n    'data-id': line.id,\n    'data-selected': line.selected,\n    'data-layer': layer.id,\n    style: line.selected ? {\n      cursor: 'move'\n    } : {}\n  }, renderedRuler, renderedLine, renderedHoles);\n}\nLine.propTypes = {\n  line: PropTypes.object.isRequired,\n  layer: PropTypes.object.isRequired,\n  scene: PropTypes.object.isRequired,\n  catalog: PropTypes.object.isRequired\n};","map":{"version":3,"sources":["/home/srihari/Desktop/Sparkplug_PandemicSparks/grid/node_modules/react-planner/es/components/viewer2d/line.js"],"names":["React","PropTypes","GeometryUtils","Ruler","Line","_ref","line","layer","scene","catalog","vertex0","vertices","get","vertex1","id","samePoints","x1","x","y1","y","x2","y2","length","pointsDistance","angle","angleBetweenTwoPointsAndOrigin","renderedHoles","holes","map","holeID","hole","startAt","offset","renderedHole","getElement","type","render2D","createElement","key","transform","prototype","selected","thickness","getIn","half_thickness","renderedLine","renderedRuler","unit","style","cursor","propTypes","object","isRequired"],"mappings":"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","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { GeometryUtils } from '../../utils/export';\nimport Ruler from './ruler';\n\nexport default function Line(_ref) {\n  var line = _ref.line,\n      layer = _ref.layer,\n      scene = _ref.scene,\n      catalog = _ref.catalog;\n\n\n  var vertex0 = layer.vertices.get(line.vertices.get(0));\n  var vertex1 = layer.vertices.get(line.vertices.get(1));\n\n  if (vertex0.id === vertex1.id || GeometryUtils.samePoints(vertex0, vertex1)) return null; //avoid 0-length lines\n\n  var x1 = vertex0.x,\n      y1 = vertex0.y;\n  var x2 = vertex1.x,\n      y2 = vertex1.y;\n\n\n  if (x1 > x2) {\n    x1 = vertex1.x;\n    y1 = vertex1.y;\n    x2 = vertex0.x;\n    y2 = vertex0.y;\n  }\n\n  var length = GeometryUtils.pointsDistance(x1, y1, x2, y2);\n  var angle = GeometryUtils.angleBetweenTwoPointsAndOrigin(x1, y1, x2, y2);\n\n  var renderedHoles = line.holes.map(function (holeID) {\n    var hole = layer.holes.get(holeID);\n    var startAt = length * hole.offset;\n    var renderedHole = catalog.getElement(hole.type).render2D(hole, layer, scene);\n\n    return React.createElement(\n      'g',\n      {\n        key: holeID,\n        transform: 'translate(' + startAt + ', 0)',\n        'data-element-root': true,\n        'data-prototype': hole.prototype,\n        'data-id': hole.id,\n        'data-selected': hole.selected,\n        'data-layer': layer.id\n      },\n      renderedHole\n    );\n  });\n\n  var thickness = line.getIn(['properties', 'thickness', 'length']);\n  var half_thickness = thickness / 2;\n\n  var renderedLine = catalog.getElement(line.type).render2D(line, layer);\n  var renderedRuler = line.selected ? React.createElement(Ruler, { unit: scene.unit, length: length, transform: 'translate(0, ' + (half_thickness + 10) + ' )' }) : null;\n\n  return React.createElement(\n    'g',\n    {\n      transform: 'translate(' + x1 + ', ' + y1 + ') rotate(' + angle + ', 0, 0)',\n      'data-element-root': true,\n      'data-prototype': line.prototype,\n      'data-id': line.id,\n      'data-selected': line.selected,\n      'data-layer': layer.id,\n      style: line.selected ? { cursor: 'move' } : {}\n    },\n    renderedRuler,\n    renderedLine,\n    renderedHoles\n  );\n}\n\nLine.propTypes = {\n  line: PropTypes.object.isRequired,\n  layer: PropTypes.object.isRequired,\n  scene: PropTypes.object.isRequired,\n  catalog: PropTypes.object.isRequired\n};"]},"metadata":{},"sourceType":"module"}