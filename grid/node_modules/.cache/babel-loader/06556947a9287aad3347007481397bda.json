{"ast":null,"code":"'use strict';\n\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport * as Three from 'three';\nimport { parseData, updateScene } from './scene-creator';\nimport { disposeScene } from './three-memory-cleaner';\nimport OrbitControls from './libs/orbit-controls';\nimport diff from 'immutablediff';\nimport * as SharedStyle from '../../shared-style';\n\nvar Scene3DViewer = function (_React$Component) {\n  _inherits(Scene3DViewer, _React$Component);\n\n  function Scene3DViewer(props) {\n    _classCallCheck(this, Scene3DViewer);\n\n    var _this = _possibleConstructorReturn(this, (Scene3DViewer.__proto__ || Object.getPrototypeOf(Scene3DViewer)).call(this, props));\n\n    _this.lastMousePosition = {};\n    _this.width = props.width;\n    _this.height = props.height;\n    _this.renderingID = 0;\n    _this.renderer = window.__threeRenderer || new Three.WebGLRenderer({\n      preserveDrawingBuffer: true\n    });\n    window.__threeRenderer = _this.renderer;\n    return _this;\n  }\n\n  _createClass(Scene3DViewer, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var actions = {\n        areaActions: this.context.areaActions,\n        holesActions: this.context.holesActions,\n        itemsActions: this.context.itemsActions,\n        linesActions: this.context.linesActions,\n        projectActions: this.context.projectActions\n      };\n      var state = this.props.state;\n      var data = state.scene;\n      var canvasWrapper = ReactDOM.findDOMNode(this.refs.canvasWrapper);\n      var scene3D = new Three.Scene(); //RENDERER\n\n      this.renderer.setClearColor(new Three.Color(SharedStyle.COLORS.white));\n      this.renderer.setSize(this.width, this.height); // LOAD DATA\n\n      var planData = parseData(data, actions, this.context.catalog);\n      scene3D.add(planData.plan);\n      scene3D.add(planData.grid);\n      var aspectRatio = this.width / this.height;\n      var camera = new Three.PerspectiveCamera(45, aspectRatio, 1, 300000);\n      scene3D.add(camera); // Set position for the camera\n\n      var cameraPositionX = -(planData.boundingBox.max.x - planData.boundingBox.min.x) / 2;\n      var cameraPositionY = (planData.boundingBox.max.y - planData.boundingBox.min.y) / 2 * 10;\n      var cameraPositionZ = (planData.boundingBox.max.z - planData.boundingBox.min.z) / 2;\n      camera.position.set(cameraPositionX, cameraPositionY, cameraPositionZ);\n      camera.up = new Three.Vector3(0, 1, 0); // HELPER AXIS\n      // let axisHelper = new Three.AxisHelper(100);\n      // scene3D.add(axisHelper);\n      // LIGHT\n\n      var light = new Three.AmbientLight(0xafafaf); // soft white light\n\n      scene3D.add(light); // Add another light\n\n      var spotLight1 = new Three.SpotLight(SharedStyle.COLORS.white, 0.30);\n      spotLight1.position.set(cameraPositionX, cameraPositionY, cameraPositionZ);\n      scene3D.add(spotLight1); // OBJECT PICKING\n\n      var toIntersect = [planData.plan];\n      var mouse = new Three.Vector2();\n      var raycaster = new Three.Raycaster();\n\n      this.mouseDownEvent = function (event) {\n        _this2.lastMousePosition.x = event.offsetX / _this2.width * 2 - 1;\n        _this2.lastMousePosition.y = -event.offsetY / _this2.height * 2 + 1;\n      };\n\n      this.mouseUpEvent = function (event) {\n        event.preventDefault();\n        mouse.x = event.offsetX / _this2.width * 2 - 1;\n        mouse.y = -(event.offsetY / _this2.height) * 2 + 1;\n\n        if (Math.abs(mouse.x - _this2.lastMousePosition.x) <= 0.02 && Math.abs(mouse.y - _this2.lastMousePosition.y) <= 0.02) {\n          raycaster.setFromCamera(mouse, camera);\n          var intersects = raycaster.intersectObjects(toIntersect, true);\n\n          if (intersects.length > 0 && !isNaN(intersects[0].distance)) {\n            intersects[0].object.interact && intersects[0].object.interact();\n          } else {\n            _this2.context.projectActions.unselectAll();\n          }\n        }\n      };\n\n      this.renderer.domElement.addEventListener('mousedown', this.mouseDownEvent);\n      this.renderer.domElement.addEventListener('mouseup', this.mouseUpEvent);\n      this.renderer.domElement.style.display = 'block'; // add the output of the renderer to the html element\n\n      canvasWrapper.appendChild(this.renderer.domElement); // create orbit controls\n\n      var orbitController = new OrbitControls(camera, this.renderer.domElement);\n      var spotLightTarget = new Three.Object3D();\n      spotLightTarget.name = 'spotLightTarget';\n      spotLightTarget.position.set(orbitController.target.x, orbitController.target.y, orbitController.target.z);\n      scene3D.add(spotLightTarget);\n      spotLight1.target = spotLightTarget;\n\n      var render = function render() {\n        orbitController.update();\n        spotLight1.position.set(camera.position.x, camera.position.y, camera.position.z);\n        spotLightTarget.position.set(orbitController.target.x, orbitController.target.y, orbitController.target.z);\n        camera.updateMatrix();\n        camera.updateMatrixWorld();\n\n        for (var elemID in planData.sceneGraph.LODs) {\n          planData.sceneGraph.LODs[elemID].update(camera);\n        }\n\n        _this2.renderer.render(scene3D, camera);\n\n        _this2.renderingID = requestAnimationFrame(render);\n      };\n\n      render();\n      this.orbitControls = orbitController;\n      this.camera = camera;\n      this.scene3D = scene3D;\n      this.planData = planData;\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      cancelAnimationFrame(this.renderingID);\n      this.orbitControls.dispose();\n      this.renderer.domElement.removeEventListener('mousedown', this.mouseDownEvent);\n      this.renderer.domElement.removeEventListener('mouseup', this.mouseUpEvent);\n      disposeScene(this.scene3D);\n      this.scene3D.remove(this.planData.plan);\n      this.scene3D.remove(this.planData.grid);\n      this.scene3D = null;\n      this.planData = null;\n      this.camera = null;\n      this.orbitControls = null;\n      this.renderer.renderLists.dispose();\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      var width = nextProps.width,\n          height = nextProps.height;\n      var actions = {\n        areaActions: this.context.areaActions,\n        holesActions: this.context.holesActions,\n        itemsActions: this.context.itemsActions,\n        linesActions: this.context.linesActions,\n        projectActions: this.context.projectActions\n      };\n      this.width = width;\n      this.height = height;\n      this.camera.aspect = width / height;\n      this.camera.updateProjectionMatrix();\n\n      if (nextProps.state.scene !== this.props.state.scene) {\n        var changedValues = diff(this.props.state.scene, nextProps.state.scene);\n        updateScene(this.planData, nextProps.state.scene, this.props.state.scene, changedValues.toJS(), actions, this.context.catalog);\n      }\n\n      this.renderer.setSize(width, height);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return React.createElement('div', {\n        ref: 'canvasWrapper'\n      });\n    }\n  }]);\n\n  return Scene3DViewer;\n}(React.Component);\n\nexport default Scene3DViewer;\nScene3DViewer.propTypes = {\n  state: PropTypes.object.isRequired,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired\n};\nScene3DViewer.contextTypes = {\n  areaActions: PropTypes.object.isRequired,\n  holesActions: PropTypes.object.isRequired,\n  itemsActions: PropTypes.object.isRequired,\n  linesActions: PropTypes.object.isRequired,\n  projectActions: PropTypes.object.isRequired,\n  catalog: PropTypes.object\n};","map":{"version":3,"sources":["/home/srihari/Desktop/Sparkplug_PandemicSparks/grid/node_modules/react-planner/es/components/viewer3d/viewer3d.js"],"names":["_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","Constructor","protoProps","staticProps","prototype","_classCallCheck","instance","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","create","constructor","value","setPrototypeOf","__proto__","React","PropTypes","ReactDOM","Three","parseData","updateScene","disposeScene","OrbitControls","diff","SharedStyle","Scene3DViewer","_React$Component","_this","getPrototypeOf","lastMousePosition","width","height","renderingID","renderer","window","__threeRenderer","WebGLRenderer","preserveDrawingBuffer","componentDidMount","_this2","actions","areaActions","context","holesActions","itemsActions","linesActions","projectActions","state","data","scene","canvasWrapper","findDOMNode","refs","scene3D","Scene","setClearColor","Color","COLORS","white","setSize","planData","catalog","add","plan","grid","aspectRatio","camera","PerspectiveCamera","cameraPositionX","boundingBox","max","x","min","cameraPositionY","y","cameraPositionZ","z","position","set","up","Vector3","light","AmbientLight","spotLight1","SpotLight","toIntersect","mouse","Vector2","raycaster","Raycaster","mouseDownEvent","event","offsetX","offsetY","mouseUpEvent","preventDefault","Math","abs","setFromCamera","intersects","intersectObjects","isNaN","distance","object","interact","unselectAll","domElement","addEventListener","style","display","appendChild","orbitController","spotLightTarget","Object3D","name","render","update","updateMatrix","updateMatrixWorld","elemID","sceneGraph","LODs","requestAnimationFrame","orbitControls","componentWillUnmount","cancelAnimationFrame","dispose","removeEventListener","remove","renderLists","componentWillReceiveProps","nextProps","aspect","updateProjectionMatrix","changedValues","toJS","createElement","ref","Component","propTypes","isRequired","number","contextTypes"],"mappings":"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","sourcesContent":["'use strict';\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport ReactDOM from 'react-dom';\nimport * as Three from 'three';\nimport { parseData, updateScene } from './scene-creator';\nimport { disposeScene } from './three-memory-cleaner';\nimport OrbitControls from './libs/orbit-controls';\nimport diff from 'immutablediff';\nimport * as SharedStyle from '../../shared-style';\n\nvar Scene3DViewer = function (_React$Component) {\n  _inherits(Scene3DViewer, _React$Component);\n\n  function Scene3DViewer(props) {\n    _classCallCheck(this, Scene3DViewer);\n\n    var _this = _possibleConstructorReturn(this, (Scene3DViewer.__proto__ || Object.getPrototypeOf(Scene3DViewer)).call(this, props));\n\n    _this.lastMousePosition = {};\n    _this.width = props.width;\n    _this.height = props.height;\n    _this.renderingID = 0;\n\n    _this.renderer = window.__threeRenderer || new Three.WebGLRenderer({ preserveDrawingBuffer: true });\n    window.__threeRenderer = _this.renderer;\n    return _this;\n  }\n\n  _createClass(Scene3DViewer, [{\n    key: 'componentDidMount',\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var actions = {\n        areaActions: this.context.areaActions,\n        holesActions: this.context.holesActions,\n        itemsActions: this.context.itemsActions,\n        linesActions: this.context.linesActions,\n        projectActions: this.context.projectActions\n      };\n\n      var state = this.props.state;\n\n      var data = state.scene;\n      var canvasWrapper = ReactDOM.findDOMNode(this.refs.canvasWrapper);\n\n      var scene3D = new Three.Scene();\n\n      //RENDERER\n      this.renderer.setClearColor(new Three.Color(SharedStyle.COLORS.white));\n      this.renderer.setSize(this.width, this.height);\n\n      // LOAD DATA\n      var planData = parseData(data, actions, this.context.catalog);\n\n      scene3D.add(planData.plan);\n      scene3D.add(planData.grid);\n\n      var aspectRatio = this.width / this.height;\n      var camera = new Three.PerspectiveCamera(45, aspectRatio, 1, 300000);\n\n      scene3D.add(camera);\n\n      // Set position for the camera\n      var cameraPositionX = -(planData.boundingBox.max.x - planData.boundingBox.min.x) / 2;\n      var cameraPositionY = (planData.boundingBox.max.y - planData.boundingBox.min.y) / 2 * 10;\n      var cameraPositionZ = (planData.boundingBox.max.z - planData.boundingBox.min.z) / 2;\n\n      camera.position.set(cameraPositionX, cameraPositionY, cameraPositionZ);\n      camera.up = new Three.Vector3(0, 1, 0);\n\n      // HELPER AXIS\n      // let axisHelper = new Three.AxisHelper(100);\n      // scene3D.add(axisHelper);\n\n      // LIGHT\n      var light = new Three.AmbientLight(0xafafaf); // soft white light\n      scene3D.add(light);\n\n      // Add another light\n\n      var spotLight1 = new Three.SpotLight(SharedStyle.COLORS.white, 0.30);\n      spotLight1.position.set(cameraPositionX, cameraPositionY, cameraPositionZ);\n      scene3D.add(spotLight1);\n\n      // OBJECT PICKING\n      var toIntersect = [planData.plan];\n      var mouse = new Three.Vector2();\n      var raycaster = new Three.Raycaster();\n\n      this.mouseDownEvent = function (event) {\n        _this2.lastMousePosition.x = event.offsetX / _this2.width * 2 - 1;\n        _this2.lastMousePosition.y = -event.offsetY / _this2.height * 2 + 1;\n      };\n\n      this.mouseUpEvent = function (event) {\n        event.preventDefault();\n\n        mouse.x = event.offsetX / _this2.width * 2 - 1;\n        mouse.y = -(event.offsetY / _this2.height) * 2 + 1;\n\n        if (Math.abs(mouse.x - _this2.lastMousePosition.x) <= 0.02 && Math.abs(mouse.y - _this2.lastMousePosition.y) <= 0.02) {\n\n          raycaster.setFromCamera(mouse, camera);\n          var intersects = raycaster.intersectObjects(toIntersect, true);\n\n          if (intersects.length > 0 && !isNaN(intersects[0].distance)) {\n            intersects[0].object.interact && intersects[0].object.interact();\n          } else {\n            _this2.context.projectActions.unselectAll();\n          }\n        }\n      };\n\n      this.renderer.domElement.addEventListener('mousedown', this.mouseDownEvent);\n      this.renderer.domElement.addEventListener('mouseup', this.mouseUpEvent);\n      this.renderer.domElement.style.display = 'block';\n\n      // add the output of the renderer to the html element\n      canvasWrapper.appendChild(this.renderer.domElement);\n\n      // create orbit controls\n      var orbitController = new OrbitControls(camera, this.renderer.domElement);\n      var spotLightTarget = new Three.Object3D();\n      spotLightTarget.name = 'spotLightTarget';\n      spotLightTarget.position.set(orbitController.target.x, orbitController.target.y, orbitController.target.z);\n      scene3D.add(spotLightTarget);\n      spotLight1.target = spotLightTarget;\n\n      var render = function render() {\n        orbitController.update();\n        spotLight1.position.set(camera.position.x, camera.position.y, camera.position.z);\n        spotLightTarget.position.set(orbitController.target.x, orbitController.target.y, orbitController.target.z);\n        camera.updateMatrix();\n        camera.updateMatrixWorld();\n\n        for (var elemID in planData.sceneGraph.LODs) {\n          planData.sceneGraph.LODs[elemID].update(camera);\n        }\n\n        _this2.renderer.render(scene3D, camera);\n        _this2.renderingID = requestAnimationFrame(render);\n      };\n\n      render();\n\n      this.orbitControls = orbitController;\n      this.camera = camera;\n      this.scene3D = scene3D;\n      this.planData = planData;\n    }\n  }, {\n    key: 'componentWillUnmount',\n    value: function componentWillUnmount() {\n      cancelAnimationFrame(this.renderingID);\n\n      this.orbitControls.dispose();\n\n      this.renderer.domElement.removeEventListener('mousedown', this.mouseDownEvent);\n      this.renderer.domElement.removeEventListener('mouseup', this.mouseUpEvent);\n\n      disposeScene(this.scene3D);\n      this.scene3D.remove(this.planData.plan);\n      this.scene3D.remove(this.planData.grid);\n\n      this.scene3D = null;\n      this.planData = null;\n      this.camera = null;\n      this.orbitControls = null;\n      this.renderer.renderLists.dispose();\n    }\n  }, {\n    key: 'componentWillReceiveProps',\n    value: function componentWillReceiveProps(nextProps) {\n      var width = nextProps.width,\n          height = nextProps.height;\n\n\n      var actions = {\n        areaActions: this.context.areaActions,\n        holesActions: this.context.holesActions,\n        itemsActions: this.context.itemsActions,\n        linesActions: this.context.linesActions,\n        projectActions: this.context.projectActions\n      };\n\n      this.width = width;\n      this.height = height;\n\n      this.camera.aspect = width / height;\n\n      this.camera.updateProjectionMatrix();\n\n      if (nextProps.state.scene !== this.props.state.scene) {\n        var changedValues = diff(this.props.state.scene, nextProps.state.scene);\n        updateScene(this.planData, nextProps.state.scene, this.props.state.scene, changedValues.toJS(), actions, this.context.catalog);\n      }\n\n      this.renderer.setSize(width, height);\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return React.createElement('div', { ref: 'canvasWrapper' });\n    }\n  }]);\n\n  return Scene3DViewer;\n}(React.Component);\n\nexport default Scene3DViewer;\n\n\nScene3DViewer.propTypes = {\n  state: PropTypes.object.isRequired,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired\n};\n\nScene3DViewer.contextTypes = {\n  areaActions: PropTypes.object.isRequired,\n  holesActions: PropTypes.object.isRequired,\n  itemsActions: PropTypes.object.isRequired,\n  linesActions: PropTypes.object.isRequired,\n  projectActions: PropTypes.object.isRequired,\n  catalog: PropTypes.object\n};"]},"metadata":{},"sourceType":"module"}